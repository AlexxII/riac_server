{"version":3,"sources":["mainconfig.js","serviceWorker.js","cache.js","containers/UserProfile/mutations.js","containers/App/queries.js","containers/UserProfile/index.js","components/ServiceMenu/ServiceMenu.js","components/HomeBar/HomeBar.js","modules/PollHome/components/ActiveAvatar/index.js","modules/PollHome/components/PassiveAvatar/index.js","modules/PollHome/lib/constants.js","modules/PollHome/components/PollCard/PollCard.js","modules/PollHome/components/ListOfPolls/ListOfPolls.js","modules/PollHome/lib/utils.js","modules/PollHome/components/XmlInput/index.js","modules/PollHome/components/AddPollDialog/AddPollDialog.js","components/AddFab/index.js","modules/PollHome/components/AddPollLogic/AddPollLogic.js","components/LoadingState/LoadingState.js","components/LoadingStatus/LoadingStatus.js","components/SystemNoti/SystemNoti.js","components/ErrorState/ErrorState.js","modules/PollHome/queries.js","modules/PollHome/mutations.js","modules/PollHome/PollHome.js","pages/HomePage.js","components/SettingBar/index.js","modules/PollDrive/components/FreeAnswer/index.js","modules/PollDrive/components/Answer/index.js","modules/PollDrive/components/MultipleAnswers/index.js","modules/PollDrive/components/Question/index.js","modules/PollDrive/components/FinishDialog/index.js","modules/PollDrive/lib/keycodes.js","modules/PollDrive/lib/defineSelectedAnswer.js","modules/PollDrive/lib/questionFormation.js","modules/PollDrive/lib/beep.js","modules/PollDrive/components/DriveLogic/DriveLogic.js","components/DialogWithSelect/index.js","modules/PollDrive/queries.js","modules/PollDrive/mutaions.js","modules/PollDrive/lib/utils.js","modules/PollDrive/PollDrive.js","pages/DrivePage.js","components/AdaptiveTabs/AdaptiveTabs.js","modules/PollResults/containers/Generation/queries.js","modules/PollResults/containers/Generation/index.js","components/ConfirmDialog/ConfirmDialog.js","modules/PollResults/components/RespondentCard/index.js","modules/PollResults/containers/OverallResults/queries.js","modules/PollResults/containers/OverallResults/mutations.js","modules/PollResults/containers/OverallResults/OverallResults.js","modules/PollResults/components/BarChart/BarChart.js","modules/PollResults/components/LinearTable/LinearTable.js","modules/PollResults/containers/LinearDistribution/queries.js","modules/PollResults/containers/LinearDistribution/LinearDistribution.js","modules/PollResults/containers/BatchInput/queries.js","modules/PollResults/containers/BatchInput/BatchInput.js","modules/PollResults/PollResults.js","pages/ResultsPage.js","modules/DataAnalyzer/lib/xmlparser.js","modules/DataAnalyzer/components/ParchaXmlAnalyzer/index.js","modules/DataAnalyzer/components/WarShow/index.js","modules/DataAnalyzer/lib/txtparser.js","modules/DataAnalyzer/components/WordAnalyzer/index.js","modules/DataAnalyzer/index.js","pages/AnalyzePage.js","pages/TesterPage.js","modules/PollSettings/containers/Common/queries.js","modules/PollSettings/containers/Common/Common.js","modules/PollSettings/containers/ConfigEditor/queries.js","modules/PollSettings/containers/ConfigEditor/mutations.js","modules/PollSettings/containers/ConfigEditor/ConfigEditor.js","modules/PollSettings/containers/DeletePoll/mutations.js","modules/PollSettings/containers/DeletePoll/DeletePoll.js","modules/PollSettings/containers/CitiesEditor/queries.js","modules/PollSettings/containers/CitiesEditor/mutations.js","modules/PollSettings/containers/CitiesEditor/CitiesEditor.js","modules/PollSettings/components/QuestionCard/index.js","modules/PollSettings/containers/ReoderEditor/queries.js","modules/PollSettings/containers/ReoderEditor/mutations.js","modules/PollSettings/containers/ReoderEditor/ReoderEditor.js","modules/PollSettings/PollSettings.js","pages/SettingsPage.js","modules/PollFiles/index.js","pages/AttachmentPage.js","modules/PollWiki/index.js","pages/WikiPage.js","modules/PollAppSettings/containers/Cities/queries.js","modules/PollAppSettings/containers/Cities/mutations.js","modules/PollAppSettings/containers/Cities/Cities.js","modules/PollAppSettings/containers/Sample/Sample.js","modules/PollAppSettings/PollAppSettings.js","pages/PollAppSettingsPage.js","modules/Users/components/UserAddDialog/UserAddDialog.js","modules/Users/components/UserUpdateDialog/UserUpdateDialog.js","modules/Users/components/PassResetDialog/PassResetDialog.js","modules/Users/components/UsersTable/UsersTable.js","modules/Users/queries.js","modules/Users/mutations.js","modules/Users/Users.js","pages/UsersPage.js","pages/NotFoundPage.js","containers/Router/index.js","components/SignInForm/index.js","containers/App/mutations.js","containers/App/App.js","index.js"],"names":["mainUrl","Boolean","window","location","hostname","match","cache","InMemoryCache","typePolicies","Poll","fields","question","read","LOGOUT_MUTATION","gql","CURRENT_USER_QUERY","UserProfile","close","currentUser","useApolloClient","readQuery","query","useState","anchorEl","setAnchorEl","isMenuOpen","useMutation","update","writeQuery","data","logout","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","IconButton","edge","aria-label","aria-controls","aria-haspopup","e","currentTarget","color","Badge","badgeContent","Tooltip","title","username","useStyles","makeStyles","list","width","fullList","ServiceMenu","classes","Drawer","anchor","className","clsx","role","onKeyDown","List","Typography","variant","style","fontSize","to","ListItem","button","key","ListItemIcon","ListItemText","primary","Divider","theme","grow","flexGrow","menuButton","marginRight","spacing","display","breakpoints","up","inputRoot","sectionDesktop","sectionMobile","link","textDecoration","HomeBar","React","appAnchorEl","setAppAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","menuOpen","setMenuOpen","isMobileMenuOpen","isAppMenuOpen","handleAppsMenuOpen","event","handleMobileMenuClose","handleAppMenuClose","renderAppsMenu","renderMobileMenu","AppBar","position","Toolbar","noWrap","StyledBadge","withStyles","badge","backgroundColor","boxShadow","palette","background","paper","top","left","height","borderRadius","animation","border","content","transform","opacity","root","avatar","props","ActiveAvatar","overlap","liter","PassiveAvatar","pollWays","pollTypes","maxWidth","margin","header","padding","flex","media","expand","marginLeft","transition","transitions","create","duration","shortest","expandOpen","PollCard","Avatar","active","type","Results","code","Drive","Attachment","Settings","Wiki","Card","CardHeader","action","subheader","startDate","endDate","CardContent","Grid","container","item","xs","sm","gutterBottom","way","sample","CardActions","disableSpacing","cities","length","justify","ListOfPolls","polls","map","poll","i","xmlparser","xmlString","xml","parser","DOMParser","parsererrorNS","parseFromString","getElementsByTagName","namespaceURI","doc","getElementsByTagNameNS","testXml","element","getAttribute","start","end","structure","backdrop","zIndex","drawer","XmlImport","field","errorMessage","setFieldValue","touched","name","onBlur","value","onChange","processing","setProcessing","undefined","count","fileUpload","useRef","Fragment","Backdrop","CircularProgress","preventDefault","reader","FileReader","file","target","files","onloadend","xmlText","result","console","log","regEx","replace","readAsText","Button","startIcon","current","click","TextInputComponent","label","TextField","fullWidth","error","helperText","InputLabelProps","shrink","SelectInputComponent","array","select","option","AddPollDialog","closeHndl","saveHndl","SUPPORTED_FORMATS","validationSchema","yup","shape","required","startdate","enddate","matches","min","ensure","xmlfile","test","size","includes","Dialog","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","aria-describedby","DialogTitle","DialogContent","initialValues","comment","validateOnBlur","onSubmit","values","setSubmitting","errors","isSubmitting","dirty","handleSubmit","handleReset","handleChange","handleBlur","component","XmlInput","DialogActions","disabled","small","bottom","right","AddFub","Fab","AddPollLogic","addPoll","openDialog","setOpenDialog","xmlParse","questions","logic","topic","Promise","resolve","reject","questionsLen","questionData","limit","order","answers","questionAnswers","answersLen","answerData","padStart","defaultLogic","logicLen","logicData","restrict","topics","topicsLen","topicData","basicLogicFormation","basicLogic","reduce","acum","val","exclude","unique","extLogic","filter","obj","difficult","freeAnswers","AddFab","xmlFile","then","basicData","pollInfo","variables","newPoll","shortTitle","poolOfQuestions","LoadingState","imageWidth","imageHeight","Box","textAlign","image","clone","mb","description","defaultProps","LoadingStatus","SystemNoti","Alert","elevation","Snackbar","autoHideDuration","severity","text","popover","pointerEvents","ErrorState","handlePopoverOpen","handlePopoverClose","PopOver","Popover","disableRestoreFocus","onMouseEnter","onMouseLeave","GET_ALL_ACTIVE_POLLS","ADD_NEW_POLL","PollHome","noti","setNoti","useQuery","pollsLoading","loading","pollsError","pollsData","onError","addLoading","Loading","Container","HomePage","arrow","SettingBar","FreeAnswer","answer","focusHandler","blurHandler","textInput","useEffect","focus","freeAnswerText","showFreeAnswer","ref","data-code","data-keycode","keyCode","placeholder","onKeyUp","replaceAll","blur","onFocus","Answer","clickHandler","settings","answerRef","answerCls","answerTitle","selected","push","join","showIndex","codesShow","freeAnswer","excludeM","marginTop","errorText","Tags","multipleHandler","setAnswers","codes","setCodes","state","setError","defVal","codesOfAnswers","Autocomplete","multiple","options","reason","getOptionLabel","getOptionDisabled","renderOption","renderTags","getTagProps","index","Chip","renderInput","params","Question","mega","FinishDialog","handleClose","finishAll","confirm","DialogContentText","autoFocus","serviceBtns","resetBtn","confirmBtns","castCodes","97","98","99","100","101","102","103","104","105","answersCodes","keycodes","cast","defineSelectedAnswer","checkAnswerSelected","do","trueCode","checkServiceBtn","checkResetBtn","checkConfirmBtn","questionFormation","setResults","keyCodesPool","codesPool","visibleAnswers","invisible","criticalExclude","uniqueIn","selectedIn","uniqueSelected","newAnswers","suffix","pool","answerCode","qSuffix","megaMltp","prevState","next","mAnswers","beep","config","audioCtx","AudioContext","webkitAudioContext","Object","assign","volume","frequency","oscillator","createOscillator","gainNode","createGain","connect","destination","gain","setTimeout","stop","PollDrive","logics","setCurrentQuestion","saveAndGoBack","saveWorksheet","questionsLimit","setQuestion","userSettings","setUserSettings","direction","setDirection","setCount","results","finish","setFinish","finishDialog","setFinishDialog","inlineMessage","setInlineMessage","keyUpHandler","nodeName","nextStep","mainLogic","confirmResults","resetAnswers","finishRespondent","goToNext","goToPrevious","document","addEventListener","removeEventListener","newQuestion","checkRespondentFinish","newResults","resPool","eCode","savedCodes","excludePool","selectedAnswer","el","answerId","nonCriticalExclude","newResultState","InlineInformer","alignItems","md","FormControlLabel","control","Checkbox","defaultChecked","labelPlacement","Hidden","only","mdUp","dataset","selectedCode","selectedKeyCode","keycode","resultsPool","clearPool","DialogWithSelect","save","setState","Select","native","selectedIndex","innerHTML","GET_POLL_DATA","SAVE_NEW_RESULT","parseIni","area","regex","section","param","lines","split","forEach","line","parseParams","property","concatLogic","temp","trimData","srange","output","exec","range","concat","rangeToArray","normalizeLogic","normalizedLogic","critical","invisiblePool","client","show","message","setMessage","history","useHistory","setPoll","backOpen","setBackOpen","poolOfCities","setPoolOfCities","openCityDialog","setOpenCityDialog","setPollLogic","currentCity","setCurrentCity","currentQuestion","onCompleted","_","__","handleConfigFile","path","pollLoading","filePath","fetch","r","normLogic","saveResult","handleMessageClose","newOrderQuestion","slice","sort","a","b","visibleQuestions","lAnswers","prepareResultData","city","DriveLogic","user","res","DrivePage","useParams","TabPanel","children","p","other","hidden","allProps","tabs","minWidth","borderRight","divider","overflow","Vertical","Tabs","orientation","scrollButtons","Tab","Horizontal","AdaptiveTabs","setValue","newValue","xsDown","smUp","Generation","setQuestions","setLogic","questionsCount","answersCount","modQuestions","worksheetsCount","ConfirmDialog","RespondentCard","edit","Paper","processed","checked","inputProps","created","lastModified","GET_FILTER_SELECTS","GET_POLL_RESULTS","DELETE_RESULTS","OverallResults","ddate","setDdate","Date","delOpen","setDelOpen","activeResults","setActiveResults","intervievers","status","sex","age","filters","setFilters","activeFilters","setActiveFilters","selectPool","setSelectPool","lastSelectedIndex","setLastSelectedIndex","delConfirm","pollResults","pollResultsLoading","filtersResults","category","iViever","deleteResult","loadOnDelete","rrr","showDetails","datails","handleEdit","handleSelect","nativeEvent","shiftKey","rr","ctrlKey","n","handleResultsExport","lResults","allResults","details","downloadIt","createElement","Blob","href","URL","createObjectURL","download","body","appendChild","icon","checkedIcon","deletedPool","deleteResults","del","modify","existingRefs","readField","respRef","lg","date","InputProps","startAdornment","InputAdornment","cursor","limitTags","disableCloseOnSelect","clearOnEscape","noOptionsText","groupBy","m","BarChart","labels","set","chartRef","myChartRef","getContext","Chart","datasets","showLines","hover","animationDuration","responsiveAnimationDuration","legend","fontColor","scales","yAxes","ticks","beginAtZero","LinearTable","colspan","GET_POLL_WITH_RESULTS","LinearDistribution","pollResultsError","JSON","stringify","BatchInput","dataPool","setDataPool","displayData","setDisplayData","pollData","resultPoolLength","newQuestionsPool","newAnswersPool","pollDataLoading","pollDataError","onInput","oprArray","arr","aLength","splitedCodesArrays","tempAr","tempLength","normTemp","j","atomData","trim","PollResults","outData","resultData","unit","lan","lon","lQuestions","answersPool","ParchaXmlAnalyzer","parchaData","setParchaData","UnitInfo","toString","WarShow","person","placesOfWork","places","workD","workDays","d","substring","processLists","war","pens","resulNeedData","doesNotMatch","warMatchPool","pensData","empty","need","warPersonName","warPersonBorn","warPersonSurname","toLowerCase","comp","pensNeedData","resultNotNeedData","warPersonNum","warPersonRank","warPersonDismissal","persD","compareLists","finalResult","personData","splited","glueNormData","getDateFromString","dString","dd","month","year","placesRaw","dates","work","dataReg","k","WordAnalyzer","setPensData","warData","setWarData","ready","setReady","processedData","setProcessedData","finalData","setFinalData","persons","warior","full","pensParser","pData","itrestPerson","dateReg","dateOfDismissal","parse","dateMatch","maxNeedDate","parseInt","workDate","workArray","dateInWork","PollSettings","Analyze","paddingTop","DataAnalyzer","TesterPage","ServiceIcons","AnswerCard","QuestionTopic","QuestionCard","CommonSetting","handleConfigFileAndUpdateCache","updatedQuestions","modulateQuestionsWithLogic","ffffuck","logicQuery","saveConfigChanges","ConfigEditor","updated","setUpdated","setConfig","setFilePath","textRef","pollLogic","refetchQueries","saveConfig","configSaveLoading","defaultValue","DELETE_POLL","DeletePoll","setOpen","incorrect","setIncorrect","delPoll","toUpperCase","handlePollDel","GET_ALL_CITIES_AND_ACTIVE","DELETE_CITY_FROM_ACTIVE","SET_ACTIVE_CITIES","CitiesEditor","clear","setClear","delId","setDelId","allCities","setAllCitites","availableCities","setAvailableCities","setSelected","pollCities","citiesData","citiesLoading","cititesError","setPollCity","setCityActive","cityActivationLoading","deleteCityFromActive","aCitites","deleteCity","deleteCityLoading","handleCityDelete","deleteCityCompletely","CityCard","xl","population","selectedCities","handleLimitInput","setVal","currentValue","pollQuery","saveNewLimit","saveNewOrder","ReoderEditor","setPrevOrder","pollError","saveLimit","limitSaveLoading","newOrder","saveOrder","saveOrderLoading","inputData","SortableItem","SortableElement","SortableList","SortableContainer","onSortEnd","oldIndex","newIndex","newArray","arrayMove","deltaArray","axis","Common","PollFiles","PollWiki","GET_CITITES_WITH_CATEGORIES","CITY_SAVE_MUTATION","CITY_EDIT_SAVE","DELETE_CITY","Cities","cityAdd","setCityAdd","citiesError","newCity","saveCity","saveCityLoading","cityEdit","saveCityEdit","saveCityEditLoading","editting","setEditting","CityAdd","setEdit","setTitle","setPopulation","setCategory","SelectProps","cityCategories","newData","handleSaveEdit","cityData","Sample","PollAppSettings","PollAppSettingsPage","UserAddDialog","saveNewUser","selects","userData","setUserData","login","password","FormControl","InputLabel","htmlFor","userStatus","FormHelperText","rights","userRights","UserUpdateDialog","updateUser","PassResetDialog","passReset","descendingComparator","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","indeterminate","headCell","align","TableSortLabel","hideSortIcon","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","secondary","main","lighten","light","dark","EnhancedTableToolbar","deleteDelete","setUserAddOpen","marginBottom","table","clip","UsersTable","users","addNewUser","deleteUsers","resetPassword","deleteDialog","setDeleteDialog","userAddOpen","userUpdate","setUserUpdate","setPassReset","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","TableContainer","Table","newSelecteds","TableBody","comparator","stabilizedThis","stableSort","getComparator","row","isItemSelected","indexOf","labelId","aria-checked","tabIndex","newSelected","handleClick","scope","handleRowEdit","handlePassReset","TablePagination","rowsPerPageOptions","labelRowsPerPage","onChangePage","newPage","onChangeRowsPerPage","GET_ALL_USERS","GET_AUTH_SELECTS","ADD_NEW_USER","UPDATE_USER","DELETE_USERS","RESET_PASSWORD","Users","dataLoading","dataError","selectsLoading","selectsError","deleteLoading","addUser","updateLoading","UsersPage","NotFoundPage","Router","exact","ResultsPage","SettingsPage","AnalyzePage","AttachmentPage","WikiPage","Copyright","getFullYear","flexDirection","form","submit","forget","SignIn","onLogin","userError","passwordError","setlogin","setPassword","CssBaseline","noValidate","autoComplete","SIGNIN_MUTATION","App","setPasswordError","setUserError","signin","signinLoading","SignInForm","ApolloClient","uri","credentials","connectToDevTools","ReactDOM","render","StrictMode","ApolloProvider","getElementById","navigator","serviceWorker","registration","unregister","catch"],"mappings":"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","file":"static/js/main.683004ad.chunk.js","sourcesContent":["// export const mainUrl = 'http://localhost:4000'\r\nexport const mainUrl = 'http://192.168.31.82:4000'","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { InMemoryCache } from '@apollo/client'\r\n\r\nexport const cache = new InMemoryCache({\r\n  typePolicies: {\r\n    Poll: {\r\n      fields: {\r\n        question: {\r\n          read(question) {\r\n            return question\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n})","import { gql } from '@apollo/client';\r\n\r\nexport const LOGOUT_MUTATION = gql`\r\n  mutation Logout {\r\n    logout\r\n  }\r\n`;","import { gql } from '@apollo/client';\r\n\r\nexport const CURRENT_USER_QUERY = gql`\r\n  query {\r\n    currentUser {\r\n      id\r\n      username\r\n    }\r\n  }\r\n`;","import React, { Fragment, useState } from 'react'\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport { gql, useApolloClient } from '@apollo/client'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { LOGOUT_MUTATION } from './mutations'\r\nimport { CURRENT_USER_QUERY } from '../../containers/App/queries'\r\n\r\nconst UserProfile = ({ close }) => {\r\n  const client = useApolloClient();\r\n  const { currentUser } = client.readQuery({\r\n    query: gql`\r\n    query {\r\n      currentUser {\r\n        id\r\n        username\r\n      }\r\n    }\r\n    `,\r\n  })\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const [logout] = useMutation(\r\n    LOGOUT_MUTATION,\r\n    {\r\n      update: (cache) => cache.writeQuery({\r\n        query: CURRENT_USER_QUERY,\r\n        data: { currentUser: null },\r\n      }),\r\n    },\r\n  );\r\n  const menuId = 'account-menu';\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleProfileExit = () => {\r\n    logout()\r\n    handleMenuClose()\r\n  }\r\n  const handleProfileMenuOpen = (e) => {\r\n    setAnchorEl(e.currentTarget)\r\n  }\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      {/* <MenuItem onClick={handleMenuClose}>Профиль</MenuItem> */}\r\n      <MenuItem onClick={handleProfileExit}>Выход</MenuItem>\r\n    </Menu>\r\n  );\r\n  return (\r\n    <Fragment>\r\n      <IconButton\r\n        edge=\"end\"\r\n        aria-label=\"account of current user\"\r\n        aria-controls={menuId}\r\n        aria-haspopup=\"true\"\r\n        onClick={handleProfileMenuOpen}\r\n        color=\"inherit\"\r\n      >\r\n        <Badge badgeContent={0} color=\"secondary\">\r\n          <Tooltip\r\n            title={currentUser.username}\r\n          >\r\n            <AccountCircle />\r\n          </Tooltip>\r\n        </Badge>\r\n      </IconButton>\r\n      { renderMenu}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UserProfile","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn';\r\nimport PieChartIcon from '@material-ui/icons/PieChart';\r\n\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function ServiceMenu({ open, close }) {\r\n  const classes = useStyles();\r\n  const list = () => (\r\n    <div\r\n      className={clsx(classes.list)}\r\n      role=\"presentation\"\r\n      onClick={close}\r\n      onKeyDown={close}\r\n    >\r\n      <List>\r\n        <Typography variant=\"overline\" style={{ fontSize: '10px' }}>\r\n          подсистема опросов\r\n        </Typography>\r\n        <NavLink to='analyze'>\r\n          <ListItem button key={1}>\r\n            <ListItemIcon><PieChartIcon /></ListItemIcon>\r\n            <ListItemText primary=\"Анализатор\" />\r\n          </ListItem>\r\n        </NavLink>\r\n        {/* <NavLink to='tester'>\r\n          <ListItem button key={1}>\r\n            <ListItemIcon><AlarmOnIcon /></ListItemIcon>\r\n            <ListItemText primary=\"Тест интерфейса\" />\r\n          </ListItem>\r\n        </NavLink> */}\r\n        <ListItem button key={1}>\r\n          <ListItemIcon><PhoneIcon /></ListItemIcon>\r\n          <ListItemText primary=\"Генератор номеров\" />\r\n        </ListItem>\r\n        <NavLink to='poll-app-settings'>\r\n          <ListItem button key={1}>\r\n            <ListItemIcon><SettingsIcon /></ListItemIcon>\r\n            <ListItemText primary=\"Настройки\" />\r\n          </ListItem>\r\n        </NavLink>\r\n        <Typography variant=\"overline\" style={{ fontSize: '10px' }}>\r\n          общие\r\n        </Typography>\r\n        <Divider />\r\n        <NavLink to='settings/users'>\r\n          <ListItem button key={1}>\r\n            <ListItemIcon><GroupIcon /></ListItemIcon>\r\n            <ListItemText primary=\"Пользователи\" />\r\n          </ListItem>\r\n        </NavLink>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Drawer anchor={'left'} open={open} onClose={close} className=\"left-app-menu\">\r\n      {list('left')}\r\n    </Drawer>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport UserProfile from '../../containers/UserProfile'\r\nimport ServiceMenu from '../ServiceMenu'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('xs')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  link: {\r\n    color: 'white',\r\n    textDecoration: 'none'\r\n  }\r\n}));\r\n\r\nconst HomeBar = ({ title }) => {\r\n  const classes = useStyles();\r\n  const [appAnchorEl, setAppAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const [menuOpen, setMenuOpen] = React.useState(false)\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n  const isAppMenuOpen = Boolean(appAnchorEl);\r\n\r\n  const handleAppsMenuOpen = (event) => {\r\n    setAppAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n\r\n  const handleAppMenuClose = () => {\r\n    setAppAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  }\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const openServiceMenu = (e) => {\r\n    setMenuOpen(true)\r\n  }\r\n\r\n  const closeServiceMenu = (e) => {\r\n    setMenuOpen(false)\r\n  }\r\n\r\n  const appsMenuId = 'primary-apps-menu';\r\n\r\n  const renderAppsMenu = (\r\n    <Menu\r\n      anchorEl={appAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={appsMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isAppMenuOpen}\r\n      onClose={handleAppMenuClose}\r\n    >\r\n      <MenuItem onClick={handleAppMenuClose}>ПУСТО_1</MenuItem>\r\n      <MenuItem onClick={handleAppMenuClose}>ПУСТО_2</MenuItem>\r\n    </Menu>\r\n  )\r\n\r\n  const mobileMenuId = 'primary-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton color=\"inherit\">\r\n          <Badge badgeContent={0} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Уведомления</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleAppsMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"more apps\"\r\n          aria-controls=\"primary-apps-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\">\r\n          <AppsIcon />\r\n        </IconButton>\r\n        <p>Приложения</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <UserProfile />\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            onClick={openServiceMenu}\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            {title}\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton color=\"inherit\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              aria-label=\"apps\"\r\n              aria-controls={appsMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleAppsMenuOpen}\r\n              color=\"inherit\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <AppsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <UserProfile />\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <ServiceMenu open={menuOpen} close={closeServiceMenu} />\r\n      {renderMobileMenu}\r\n      {renderAppsMenu}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeBar","import React from 'react';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: '#44b700',\r\n    color: '#44b700',\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    '&::after': {\r\n      position: 'absolute',\r\n      top: '-1px',\r\n      left: '-1px',\r\n      width: '100%',\r\n      height: '100%',\r\n      borderRadius: '50%',\r\n      animation: '$ripple 1.2s infinite ease-in-out',\r\n      border: '1px solid currentColor',\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  '@keyframes ripple': {\r\n    '0%': {\r\n      transform: 'scale(.8)',\r\n      opacity: 1,\r\n    },\r\n    '100%': {\r\n      transform: 'scale(2.4)',\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    backgroundColor: props => props.color\r\n  }\r\n}));\r\n\r\nconst ActiveAvatar = (props) => {\r\n  const classes = useStyles(props);\r\n  return (\r\n    <div className={classes.root}>\r\n      <StyledBadge\r\n        overlap=\"circle\"\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        variant=\"dot\"\r\n      >\r\n        <Avatar className={classes.avatar}>\r\n          {props.liter}\r\n        </Avatar>\r\n      </StyledBadge>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActiveAvatar","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    backgroundColor: props => props.color\r\n  }\r\n}));\r\n\r\nconst PassiveAvatar = (props) => {\r\n  const classes = useStyles(props);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Avatar className={classes.avatar}>\r\n        {props.liter}\r\n      </Avatar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PassiveAvatar","export const pollWays = [\r\n  'Интервьюирование',\r\n  'Анкетирование',\r\n  'Телефонный',\r\n  'WEB'\r\n]\r\n\r\nexport const pollTypes = [\r\n  'Всероссийский',\r\n  'Экспертный'\r\n]","import React, { Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { NavLink } from 'react-router-dom'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PollIcon from '@material-ui/icons/Poll';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ActiveAvatar from '../ActiveAvatar'\r\nimport PassiveAvatar from '../PassiveAvatar'\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\n\r\nimport { pollWays } from '../../lib/constants'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: '100%',\r\n    margin: '10px 0'\r\n  },\r\n  header: {\r\n    padding: '16px 16px 0 16px'\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    padding: '10px 16px 0 16px'\r\n  },\r\n  media: {\r\n    height: 0,\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  }\r\n}));\r\n\r\nconst PollCard = ({ data }) => {\r\n  const classes = useStyles();\r\n  const Avatar = () => {\r\n    if (data.active) {\r\n      return (\r\n        <ActiveAvatar type={data.type} color={data.color}>\r\n          {data.type}\r\n        </ActiveAvatar>\r\n      )\r\n    } else {\r\n      return (\r\n        <PassiveAvatar type={data.type} color={data.color}>\r\n          {data.type}\r\n        </PassiveAvatar>\r\n      )\r\n    }\r\n  }\r\n\r\n  const Results = () => {\r\n    return (\r\n      <Tooltip title=\"Результаты\">\r\n        <NavLink to={`/results/${data.id}/${data.code}`}>\r\n          <IconButton>\r\n            <PollIcon />\r\n          </IconButton>\r\n        </NavLink>\r\n      </Tooltip>\r\n    )\r\n  }\r\n  const Drive = () => {\r\n    return (\r\n      <Tooltip title=\"Ввод результатов\">\r\n        <NavLink to={`/drive/${data.id}/${data.code}`}>\r\n          <IconButton >\r\n            <AssignmentTurnedInIcon />\r\n          </IconButton>\r\n        </NavLink>\r\n      </Tooltip>\r\n    )\r\n  }\r\n  const Attachment = () => {\r\n    return (\r\n      <Tooltip title=\"Файлы\">\r\n        <NavLink to={`/attachment/${data.id}/${data.code}`}>\r\n          <IconButton>\r\n            <AttachFileIcon />\r\n          </IconButton>\r\n        </NavLink>\r\n      </Tooltip>\r\n    )\r\n  }\r\n  const Settings = () => {\r\n    return (\r\n      <Tooltip title=\"Настройки опроса\">\r\n        <NavLink to={`/poll-settings/${data.id}/${data.code}`}>\r\n          <IconButton>\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </NavLink>\r\n      </Tooltip>\r\n    )\r\n  }\r\n  const Wiki = () => {\r\n    return (\r\n      <Tooltip title=\"Заметки\">\r\n        <NavLink to={`/poll-wiki/${data.id}/${data.code}`}>\r\n          <IconButton>\r\n            <LibraryBooksIcon />\r\n          </IconButton>\r\n        </NavLink>\r\n      </Tooltip>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className={classes.root}>\r\n        <CardHeader className={classes.header}\r\n          avatar={\r\n            <Avatar />\r\n          }\r\n          action={\r\n            <Settings />\r\n          }\r\n          title={data.code + ': ' + data.title}\r\n          subheader={data.startDate + ' - ' + data.endDate}\r\n        />\r\n        <CardContent className={classes.content}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                Метод проведения: {pollWays[data.way]}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                Респондентов: {data.sample}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n          <Grid container item xs={12}>\r\n            <Results />\r\n            {data.cities.length ?\r\n              <Drive /> :\r\n              <Tooltip title=\"Города устанавливаются в настройках опроса\">\r\n                <Typography variant=\"overline\" display=\"block\" gutterBottom className=\"empty-cities-warning\">\r\n                  настройте города\r\n              </Typography>\r\n              </Tooltip>\r\n            }\r\n\r\n          </Grid>\r\n          <Grid container item xs={12} justify=\"flex-end\">\r\n            <Attachment />\r\n            <Wiki />\r\n          </Grid>\r\n        </CardActions>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default PollCard","import React from 'react'\r\nimport PollCard from '../PollCard'\r\n\r\nconst ListOfPolls = ({ data }) => {\r\n  return data.polls.map((poll, i) => (\r\n    <PollCard key={i} data={poll} />\r\n  ))\r\n}\r\n\r\nexport default ListOfPolls","function testXml(xmlString) {\r\n  var parser = new DOMParser();\r\n  var docError = parser.parseFromString('INVALID', 'text/xml');\r\n  var parsererrorNS = docError.getElementsByTagName(\"parsererror\")[0].namespaceURI;\r\n  var doc = parser.parseFromString(xmlString, 'text/xml');\r\n  if (doc.getElementsByTagNameNS(parsererrorNS, 'parsererror').length > 0) {\r\n    return false\r\n  }\r\n  return doc;\r\n}\r\n\r\nconst xmlparser = (xmlString) => {\r\n  const xml = testXml(xmlString)\r\n  if (xml) {\r\n    let data = {}\r\n    const element = xml.getElementsByTagName(\"opros\")[0]\r\n    data.title = element.getAttribute('name')\r\n    data.code = element.getAttribute('cod')\r\n    data.start = element.getAttribute('start_date')\r\n    data.end = element.getAttribute('end_date')\r\n    data.structure = {\r\n      data: ''\r\n    }\r\n    return data\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nexport default xmlparser","import React, { useRef, useEffect, useState } from 'react'\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Button from '@material-ui/core/Button';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport xmlparser from '../../lib/utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst XmlImport = ({ field, ...props }) => {\r\n  const { errorMessage, touched, setFieldValue } = props;\r\n  const { name, value, onChange, onBlur } = field;\r\n  const [processing, setProcessing] = useState(false)\r\n  const [file, setFile] = useState(undefined)\r\n  const [count, setCount] = useState(0)\r\n  const classes = useStyles();\r\n  const fileUpload = useRef();\r\n  let fileReader\r\n\r\n  const upload = () => {\r\n    if (fileUpload) {\r\n      fileUpload.current.click();\r\n    }\r\n  }\r\n\r\n  const handleChg = (e) => {\r\n    e.preventDefault()\r\n    setProcessing(true)\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    if (file) {\r\n      reader.onloadend = () => {\r\n        const xmlText = reader.result\r\n        const xml = xmlparser(xmlText)\r\n        if (xml) {\r\n          setProcessing(false)\r\n          const regEx = /^(\\d{2}).(\\d{2}).(\\d{4})$/;\r\n          setFieldValue('title', xml.title)\r\n          setFieldValue('startdate', xml.start.replace(regEx, `$3-$2-$1`))\r\n          setFieldValue('enddate', xml.end.replace(regEx, `$3-$2-$1`))\r\n          setFieldValue('code', xml.code)\r\n          setFieldValue('xmlfile', file)\r\n        } else {\r\n          console.log('Неправильный формат XML');\r\n          setFieldValue('mainconfig', '')\r\n          return\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Backdrop className={classes.backdrop} open={processing} >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      <input\r\n        style={{ display: 'none' }}\r\n        id={name}\r\n        name={name}\r\n        type=\"file\"\r\n        id={name}\r\n        ref={fileUpload}\r\n        onBlur={onBlur}\r\n        // onChange={handleChange}\r\n        onInput={handleChg}\r\n      />\r\n      <Badge\r\n        color=\"secondary\"\r\n        badgeContent={count}\r\n        style={{ top: '5px' }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n          startIcon={<PublishIcon />}\r\n          onClick={upload}\r\n        >\r\n          XML\r\n        </Button>\r\n      </Badge>\r\n      {errorMessage ? (\r\n        <Typography variant=\"caption\" color=\"error\">\r\n          {errorMessage}\r\n        </Typography>\r\n      ) : null}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default XmlImport","import React from \"react\";\r\n\r\nimport { Formik, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport XmlInput from \"../XmlInput\";\r\n\r\nimport {pollTypes, pollWays} from '../../lib/constants'\r\n\r\nconst TextInputComponent = ({ field, ...props }) => {\r\n  const { errorMessage, label, type, touched } = props;\r\n  const { name, value, onChange, onBlur } = field;\r\n  return (\r\n    <div>\r\n      <TextField\r\n        fullWidth\r\n        type={type}\r\n        name={name}\r\n        label={label}\r\n        value={value}\r\n        error={touched && errorMessage ? true : false}\r\n        helperText={touched && errorMessage ? errorMessage : undefined}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        InputLabelProps={{\r\n          shrink: true\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SelectInputComponent = ({ field, ...props }) => {\r\n  const { errorMessage, label, touched, array } = props;\r\n  const { name, value, onChange, onBlur } = field;\r\n  return (\r\n    <div>\r\n      <TextField\r\n        select\r\n        fullWidth\r\n        name={name}\r\n        label={label}\r\n        value={value}\r\n        error={touched && errorMessage ? true : false}\r\n        helperText={touched && errorMessage ? errorMessage : undefined}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        InputLabelProps={{\r\n          shrink: true\r\n        }}\r\n      >\r\n        {array.map((option, i) => (\r\n          <MenuItem key={i} value={i}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst AddPollDialog = ({ open, closeHndl, saveHndl }) => {\r\n  const FILE_SIZE = 1024 * 1024;                              // 1 mb\r\n  const codeRegExp = /^[A-Za-z]{3}[0-9]{2}-[0-9]{2}?$/\r\n  const SUPPORTED_FORMATS = [\r\n    \"text/xml\"\r\n  ];\r\n  const validationSchema = yup.object().shape({\r\n    title: yup.string().required(\"Обязательное поле\"),\r\n    startdate: yup.date().required('Обязательное поле'),\r\n    enddate: yup.date().required('Обязательное поле'),\r\n    code: yup.string().matches(codeRegExp, 'Формат не валидный').required('Обязательное поле'),\r\n    sample: yup.number().min(1, 'Не меньше одного').required('Обязательное поле'),\r\n    type: yup.string().ensure().required('Обязательное поле'),\r\n    way: yup.string().ensure().required('Обязательное поле'),\r\n    xmlfile: yup\r\n      .mixed()\r\n      .required(\"Обязательное поле формы\")\r\n      .test(\r\n        \"fileSize\",\r\n        \"Слишком большой файл\",\r\n        value => value && value.size <= FILE_SIZE\r\n      )\r\n      .test(\r\n        \"fileFormat\",\r\n        \"Неподдерживаемый формат\",\r\n        value => value && SUPPORTED_FORMATS.includes(value.type)\r\n      )\r\n  });\r\n  const submitHandling = (values, { setSubmitting }) => {\r\n    saveHndl(values)\r\n    closeHndl()\r\n    setSubmitting(true);\r\n  }\r\n  return (\r\n    <Dialog\r\n      className=\"add-poll-dialog\"\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      open={open}\r\n      maxWidth={'sm'}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">Добавить опрос</DialogTitle>\r\n      <DialogContent>\r\n        <Formik\r\n          initialValues={{\r\n            xmlfile: undefined,\r\n            title: undefined,\r\n            startdate: undefined,\r\n            enddate: undefined,\r\n            code: undefined,\r\n            sample: 10,\r\n            type: 1,\r\n            way: 1,\r\n            comment: undefined\r\n          }}\r\n          validationSchema={validationSchema}\r\n          validateOnBlur={true}\r\n          onSubmit={submitHandling}\r\n        >\r\n          {\r\n            ({\r\n              saveHndl,\r\n              values,\r\n              errors,\r\n              touched,\r\n              dirty,\r\n              isSubmitting,\r\n              handleReset,\r\n              handleSubmit,\r\n              handleChange,\r\n              handleBlur,\r\n              setFieldValue\r\n            }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <Field\r\n                        name=\"xmlfile\"\r\n                        component={XmlInput}\r\n                        setFieldValue={setFieldValue}\r\n                        errorMessage={errors[\"xmlfile\"] ? errors[\"xmlfile\"] : undefined}\r\n                        touched={touched[\"xmlfile\"]}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <Field\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        label=\"Наименование\"\r\n                        setFieldValue={setFieldValue}\r\n                        component={TextInputComponent}\r\n                        errorMessage={errors[\"title\"]}\r\n                        touched={touched[\"title\"]}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Field\r\n                        name=\"startdate\"\r\n                        type=\"date\"\r\n                        label=\"Дата начала\"\r\n                        setFieldValue={setFieldValue}\r\n                        component={TextInputComponent}\r\n                        errorMessage={errors[\"startdate\"]}\r\n                        touched={touched[\"startdate\"]}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Field\r\n                        name=\"enddate\"\r\n                        type=\"date\"\r\n                        label=\"Дата окончания\"\r\n                        setFieldValue={setFieldValue}\r\n                        component={TextInputComponent}\r\n                        errorMessage={errors[\"enddate\"]}\r\n                        touched={touched[\"enddate\"]}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Field\r\n                        name=\"code\"\r\n                        label=\"Код опроса\"\r\n                        type=\"text\"\r\n                        setFieldValue={setFieldValue}\r\n                        component={TextInputComponent}\r\n                        errorMessage={errors[\"code\"]}\r\n                        touched={touched[\"code\"]}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Field\r\n                        name=\"sample\"\r\n                        type=\"number\"\r\n                        label=\"Выборка\"\r\n                        setFieldValue={setFieldValue}\r\n                        component={TextInputComponent}\r\n                        errorMessage={errors[\"sample\"]}\r\n                        touched={touched[\"sample\"]}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Field\r\n                        name=\"type\"\r\n                        label=\"Тип опроса\"\r\n                        array={pollTypes}\r\n                        setFieldValue={setFieldValue}\r\n                        component={SelectInputComponent}\r\n                        errorMessage={errors[\"type\"]}\r\n                        touched={touched[\"type\"]}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Field\r\n                        name=\"way\"\r\n                        label=\"Способ проведения\"\r\n                        array={pollWays}\r\n                        component={SelectInputComponent}\r\n                        errorMessage={errors[\"way\"]}\r\n                        touched={touched[\"way\"]}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Field\r\n                        name=\"comment\"\r\n                        label=\"Комментарии\"\r\n                        component={TextInputComponent}\r\n                        errorMessage={errors[\"comment\"]}\r\n                        touched={touched[\"comment\"]}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <DialogActions>\r\n                    <Button onClick={closeHndl} color=\"primary\">\r\n                      Отмена\r\n                    </Button>\r\n                    <Button type=\"submit\" disabled={isSubmitting}>\r\n                      Сохранить\r\n                    </Button>\r\n                  </DialogActions>\r\n                </form>\r\n              )\r\n          }\r\n        </Formik>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\nexport default AddPollDialog;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    top: '10px',\r\n    left: '-55px'\r\n  },\r\n  small: {\r\n    position: 'fixed',\r\n    bottom: '30px',\r\n    right: '30px'\r\n  }\r\n}));\r\n\r\nconst AddFub = ({ onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.small}>\r\n      <Fab color=\"secondary\" aria-label=\"add\" onClick={onClick}>\r\n        <AddIcon />\r\n      </Fab>\r\n    </div>\r\n  );\r\n}\r\nexport default AddFub","import React, { Fragment, useState } from 'react'\r\nimport AddPollDialog from '../AddPollDialog';\r\nimport AddFab from \"../../../../components/AddFab\";\r\n\r\nconst AddPollLogic = ({ addPoll }) => {\r\n  const [openDialog, setOpenDialog] = useState(false)\r\n  const openPollDialog = () => {\r\n    setOpenDialog(true)\r\n  }\r\n  const closeDialog = () => {\r\n    setOpenDialog(false)\r\n  }\r\n  const saveNewPoll = (data) => {\r\n    const xmlFile = data.xmlfile\r\n    if (xmlFile.size) {\r\n      let promise = new Promise((resolve, reject) => {\r\n        resolve(xmlParse(xmlFile))\r\n      })\r\n      promise.then(result => {\r\n        const basicData = basicLogicFormation(result)\r\n        const pollInfo = {\r\n          title: data.title,\r\n          startDate: data.startdate,\r\n          endDate: data.enddate,\r\n          code: data.code,\r\n          sample: data.sample,\r\n          type: data.type,\r\n          way: data.way,\r\n          comment: data.comment\r\n        }\r\n        addPoll({\r\n          variables: {\r\n            newPoll: {\r\n              ...pollInfo,\r\n              comment: pollInfo.comment ? pollInfo.comment : \"\",\r\n              shortTitle: '',\r\n              active: true\r\n            },\r\n            poolOfQuestions: basicData.questions,\r\n            logic: {\r\n              ...basicData.logic\r\n            },\r\n            topic: basicData.topic\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  const xmlParse = (file) => {\r\n    let result = {\r\n      questions: [],\r\n      logic: [],\r\n      topic: []\r\n    }\r\n    let reader = new FileReader();\r\n    return new Promise((resolve, reject) => {\r\n      reader.onloadend = () => {\r\n        const xmlText = reader.result\r\n        const parser = new DOMParser();\r\n        const doc = parser.parseFromString(xmlText, 'text/xml');\r\n        const questions = doc.getElementsByTagName('vopros')\r\n        const questionsLen = questions.length\r\n        for (let i = 0; i < questionsLen; i++) {\r\n          let questionData = {\r\n            title: questions[i].getAttribute('text'),\r\n            topic: +questions[i].getAttribute('tema_id'),\r\n            limit: questions[i].getAttribute('limit') ? +questions[i].getAttribute('limit') : 1,\r\n            type: +questions[i].getAttribute('type_id'),\r\n            order: +questions[i].getAttribute('sort'),\r\n            answers: []\r\n          }\r\n          const questionAnswers = questions[i].getElementsByTagName('otvet')\r\n          const answersLen = questionAnswers.length\r\n          for (let i = 0; i < answersLen; i++) {\r\n            const answerData = {\r\n              title: questionAnswers[i].getAttribute('otvet_text'),\r\n              code: questionAnswers[i].getAttribute('otvet_cod').padStart(3, \"0\"),\r\n              type: +questionAnswers[i].getAttribute('otvet_type'),\r\n              order: +questionAnswers[i].getAttribute('otvet_sort')\r\n            }\r\n            questionData.answers[i] = answerData\r\n          }\r\n          result.questions[i] = questionData\r\n        }\r\n        const defaultLogic = doc.getElementsByTagName('restrict')\r\n        const logicLen = defaultLogic.length\r\n        if (logicLen) {\r\n          let logicData = []\r\n          for (let i = 0; i < logicLen; i++) {\r\n            const logic = {\r\n              code: defaultLogic[i].getAttribute('otvet_cod').padStart(3, \"0\"),\r\n              restrict: defaultLogic[i].getAttribute('restrict_cod').padStart(3, \"0\"),\r\n              type: defaultLogic[i].getAttribute('restrict_type')\r\n            }\r\n            logicData[i] = logic\r\n          }\r\n          result.logic = logicData\r\n        }\r\n        const topics = doc.getElementsByTagName('tema')\r\n        const topicsLen = topics.length\r\n        if (topicsLen) {\r\n          for (let i = 0; i < topicsLen; i++) {\r\n            const topicData = {\r\n              id: topics[i].getAttribute('id'),\r\n              title: topics[i].getAttribute('name')\r\n            }\r\n            result.topic[i] = topicData\r\n          }\r\n        }\r\n        resolve(result)\r\n      }\r\n      reader.readAsText(file);\r\n    })\r\n  }\r\n\r\n  const basicLogicFormation = (data) => {\r\n    const basicLogic = data.logic.reduce((acum, val, i) => {\r\n      if (val.type === '3') {\r\n        if (!acum.exclude[val.code]) {\r\n          acum.exclude[val.code] = { restrict: [val.restrict] }\r\n        } else {\r\n          acum.exclude[val.code] = {\r\n            restrict: [\r\n              ...acum.exclude[val.code].restrict,\r\n              val.restrict\r\n            ]\r\n          }\r\n        }\r\n      } else if (val.type === '5') {\r\n        acum.unique = [...acum.unique, val.code]\r\n      }\r\n      return acum\r\n    }, {\r\n      unique: [],\r\n      exclude: {}\r\n    })\r\n    const extLogic = data.questions.reduce((acum, val) => {\r\n      if (val.limit > 1) {\r\n        // если вопрос с множество ответов -> ответ 'Затрудняюсь ответить' (type = 3) - УНИКАЛЬНЫЙ\r\n        basicLogic.unique = [\r\n          ...basicLogic.unique,\r\n          ...val.answers.filter(obj => obj.type === 3).map(obj => obj.code)\r\n        ]\r\n      }\r\n      acum.difficult = [\r\n        ...acum.difficult,\r\n        ...val.answers.filter(obj => obj.type === 3).map(obj => obj.code)\r\n      ]\r\n      acum.freeAnswers = [\r\n        ...acum.freeAnswers,\r\n        ...val.answers.filter(obj => obj.type === 2).map(obj => obj.code)\r\n      ]\r\n      return acum\r\n    }, {\r\n      difficult: [],\r\n      freeAnswers: []\r\n    })\r\n    data.logic = {\r\n      ...basicLogic,\r\n      ...extLogic\r\n    }\r\n    return data\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <AddFab onClick={openPollDialog} />\r\n      <AddPollDialog open={openDialog} saveHndl={saveNewPoll} closeHndl={closeDialog} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AddPollLogic","import React, { Fragment } from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nconst LoadingState = (props) => {\r\n  let imageWidth;\r\n  let imageHeight;\r\n  let variant;\r\n\r\n  switch (props.size) {\r\n    case \"small\":\r\n      imageWidth = 40;\r\n      imageHeight = 40;\r\n      variant = \"h6\";\r\n      break;\r\n\r\n    case \"medium\":\r\n      imageWidth = 60;\r\n      imageHeight = 60;\r\n      variant = \"h5\";\r\n      break;\r\n\r\n    case \"large\":\r\n      imageWidth = 100;\r\n      imageHeight = 100;\r\n      variant = \"h4\";\r\n      break;\r\n\r\n    default:\r\n      imageWidth = 60;\r\n      imageHeight = 60;\r\n      variant = \"h5\";\r\n      break;\r\n  }\r\n\r\n  if (props.type === \"page\") {\r\n    return (\r\n      <Box\r\n        style={{ transform: \"translate(-50%, -50%)\" }}\r\n        position=\"absolute\"\r\n        top=\"50%\"\r\n        left=\"50%\"\r\n        textAlign=\"center\"\r\n      >\r\n        {props.image && (\r\n          <Box\r\n            clone\r\n            mb={props.title || props.description ? 2 : 0}\r\n            width={`${imageWidth}%`}\r\n            height={`${imageHeight}%`}\r\n          >\r\n            {props.image}\r\n          </Box>\r\n        )}\r\n\r\n        {props.title && (\r\n          <Box mb={!props.description && props.button ? 2 : 0}>\r\n            <Typography variant={variant}>{props.title}</Typography>\r\n          </Box>\r\n        )}\r\n\r\n        {props.description && (\r\n          <Box mb={props.button && 2}>\r\n            <Typography variant=\"body1\">{props.description}</Typography>\r\n          </Box>\r\n        )}\r\n\r\n        {props.button && props.button}\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (props.type === \"card\") {\r\n    return (\r\n      <Box padding={props.padding} textAlign=\"center\">\r\n        {props.image && (\r\n          <Box\r\n            clone\r\n            mb={props.title || props.description ? 2 : 0}\r\n            width={`${imageWidth}%`}\r\n            height={`${imageHeight}%`}\r\n          >\r\n            {props.image}\r\n          </Box>\r\n        )}\r\n\r\n        {props.title && (\r\n          <Box mb={!props.description && props.button ? 2 : 0}>\r\n            <Typography variant={variant}>{props.title}</Typography>\r\n          </Box>\r\n        )}\r\n\r\n        {props.description && (\r\n          <Box mb={props.button && 2}>\r\n            <Typography variant=\"body1\">{props.description}</Typography>\r\n          </Box>\r\n        )}\r\n\r\n        {props.button && props.button}\r\n      </Box>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nLoadingState.defaultProps = {\r\n  image: <CircularProgress />,\r\n  title: 'Загрузка',\r\n  description: 'Подождите пожалуйста',\r\n  type: \"page\",\r\n  size: \"medium\",\r\n  padding: 2,\r\n};\r\n\r\n\r\nexport default LoadingState","import React from 'react'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst LoadingStatus = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Backdrop className={classes.backdrop} open={true}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  )\r\n}\r\n\r\nexport default LoadingStatus","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst SystemNoti = (props) => {\r\n\r\n  const Alert = (props) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  return (\r\n    <Snackbar open={props.open} autoHideDuration={props.duration} onClose={props.close}>\r\n      <Alert severity={props.type} onClose={props.close}>\r\n        {props.text}\r\n      </Alert>\r\n    </Snackbar>\r\n\r\n  )\r\n}\r\n\r\nSystemNoti.defaultProps = {\r\n  type: 'error',\r\n  duration: 4000\r\n}\r\n\r\nexport default SystemNoti","import React, { Fragment } from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  popover: {\r\n    pointerEvents: 'none',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nconst ErrorState = (props) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const classes = useStyles();\r\n\r\n  const handlePopoverOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  const PopOver = ({ open }) => {\r\n    return (\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{\r\n          paper: classes.paper,\r\n        }}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n        }}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        <Typography>{}</Typography>\r\n      </Popover>\r\n    )\r\n  }\r\n\r\n  let imageWidth;\r\n  let imageHeight;\r\n  let variant;\r\n\r\n  switch (props.size) {\r\n    case \"small\":\r\n      imageWidth = 40;\r\n      imageHeight = 40;\r\n      variant = \"h6\";\r\n      break;\r\n\r\n    case \"medium\":\r\n      imageWidth = 60;\r\n      imageHeight = 60;\r\n      variant = \"h5\";\r\n      break;\r\n\r\n    case \"large\":\r\n      imageWidth = 100;\r\n      imageHeight = 100;\r\n      variant = \"h4\";\r\n      break;\r\n\r\n    default:\r\n      imageWidth = 60;\r\n      imageHeight = 60;\r\n      variant = \"h5\";\r\n      break;\r\n  }\r\n\r\n  if (props.type === \"page\") {\r\n    return (\r\n      <Fragment>\r\n        <PopOver open={open} />\r\n        <Box\r\n          style={{ transform: \"translate(-50%, -50%)\" }}\r\n          position=\"absolute\"\r\n          top=\"50%\"\r\n          left=\"50%\"\r\n          textAlign=\"center\"\r\n        >\r\n          {props.image && (\r\n            <Box\r\n              clone\r\n              mb={props.title || props.description ? 2 : 0}\r\n              width={`${imageWidth}%`}\r\n              height={`${imageHeight}%`}\r\n            >\r\n              {props.image}\r\n            </Box>\r\n          )}\r\n\r\n          {props.title && (\r\n            <Box mb={!props.description && props.button ? 2 : 0}>\r\n              <Typography variant={variant}>{props.title}</Typography>\r\n            </Box>\r\n          )}\r\n\r\n          {props.description && (\r\n            <Box mb={props.button && 2}>\r\n              <Typography variant=\"body1\">{props.description}</Typography>\r\n            </Box>\r\n          )}\r\n          <HelpOutlineIcon\r\n            onMouseEnter={handlePopoverOpen}\r\n            onMouseLeave={handlePopoverClose}\r\n          />\r\n\r\n          {props.button && props.button}\r\n        </Box>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  if (props.type === \"card\") {\r\n    return (\r\n      <Fragment>\r\n        <PopOver open={open} />\r\n        <Box padding={props.padding} textAlign=\"center\">\r\n          {props.image && (\r\n            <Box\r\n              clone\r\n              mb={props.title || props.description ? 2 : 0}\r\n              width={`${imageWidth}%`}\r\n              height={`${imageHeight}%`}\r\n            >\r\n              {props.image}\r\n            </Box>\r\n          )}\r\n\r\n          {props.title && (\r\n            <Box mb={!props.description && props.button ? 2 : 0}>\r\n              <Typography variant={variant}>{props.title}</Typography>\r\n            </Box>\r\n          )}\r\n\r\n          {props.description && (\r\n            <Box mb={props.button && 2}>\r\n              <Typography variant=\"body1\">{props.description}</Typography>\r\n            </Box>\r\n          )}\r\n          <HelpOutlineIcon\r\n            onMouseEnter={handlePopoverOpen}\r\n            onMouseLeave={handlePopoverClose}\r\n          />\r\n\r\n          {props.button && props.button}\r\n        </Box>\r\n      </Fragment>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nErrorState.defaultProps = {\r\n  title: 'Ошибка',\r\n  description: 'Что-то пошло не так',\r\n  type: \"page\",\r\n  size: \"medium\",\r\n  padding: 2,\r\n};\r\n\r\n\r\nexport default ErrorState","import { gql } from '@apollo/client'\r\n\r\nexport const GET_ALL_ACTIVE_POLLS = gql`\r\n  query {\r\n    polls {\r\n      id\r\n      title\r\n      code\r\n      liter\r\n      color\r\n      startDate\r\n      endDate\r\n      sample\r\n      way\r\n      type\r\n      complete\r\n      questionsCount\r\n      answersCount\r\n      active\r\n      cities {\r\n        id\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const ADD_NEW_POLL = gql`\r\n  mutation ($newPoll: PollWithConfig!, $poolOfQuestions: [QuestionInput], $logic: LogicInput, $topic: [TopicInput]) {\r\n    addPoll(poll: $newPoll, questions: $poolOfQuestions, logic: $logic, topic: $topic) {\r\n      id\r\n      title\r\n      code\r\n      liter\r\n      color\r\n      startDate\r\n      endDate\r\n      sample\r\n      way\r\n      type\r\n      complete\r\n      questionsCount\r\n      answersCount\r\n      active\r\n      cities {\r\n        id\r\n        title\r\n      }\r\n    }\r\n  }\r\n`","import React, { Fragment, useState } from 'react'\r\nimport Container from '@material-ui/core/Container'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport ListOfPolls from './components/ListOfPolls'\r\nimport AddPollLogic from './components/AddPollLogic'\r\nimport LoadingState from '../../components/LoadingState'\r\nimport LoadingStatus from '../../components/LoadingStatus'\r\nimport SystemNoti from '../../components/SystemNoti'\r\nimport ErrorState from '../../components/ErrorState'\r\n\r\nimport { useQuery } from '@apollo/client'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { GET_ALL_ACTIVE_POLLS } from \"./queries\"\r\nimport { ADD_NEW_POLL } from './mutations'\r\n\r\nconst PollHome = () => {\r\n  const [noti, setNoti] = useState(false)\r\n\r\n  const {\r\n    loading: pollsLoading,\r\n    error: pollsError,\r\n    data: pollsData\r\n  } = useQuery(GET_ALL_ACTIVE_POLLS)\r\n\r\n  const [addPoll, {\r\n    loading: addLoading\r\n  }] = useMutation(ADD_NEW_POLL, {\r\n    onError: (e) => {\r\n      setNoti({\r\n        type: 'error',\r\n        text: 'Добавить не удалось. Смотрите консоль.'\r\n      })\r\n      console.log(e);\r\n    },\r\n    update: (cache, { data }) => {\r\n      const { polls } = cache.readQuery({ query: GET_ALL_ACTIVE_POLLS })\r\n      cache.writeQuery({ query: GET_ALL_ACTIVE_POLLS, data: { polls: [...polls, data.addPoll] } })\r\n    }\r\n  })\r\n\r\n  if (pollsLoading) return (\r\n    <LoadingState />\r\n  )\r\n\r\n  if (pollsError) return (\r\n    <ErrorState\r\n      title=\"Что-то пошло не так\"\r\n      description=\"Не удалось загрузить критические данные. Смотрите консоль\"\r\n    />\r\n  );\r\n\r\n  const Loading = () => {\r\n    if (addLoading)\r\n      return <LoadingStatus />\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <SystemNoti\r\n        open={noti}\r\n        text={noti ? noti.text : \"\"}\r\n        type={noti ? noti.type : \"\"}\r\n        close={() => setNoti(false)}\r\n      />\r\n      <Loading />\r\n\r\n      <Container maxWidth=\"md\">\r\n        <ListOfPolls data={pollsData} />\r\n      </Container>\r\n      <AddPollLogic addPoll={addPoll} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PollHome","import React, { Fragment } from 'react'\r\n\r\nimport HomeBar from '../components/HomeBar'\r\nimport PollHome from '../modules/PollHome'\r\n\r\nconst HomePage = () => {\r\n\r\n  return (\r\n    <Fragment>\r\n      <HomeBar title={\"Опросы\"} />\r\n      <PollHome />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default HomePage","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    textDecoration: 'none'\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('xs')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  sectionDesktop: {\r\n    display: 'flex'\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  arrow: {\r\n    color: 'white',\r\n    textDecoration: 'none'\r\n  }\r\n}));\r\n\r\nconst SettingBar = ({ title }) => {\r\n  const classes = useStyles();\r\n  const [appAnchorEl, setAppAnchorEl] = React.useState(null);\r\n  const isAppMenuOpen = Boolean(appAnchorEl);\r\n\r\n  const handleAppsMenuOpen = (event) => {\r\n    setAppAnchorEl(event.currentTarget);\r\n  };\r\n  const handleAppMenuClose = () => {\r\n    setAppAnchorEl(null);\r\n  }\r\n\r\n  const appsMenuId = 'primary-apps-menu';\r\n\r\n  const renderAppsMenu = (\r\n    <Menu\r\n      anchorEl={appAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={appsMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isAppMenuOpen}\r\n      onClose={handleAppMenuClose}\r\n    >\r\n      <MenuItem onClick={handleAppMenuClose}>ПУСТО_1</MenuItem>\r\n      <MenuItem onClick={handleAppMenuClose}>ПУСТО_2</MenuItem>\r\n    </Menu>\r\n  )\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <NavLink to=\"/\">\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n            >\r\n              <ArrowBackIcon className={classes.arrow} />\r\n            </IconButton>\r\n          </NavLink>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            {title}\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"apps\"\r\n              aria-controls={appsMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleAppsMenuOpen}\r\n              color=\"inherit\">\r\n              <AppsIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderAppsMenu}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingBar","import React, { useRef, useEffect } from 'react'\r\n\r\nconst FreeAnswer = ({ answer, focusHandler, blurHandler }) => {\r\n  const textInput = useRef(null);\r\n  useEffect(() => {\r\n    if (answer.focus) {\r\n      textInput.current.focus()\r\n    }\r\n    if (answer.freeAnswerText !== '') {\r\n      textInput.current.value = answer.freeAnswerText\r\n    }\r\n  }, [])\r\n\r\n  const handlerInput = (e) => {\r\n    // замена запятой на \";\"\r\n    const regRex = /,/gi\r\n    let keyCode = e.keyCode\r\n    if (keyCode === 13) {\r\n      const val = textInput.current.value.replaceAll(regRex, ';')\r\n      textInput.current.value = val\r\n      e.currentTarget.blur()\r\n      return\r\n    } else if (keyCode === 27) {\r\n      if (textInput.current.value !== '') {\r\n        textInput.current.value = ''\r\n        return\r\n      }\r\n      e.currentTarget.blur()\r\n      return\r\n    }\r\n  }\r\n  if (answer.showFreeAnswer) {\r\n    return (\r\n      <span>\r\n        <input\r\n          className=\"free-answer\"\r\n          type=\"text\"\r\n          ref={textInput}\r\n          data-code={answer.code}\r\n          data-keycode={answer.keyCode}\r\n          placeholder=\"Введите свободный ответ\"\r\n          onKeyUp={handlerInput}\r\n          onFocus={focusHandler}\r\n          onBlur={blurHandler}\r\n        />\r\n      </span>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport default FreeAnswer","import React, { Fragment, useRef } from 'react'\r\nimport FreeAnswer from '../FreeAnswer'\r\nimport FlashOnSharpIcon from '@material-ui/icons/FlashOnSharp';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst Answer = ({ answer, clickHandler, focusHandler, blurHandler, settings }) => {\r\n  const answerRef = useRef(null)\r\n\r\n  let answerCls = ['answer-wrap']\r\n  let answerTitle = ['answer-title']\r\n  if (answer.selected) {\r\n    answerCls.push('selected')\r\n  }\r\n  if (answer.disabled) {\r\n    answerTitle.push('disabled')\r\n  }\r\n\r\n  const click = () => {\r\n    clickHandler(answerRef.current)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div onClick={(e) => click(e)}\r\n        className={answerCls.join(' ')}\r\n        ref={answerRef}\r\n        data-code={answer.keyCode} >\r\n        <div className={\"answer-title\"}>\r\n          <span className={\"answer-key\"}>{answer.showIndex}</span>\r\n          <span> </span>\r\n          {settings.codesShow &&\r\n            <span className={\"answer-code\"} >{answer.code}</span>\r\n          }\r\n          <span> - </span>\r\n          <span className={answerTitle.join(' ')}>{answer.title}</span>\r\n          <span className=\"free-answer-icon\">{answer.freeAnswer ? <EditIcon fontSize=\"small\" /> : null}</span>\r\n          <span className=\"answer-exclude-message\">{answer.excludeM}</span>\r\n        </div>\r\n        <div>\r\n          {answer.showFreeAnswer && (\r\n            <FreeAnswer\r\n              answer={answer}\r\n              focus={answer.focus}\r\n              focusHandler={focusHandler}\r\n              blurHandler={blurHandler}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Answer","import React, { useState, useEffect } from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 500,\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  errorText: {\r\n    color: 'red'\r\n  }\r\n}));\r\n\r\nexport default function Tags({ data, limit, settings, multipleHandler }) {\r\n  const classes = useStyles();\r\n  const [answers, setAnswers] = useState([])\r\n  const [codes, setCodes] = useState([])\r\n  const [error, setError] = useState({\r\n    state: false,\r\n    text: ''\r\n  })\r\n\r\n  useEffect(() => {\r\n    const defVal = data.filter(val => {\r\n      if (val.selected) return val\r\n    })\r\n    const codesOfAnswers = data.map(val => val.code)\r\n    setCodes(codesOfAnswers)\r\n    setAnswers(defVal)\r\n  }, [])\r\n\r\n  const handleAnswerSelect = (e, value, reason) => {\r\n    switch (reason) {\r\n      case 'select-option':\r\n        if (value.length > limit) {\r\n          setError({ state: true, text: 'Максимальное количество ответов' })\r\n          return\r\n        }\r\n        setAnswers(value)\r\n        setError({ ...error, state: false })\r\n        break\r\n      case 'remove-option':\r\n        setAnswers(value)\r\n        setError({ ...error, state: false })\r\n        break\r\n      case 'clear':\r\n        setAnswers([])\r\n        setError({ ...error, state: false })\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const blurHandler = (e) => {\r\n    setError({ ...error, state: false })\r\n    multipleHandler(answers, codes)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Autocomplete\r\n        multiple={limit > 1}\r\n        id=\"tags-standard\"\r\n        options={data}\r\n        onChange={handleAnswerSelect}\r\n        value={answers}\r\n        getOptionLabel={(option) => option.title}\r\n        getOptionDisabled={(option) => option.disabled}\r\n        renderOption={(option) => {\r\n          if (settings.codesShow) {\r\n            return <span><span style={{ fontSize: '10px' }}>{option.code}</span> - {option.title}</span>\r\n          }\r\n          return option.title\r\n        }}\r\n        onBlur={blurHandler}\r\n        renderTags={(value, getTagProps) =>\r\n          value.map((option, index) => (\r\n            <Chip\r\n              {...getTagProps({ index })}\r\n              variant=\"outlined\"\r\n              key={index}\r\n              label={settings.codesShow ?\r\n                <span><span style={{ fontSize: '10px' }}>{option.code}</span> - {option.title}</span> :\r\n                <span>{option.title}</span>\r\n              }\r\n            />\r\n          ))\r\n        }\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            error={error.state}\r\n            variant=\"standard\"\r\n            label=\"Выберите ответы\"\r\n            helperText={error.state ? error.text : ''}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { Fragment, useState } from 'react'\r\nimport Answer from \"../Answer\";\r\nimport Tags from '../MultipleAnswers'\r\n\r\nconst Question = ({ count, question, clickHandler, focusHandler, blurHandler, multipleHandler, settings }) => {\r\n  function FlatAnswer() {\r\n    return (\r\n      question.answers.map((answer, i) => (\r\n        <Answer key={i} answer={answer}\r\n          clickHandler={clickHandler}\r\n          focusHandler={focusHandler}\r\n          blurHandler={blurHandler}\r\n          settings={settings}\r\n        />\r\n      )))\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <span className=\"drive-question-card\">\r\n        <h3 className=\"question-title-card\" >\r\n          <span className={\"question-number\"}>{count + 1}</span>\r\n          <span> - </span>\r\n          {question.title}</h3>\r\n        <div>{\r\n          !question.mega ?\r\n            question.answers.map((answer, i) => (\r\n              <Answer key={i} answer={answer}\r\n                clickHandler={clickHandler}\r\n                focusHandler={focusHandler}\r\n                blurHandler={blurHandler}\r\n                settings={settings}\r\n              />\r\n            )) : <Tags data={question.answers} limit={question.limit} settings={settings} multipleHandler={multipleHandler} />\r\n        }\r\n        </div>\r\n      </span>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Question","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst FinishDialog = ({ open, handleClose, finishAll, confirm }) => {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Данная анкета завершена.\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Кажется данная анкета закончена. Перейти к другой анкете?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={finishAll} color=\"primary\">\r\n            Закончить\r\n          </Button>\r\n          <Button onClick={confirm} color=\"primary\" autoFocus>\r\n            Следующая\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FinishDialog","export const serviceBtns = [\r\n  8, 9, 16, 17, 18, 19, 20, 32,\r\n  33, 34, 35, 36, 38, 40, 91, 106,\r\n  107, 109, 110, 112, 113, 114, 115,\r\n  116, 117, 118, 119, 120, 121, 122, 123, 144\r\n];\r\n\r\nexport const resetBtn = [\r\n  27\r\n]\r\n\r\nexport const confirmBtns = [\r\n  48,\r\n  96,\r\n  13\r\n];\r\n\r\nexport const castCodes = {\r\n  97: 49,\r\n  98: 50,\r\n  99: 51,\r\n  100: 52,\r\n  101: 53,\r\n  102: 54,\r\n  103: 55,\r\n  104: 56,\r\n  105: 57\r\n};\r\n\r\nexport const answersCodes = [\r\n  37,\r\n  39,\r\n  49,\r\n  50,\r\n  51,\r\n  52,\r\n  53,\r\n  54,\r\n  55,\r\n  56,\r\n  57,\r\n  81,\r\n  87,\r\n  69,\r\n  82,\r\n  84,\r\n  89,\r\n  85,\r\n  73,\r\n  79,\r\n  80,\r\n  65,\r\n  83,\r\n  68,\r\n  70,\r\n  71,\r\n  72,\r\n  74,\r\n  75,\r\n  76,\r\n  90,\r\n  88,\r\n  67,\r\n  97,\r\n  98,\r\n  99,\r\n  100,\r\n  101,\r\n  102,\r\n  103,\r\n  104,\r\n  105\r\n]\r\n\r\nexport const keycodes = [\r\n  ['1', 49],\r\n  ['2', 50],\r\n  ['3', 51],\r\n  ['4', 52],\r\n  ['5', 53],\r\n  ['6', 54],\r\n  ['7', 55],\r\n  ['8', 56],\r\n  ['9', 57],\r\n  ['Q', 81],\r\n  ['W', 87],\r\n  ['E', 69],\r\n  ['R', 82],\r\n  ['T', 84],\r\n  ['Y', 89],\r\n  ['U', 85],\r\n  ['I', 73],\r\n  ['O', 79],\r\n  ['P', 80],\r\n  ['A', 65],\r\n  ['S', 83],\r\n  ['D', 68],\r\n  ['F', 70],\r\n  ['G', 71],\r\n  ['H', 72],\r\n  ['J', 74],\r\n  ['K', 75],\r\n  ['L', 76],\r\n  ['Z', 90],\r\n  ['X', 88],\r\n  ['C', 67],\r\n  ['V', 86],\r\n  ['B', 66],\r\n  ['N', 78],\r\n  ['M', 77]\r\n];","import { castCodes, serviceBtns, resetBtn, confirmBtns, answersCodes } from './keycodes'\r\n\r\n// приведение клавиш доп.клавиатуры к кодам основной цифровой клавиатуры\r\nfunction cast(keyCode) {\r\n  if (castCodes[keyCode] !== undefined) return castCodes[keyCode];\r\n  return keyCode;\r\n}\r\n\r\nfunction checkAnswerSelected(keyCode) {\r\n  return answersCodes.includes(keyCode)\r\n}\r\n\r\nfunction checkResetBtn(keyCode) {\r\n  return resetBtn.includes(keyCode)\r\n\r\n}\r\n\r\nfunction checkConfirmBtn(keyCode) {\r\n  return confirmBtns.includes(keyCode)\r\n}\r\n\r\nfunction checkServiceBtn(keyCode) {\r\n  return serviceBtns.includes(keyCode)\r\n}\r\n\r\nconst defineSelectedAnswer = (keyCode) => {\r\n  if (checkAnswerSelected(keyCode)) {\r\n    return {\r\n      do: 1,\r\n      trueCode: cast(keyCode)\r\n    }\r\n  }\r\n  if (checkServiceBtn(keyCode)) {\r\n    return {\r\n      do: 4\r\n    }\r\n  }\r\n  if (checkResetBtn(keyCode)) {\r\n    return {\r\n      do: 2\r\n    }\r\n  }\r\n  if (checkConfirmBtn(keyCode)) {\r\n    return {\r\n      do: 3\r\n    }\r\n  }\r\n  return {\r\n    do: 4\r\n  }\r\n}\r\n\r\nexport default defineSelectedAnswer","import { keycodes } from './keycodes'\r\n\r\n// формирует вопрос, на основании логики и ранее сохраненных результатов\r\nconst questionFormation = (poll, count, result, logic, setResults) => {\r\n  const question = poll.questions[count]\r\n  let keyCodesPool = []\r\n  let codesPool = []\r\n\r\n  // проверка на видимость ответа в перечне (ВНЕШНЯЯ ЛОГИКА - видимость)\r\n  const visibleAnswers = logic.invisible ? question.answers.filter(obj => !logic.invisible.includes(obj.code))\r\n    : question.answers\r\n\r\n  // если вопрос пропущен\r\n\r\n  const exclude = logic.criticalExclude ? logic.criticalExclude : false\r\n  let uniqueIn = false\r\n  let selectedIn = false\r\n  let uniqueSelected = false\r\n  const newAnswers = visibleAnswers.map((answer, i) => {\r\n    // надстройка для объекта - ответ\r\n    let suffix = {\r\n      freeAnswer: false,\r\n      showFreeAnswer: false,\r\n      freeAnswerText: '',\r\n      focus: false,\r\n      selected: false,\r\n      disabled: false,\r\n      exclude: [],\r\n      excludeM: ''\r\n    }\r\n    codesPool.push(answer.code)\r\n    // устанавливаем исключения\r\n    if (exclude) {\r\n      // заполняем поле exclude, в котором указаны все коды, которые будут исключены при выборе данного ответа\r\n      for (let code in exclude) {\r\n        if (code === answer.code) {\r\n          suffix = {\r\n            ...suffix,\r\n            exclude: [...suffix.exclude, ...exclude[code]]\r\n          }\r\n        }\r\n        if (exclude[code].includes(answer.code)) {\r\n          suffix = {\r\n            ...suffix,\r\n            exclude: [...suffix.exclude, code]\r\n          }\r\n        }\r\n      }\r\n      // проверяем не исключен ли данный ответ кодами, которые указаны в поле exclude\r\n      suffix.exclude.map(code => {\r\n        if (result.pool.includes(code)) {\r\n          suffix = {\r\n            ...suffix,\r\n            disabled: true,\r\n            excludeM: `противоречит коду ${code}`\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    if (visibleAnswers.length > keycodes.length) {\r\n      keyCodesPool[i] = [i, i + 1]\r\n    } else {\r\n      keyCodesPool[i] = keycodes[i][1]\r\n      suffix = {\r\n        ...suffix,\r\n        showIndex: keycodes[i][0],\r\n        keyCode: keycodes[i][1],\r\n      }\r\n    }\r\n    // восстанавливаем ответы !\r\n    if (result.pool.includes(answer.code)) {\r\n      selectedIn = true\r\n      suffix = {\r\n        ...suffix,\r\n        selected: true\r\n      }\r\n    }\r\n    // проверка на блокировку ответа (ВНЕШНЯЯ ЛОГИКА - уникальность)\r\n    if (logic.unique.includes(answer.code)) {\r\n      uniqueIn = true\r\n      suffix = {\r\n        ...suffix,\r\n        unique: true\r\n      }\r\n    }\r\n    if (logic.unique.includes(answer.code) & result.pool.includes(answer.code)) uniqueSelected = true\r\n\r\n    // проверка на свободный ответ (ВНЕШНЯЯ ЛОГИКА - свободный ответ)\r\n    if (logic.freeAnswers.includes(answer.code)) {\r\n      suffix = {\r\n        ...suffix,\r\n        freeAnswer: true,\r\n        focus: true\r\n      }\r\n    }\r\n    if (result[question.id]) {\r\n      let data = result[question.id].data\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (answer.code === data[i].answerCode && data[i].freeAnswerText !== '') {\r\n          suffix = {\r\n            ...suffix,\r\n            freeAnswer: true,\r\n            showFreeAnswer: true,\r\n            freeAnswerText: data[i].freeAnswerText,\r\n            focus: false\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const resultQ = { ...answer, ...suffix }\r\n    return resultQ\r\n  })\r\n\r\n  // надстройка для объекта - вопрос\r\n  let qSuffix = {\r\n    mega: false,\r\n    megaMltp: false,\r\n    multiple: false                                      // много возможных ответов\r\n  }\r\n\r\n  if (question.limit > 1) {\r\n    qSuffix = {\r\n      ...qSuffix,\r\n      multiple: true\r\n    }\r\n  }\r\n\r\n  // проверка сколько всего ответов в вопросе -> если много, то формируем multiple select\r\n  if (visibleAnswers.length > keycodes.length) {\r\n    qSuffix = {\r\n      ...qSuffix,\r\n      mega: true,\r\n      megaMltp: question.limit\r\n    }\r\n  } else {\r\n    qSuffix = {\r\n      ...qSuffix,\r\n      keyCodesPool\r\n    }\r\n  }\r\n\r\n  const countSkipAnswers = newAnswers.reduce((acum, answer) => {\r\n    return acum + answer.disabled\r\n  }, 0)\r\n\r\n  if (countSkipAnswers === newAnswers.length) {\r\n    setResults(prevState => ({\r\n      ...prevState,\r\n      [question.id]: {\r\n        data: [],\r\n        codesPool,\r\n        count\r\n      }\r\n    }))\r\n    return {\r\n      next: true\r\n    }\r\n  }\r\n\r\n  if (result[question.id] === undefined) {\r\n    setResults(prevState => ({\r\n      ...prevState,\r\n      [question.id]: {\r\n        data: [],\r\n        codesPool,\r\n        count\r\n      }\r\n    }))\r\n  }\r\n\r\n  // определение выбранных ответов и их уникальность для вопроса при восстановлении результатов\r\n  const mAnswers = newAnswers.map((answer, index) => {\r\n    if (selectedIn) {\r\n      if (uniqueIn) {\r\n        if (uniqueSelected) {\r\n          return answer.unique & answer.selected ? answer : { ...answer, disabled: true }\r\n        } else {\r\n          return answer.unique ? { ...answer, disabled: true } : answer\r\n        }\r\n      }\r\n    }\r\n    return answer\r\n  }).map(answer => {\r\n    if (exclude) {\r\n      for (let code in exclude) {\r\n        if (result.pool.includes(code)) {\r\n          if (exclude[code].includes(answer.code)) {\r\n            return { ...answer, disabled: true }\r\n          }\r\n          return answer\r\n        }\r\n      }\r\n\r\n    }\r\n    return answer\r\n  })\r\n\r\n  const data = {\r\n    ...question,\r\n    ...qSuffix,\r\n    answers: mAnswers\r\n  }\r\n\r\n  return {\r\n    next: false,\r\n    data\r\n  }\r\n}\r\n\r\nexport default questionFormation","const beep = (config) => {\r\n  let audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\n  config = Object.assign({\r\n    volume: 25 / 100,\r\n    frequency: 3020,\r\n    duration: 150,\r\n    type: 'sine'\r\n  }, config);\r\n\r\n  let oscillator = audioCtx.createOscillator();\r\n  let gainNode = audioCtx.createGain();\r\n  oscillator.connect(gainNode);\r\n  gainNode.connect(audioCtx.destination);\r\n  gainNode.gain.value = config.volume;\r\n  oscillator.frequency.value = config.frequency;\r\n  oscillator.type = config.type;\r\n  oscillator.start();\r\n  setTimeout(\r\n    function () {\r\n      oscillator.stop();\r\n    },\r\n    config.duration\r\n  );\r\n}\r\nexport default beep","import React, { Fragment, useEffect, useState } from 'react'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { Grid } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Question from '../Question'\r\nimport FinishDialog from '../FinishDialog';\r\n\r\nimport defineSelectedAnswer from '../../lib/defineSelectedAnswer'\r\nimport questionFormation from '../../lib/questionFormation'\r\nimport beep from '../../lib/beep'\r\n\r\nconst KEY_TYPE = 'keyup'\r\nconst STEP_DELAY = 100\r\nconst MOVE_DELAY = 0\r\n\r\nconst ANSWER_SELECTED = 1\r\nconst RESET_RESULTS = 2\r\nconst CONFIRM_QUESTION = 3\r\nconst SKIP = 4\r\n\r\nconst PollDrive = ({ poll, logics, setCurrentQuestion, saveAndGoBack, saveWorksheet }) => {\r\n  const questionsLimit = poll.questions.length\r\n  const [question, setQuestion] = useState(null)\r\n  const [userSettings, setUserSettings] = useState({\r\n    codesShow: true\r\n  })\r\n  const [direction, setDirection] = useState(1)\r\n  const [logic] = useState(logics)\r\n  const [count, setCount] = useState(0)\r\n  const [results, setResults] = useState(\r\n    {\r\n      pool: []\r\n    }\r\n  )\r\n  const [finish, setFinish] = useState(false)\r\n  const [finishDialog, setFinishDialog] = useState(false)\r\n  const [inlineMessage, setInlineMessage] = useState('')\r\n  const keyUpHandler = ({ target, keyCode }) => {\r\n    if (target.nodeName === 'BODY') {\r\n      const nextStep = defineSelectedAnswer(keyCode)\r\n      switch (nextStep.do) {\r\n        case ANSWER_SELECTED: {\r\n          mainLogic(nextStep.trueCode)\r\n          return\r\n        }\r\n        case CONFIRM_QUESTION: {\r\n          confirmResults()\r\n          return\r\n        }\r\n        case RESET_RESULTS: {\r\n          resetAnswers()\r\n          return\r\n        }\r\n        case SKIP: {\r\n          return                                                    // нажата системная клавиша, не относящаяся к опросу\r\n        }\r\n        default: {\r\n          return\r\n        }\r\n      }\r\n    }\r\n  }\r\n  const confirmResults = () => {\r\n    if (finish) {\r\n      finishRespondent()\r\n    } else {\r\n      if (results[question.id].data.length) {\r\n        goToNext()\r\n        return\r\n      }\r\n      beep()\r\n    }\r\n  }\r\n\r\n  const goToNext = () => {\r\n    setDirection(1)\r\n    if (count < questionsLimit - 1) {\r\n      setCount(count + 1)\r\n    } else {\r\n      setCount(0)\r\n    }\r\n  }\r\n\r\n  const goToPrevious = () => {\r\n    setDirection(0)\r\n    if (count === 0) {\r\n      setCount(questionsLimit - 1)\r\n    } else {\r\n      setCount(count - 1)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(KEY_TYPE, keyUpHandler)\r\n    return () => {\r\n      document.removeEventListener(KEY_TYPE, keyUpHandler)\r\n    };\r\n  })\r\n\r\n  // Кнопка с треброванием выдать ID и сохранить !!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n  useEffect(() => {\r\n    // первичная инициализация, наложение логики и сохранение в стор следующего вопроса + восстановление промежуточных итогов\r\n    const newQuestion = questionFormation(poll, count, results, logic, setResults);\r\n    if (!newQuestion) return\r\n    if (newQuestion.next) {\r\n      if (direction) {\r\n        setCount(count + 1)\r\n      } else {\r\n        setCount(count - 1)\r\n      }\r\n      return\r\n    }\r\n    setQuestion(newQuestion.data)\r\n    setCurrentQuestion(newQuestion.data)\r\n  }, [count])\r\n\r\n  const clickHandler = (target) => {\r\n    const code = target.dataset.code\r\n    const selectedAnswer = question.answers.filter(obj => obj.keyCode === +code)[0]\r\n    // проверка, если поле со свободным ответом необходимо отредактировать\r\n    if (selectedAnswer.freeAnswer && selectedAnswer.selected) {\r\n      return\r\n    }\r\n    mainLogic(code)\r\n  }\r\n\r\n  const codesShow = (e) => {\r\n    setUserSettings(prevState => ({\r\n      ...prevState,\r\n      codesShow: !prevState.codesShow\r\n    }))\r\n  }\r\n\r\n  const checkRespondentFinish = (newResults) => {\r\n    let count = 0\r\n    for (let key in newResults) {\r\n      if (key !== 'pool') {\r\n        count++\r\n      }\r\n    }\r\n    // проверка - если не дошли до конца анкета, нет смысла анализировать концовку\r\n    if (count < poll.questions.length) {\r\n      return false\r\n    }\r\n    for (let key in newResults) {\r\n      if (key !== 'pool') {\r\n        const result = newResults[key]\r\n        if (!result.data.length) {\r\n          // необходимо проверить - пропущен был вопрос или нет\r\n          if (logic.criticalExclude) {\r\n            const resPool = newResults.pool                // уже сохраненные ответы\r\n            const codesPool = result.codesPool\r\n            const criticalExclude = logic.criticalExclude\r\n            const r = codesPool.filter((code, index) => {\r\n              for (let eCode in criticalExclude) {\r\n                if (resPool.includes(eCode)) {\r\n                  if (criticalExclude[eCode].includes(code)) return false\r\n                }\r\n              }\r\n              return true\r\n            })\r\n            if (r.length) {\r\n              setInlineMessage(`Пропущен ${result.count + 1}й вопрос`)\r\n              setFinish(false)\r\n              return false\r\n            }\r\n          } else {\r\n            // пула критичных ответов нет -> запрещенных вопросов нет -> какой-то вопрос пропущен\r\n            // ОПРЕДЕЛИТЬ какой номер вопроса\r\n            setInlineMessage(`Пропущен ${result.count + 1}й вопрос`)\r\n            setFinish(false)\r\n            return false\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setInlineMessage('')\r\n    setFinish(true)\r\n    return true\r\n  }\r\n\r\n  const finishRespondent = () => {\r\n    setFinishDialog(true)\r\n  }\r\n\r\n  // ОСНОВНЫЙ обработчик сброса ответов\r\n  const resetAnswers = () => {\r\n    const savedCodes = results[question.id].data.reduce((acum, val) => [...acum, val.answerCode], [])\r\n    // Сделано так, чтобы не ждать обновления СТЕЙТА с результатами\r\n    let newResults = {}\r\n    for (let key in results) {\r\n      if (key === question.id) {\r\n        newResults[question.id] = {\r\n          ...newResults[question.id],\r\n          data: []\r\n        }\r\n      } else {\r\n        if (key !== 'pool') {\r\n          newResults = {\r\n            ...newResults,\r\n            [key]: results[key]\r\n          }\r\n        } else {\r\n          newResults = {\r\n            ...newResults,\r\n            pool: results.pool.filter(code => {\r\n              return savedCodes.includes(code) ? false : true\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setResults(newResults)\r\n    setQuestion(prevState => ({\r\n      ...prevState,\r\n      answers: prevState.answers.map(\r\n        answer => true ? { ...answer, selected: false, showFreeAnswer: false, disabled: false } : answer\r\n      ).map(\r\n        answer => {\r\n          let excludePool = []\r\n          // формирование пула кодов которые запрещены в результатах\r\n          for (let code in logic.criticalExclude) {\r\n            if (code === answer.code) {\r\n              excludePool = [\r\n                ...excludePool,\r\n                ...logic.criticalExclude[code]\r\n              ]\r\n            }\r\n            if (logic.criticalExclude[code].includes(answer.code)) {\r\n              excludePool = [\r\n                ...excludePool,\r\n                code\r\n              ]\r\n            }\r\n          }\r\n          for (let i = 0; i < excludePool.length; i++) {\r\n            if (newResults.pool.includes(excludePool[i])) {\r\n              return {\r\n                ...answer,\r\n                disabled: true,\r\n                excludeM: `противоречит коду ${excludePool[i]}`\r\n              }\r\n            }\r\n          }\r\n          return {\r\n            ...answer,\r\n            disabled: false,\r\n            excludeM: ''\r\n          }\r\n        }\r\n      )\r\n    }))\r\n    setFinish(false)\r\n    // обновить логику и проверить запрещенные ответы для данного вопроса для их перерисовки!!!!!!\r\n  }\r\n\r\n  // ОСНОВНОЙ обработчик логики\r\n  const mainLogic = (code) => {\r\n    const trueCode = +code\r\n    const keyCodesPool = question.keyCodesPool\r\n    const selectedAnswer = question.answers.filter(obj => obj.keyCode === trueCode)[0]\r\n    // движение по опросу\r\n    if (trueCode === 39) {\r\n      setTimeout(() => {\r\n        goToNext()\r\n      }, MOVE_DELAY)\r\n      return\r\n    } else if (trueCode === 37) {\r\n      setTimeout(() => {\r\n        goToPrevious()\r\n      }, MOVE_DELAY)\r\n      return\r\n    }\r\n    // входит ли код клавиатуры в перечень ответов\r\n    if (keyCodesPool.includes(trueCode)) {\r\n      // промежуточные результаты уже содержат выбранный код => удаляем промежуточный результат => обновляем текущий вью\r\n      if (results.pool.includes(selectedAnswer.code)) {\r\n        let newResults = {}\r\n        for (let key in results) {\r\n          if (key === question.id) {\r\n            newResults = {\r\n              ...newResults,\r\n              [question.id]: {\r\n                ...results[question.id],\r\n                data: results[question.id].data.filter(el => el.answerCode !== selectedAnswer.code)\r\n              }\r\n            }\r\n          } else {\r\n            if (key !== 'pool') {\r\n              newResults = {\r\n                ...newResults,\r\n                [key]: results[key]\r\n              }\r\n            } else {\r\n              newResults = {\r\n                ...newResults,\r\n                pool: results.pool.filter(el => el !== selectedAnswer.code)\r\n              }\r\n            }\r\n          }\r\n        }\r\n        setResults(newResults)\r\n        setQuestion(prevState => ({\r\n          ...prevState,\r\n          answers: prevState.answers.map(\r\n            answer => answer.code === selectedAnswer.code ? { ...answer, selected: false, showFreeAnswer: false } : answer\r\n          ).map(\r\n            answer => newResults[question.id].data.length ? answer : ({ ...answer, disabled: false })\r\n          ).map(\r\n            answer => {\r\n              let excludePool = []\r\n              // формирование пула кодов которые запрещены в результатах \r\n              for (let code in logic.criticalExclude) {\r\n                if (code === answer.code) {\r\n                  excludePool = [\r\n                    ...excludePool,\r\n                    ...logic.criticalExclude[code]\r\n                  ]\r\n                }\r\n                if (logic.criticalExclude[code].includes(answer.code)) {\r\n                  excludePool = [\r\n                    ...excludePool,\r\n                    code\r\n                  ]\r\n                }\r\n              }\r\n              for (let i = 0; i < excludePool.length; i++) {\r\n                if (newResults.pool.includes(excludePool[i])) {\r\n                  return {\r\n                    ...answer,\r\n                    disabled: true,\r\n                    excludeM: `противоречит коду ${excludePool[i]}`\r\n                  }\r\n                }\r\n              }\r\n              return {\r\n                ...answer,\r\n                disabled: false,\r\n                excludeM: ''\r\n              }\r\n            }\r\n          ).map(answer => {\r\n            // проверка на уникальность\r\n            if (newResults[question.id].data.length) {\r\n              return answer.unique ? { ...answer, disabled: true } : answer\r\n            }\r\n            return answer\r\n          })\r\n        }))\r\n        checkRespondentFinish(newResults)\r\n        return\r\n      }\r\n      // проверка на уникальность ответа и выбраннного до этого противоречивого ответа (ВНЕШНЯЯ ЛОГИКА - уникальность)\r\n      if (logic.unique.includes(selectedAnswer.code)) {\r\n        if (results[question.id].data.length) {\r\n          beep()\r\n          return\r\n        }\r\n      }\r\n      // проверка на активность ответа и ограничение по количеству ответов\r\n      if (selectedAnswer.disabled || results[question.id].data.length >= question.limit) {\r\n        beep()\r\n        return\r\n      }\r\n      // проверка на свободный ответ\r\n      if (selectedAnswer.freeAnswer) {\r\n        setQuestion(prevState => ({\r\n          ...prevState,\r\n          answers: prevState.answers.map(\r\n            answer => answer.keyCode === selectedAnswer.keyCode ? { ...answer, selected: true, showFreeAnswer: true } : answer\r\n          )\r\n        }))\r\n        return\r\n      }\r\n      const result = {\r\n        answerCode: selectedAnswer.code,\r\n        answerId: selectedAnswer.id,\r\n        freeAnswer: false,\r\n        freeAnswerText: ''\r\n      }\r\n      // проверка на исключаемость (ВНЕШНЯЯ ЛОГИКА - КРИТИЧНАЯ исключаемость) -> запретить ответы, которые указаны в конфиг файле\r\n      for (let code in logic.criticalExclude) {\r\n        // если в выбранных ответах присутствует код, который исключает другие ответы\r\n        if (results.pool.includes(code)) {\r\n          if (logic.criticalExclude[code].includes(selectedAnswer.code)) {\r\n            beep()\r\n            return\r\n          }\r\n        }\r\n      }\r\n      // проверка на исключаемость (ВНЕШНЯЯ ЛОГИКА - НЕКРИТИЧНАЯ исключаемость) -> ОПОВЕСТИТЬ при ответе, которые указаны в конфиг файле\r\n      for (let code in logic.nonCriticalExclude) {\r\n        // если в выбранных ответах присутствует код, который исключает другие ответы\r\n        if (results.pool.includes(code)) {\r\n          if (logic.nonCriticalExclude[code].includes(selectedAnswer.code)) {\r\n            console.log('Ответ не совсем корректен');\r\n          }\r\n        }\r\n      }\r\n\r\n      let newResultState = Object.assign({}, results);\r\n      newResultState[question.id].data.push(result)\r\n      newResultState.pool.push(selectedAnswer.code)\r\n      setResults(newResultState)\r\n      setQuestion(prevState => ({\r\n        ...prevState,\r\n        answers: prevState.answers.map(\r\n          answer => answer.keyCode === trueCode ? { ...answer, selected: true } : answer\r\n        ).map(\r\n          answer => logic.unique.includes(answer.code) & answer.keyCode !== trueCode ? { ...answer, disabled: true } : answer\r\n        ).map(\r\n          answer => selectedAnswer.exclude.includes(answer.code) ? {\r\n            ...answer,\r\n            disabled: true,\r\n            excludeM: `противоречит коду ${selectedAnswer.code}`\r\n          } : answer\r\n        )\r\n      }))\r\n      // проверить на уникальность (ВНЕШНЯЯ ЛОГИКА - уникальность) -> запретить другие ответы\r\n      if (logic.unique.includes(selectedAnswer.code)) {\r\n        setQuestion(prevState => ({\r\n          ...prevState,\r\n          answers: prevState.answers.map(\r\n            answer => answer.keyCode === trueCode ? answer : { ...answer, disabled: true }\r\n          )\r\n        }))\r\n      }\r\n\r\n      // ПРОВЕРКА на окончание ввода\r\n      if (checkRespondentFinish(newResultState)) {\r\n        return\r\n      } else {\r\n        // проверка на ЛИМИТ (для автоматического перехода к следующему вопросу)\r\n        if (results[question.id].data.length >= question.limit) {\r\n          // переходим дальше\r\n          setTimeout(() => {\r\n            goToNext()\r\n          }, STEP_DELAY)\r\n          return\r\n        }\r\n      }\r\n    } else {\r\n      beep()\r\n    }\r\n  }\r\n\r\n  // ОСНОВНОЙ обработчик свободного ответа\r\n  const blurHandler = (e) => {\r\n    const value = e.currentTarget.value\r\n    const selectedCode = e.currentTarget.dataset.code\r\n    const selectedKeyCode = e.currentTarget.dataset.keycode\r\n    const selectedAnswer = question.answers.filter(obj => obj.keyCode === +selectedKeyCode)[0]\r\n    if (value === '') {\r\n      // пустое поле не позволительно -> стираем из промежуточного результата и обновляем вью\r\n      let newResults = {}\r\n      for (let key in results) {\r\n        if (key === question.id) {\r\n          newResults = {\r\n            ...newResults,\r\n            [question.id]: {\r\n              ...results[question.id],\r\n              data: results[question.id].data.filter(el => el.answerCode !== selectedCode)\r\n            }\r\n          }\r\n        } else {\r\n          if (key !== 'pool') {\r\n            newResults = {\r\n              ...newResults,\r\n              [key]: results[key]\r\n            }\r\n          } else {\r\n            newResults = {\r\n              ...newResults,\r\n              pool: results.pool.filter(el => el !== selectedCode)\r\n            }\r\n          }\r\n        }\r\n      }\r\n      setResults(newResults)\r\n      setQuestion(prevState => ({\r\n        ...prevState,\r\n        answers: prevState.answers.map(\r\n          answer => answer.code === selectedCode ? { ...answer, selected: false, showFreeAnswer: false } : answer\r\n        ).map(\r\n          answer => newResults[question.id].data.length ? answer : ({ ...answer, disabled: false })\r\n        ).map(\r\n          answer => {\r\n            let excludePool = []\r\n            // формирование пула кодов которые запрещены в результатах \r\n            for (let code in logic.criticalExclude) {\r\n              if (code === answer.code) {\r\n                excludePool = [\r\n                  ...excludePool,\r\n                  ...logic.criticalExclude[code]\r\n                ]\r\n              }\r\n              if (logic.criticalExclude[code].includes(answer.code)) {\r\n                excludePool = [\r\n                  ...excludePool,\r\n                  code\r\n                ]\r\n              }\r\n            }\r\n            for (let i = 0; i < excludePool.length; i++) {\r\n              if (newResults.pool.includes(excludePool[i])) {\r\n                return {\r\n                  ...answer,\r\n                  disabled: true,\r\n                  excludeM: `противоречит коду ${excludePool[i]}`\r\n                }\r\n              }\r\n            }\r\n            return {\r\n              ...answer,\r\n              disabled: false,\r\n              excludeM: ''\r\n            }\r\n          }\r\n        ).map(answer => {\r\n          // проверка на уникальность\r\n          if (newResults[question.id].data.length) {\r\n            return answer.unique ? { ...answer, disabled: true } : answer\r\n          }\r\n          return answer\r\n        })\r\n      }))\r\n      checkRespondentFinish(newResults)\r\n      return\r\n    }\r\n    // поле не пустое -> сохраняем результат\r\n    const result = {\r\n      answerCode: selectedCode,\r\n      answerId: selectedAnswer.id,\r\n      freeAnswer: false,\r\n      freeAnswerText: value\r\n    }\r\n\r\n    /// опять новый СТЕЙТ результата!!!!!!!!!!!\r\n\r\n    let newResultState = {}\r\n    if (results.pool.includes(selectedCode)) {\r\n      newResultState = Object.assign({}, results);\r\n      newResultState[question.id] = {\r\n        ...newResultState[question.id],\r\n        data: results[question.id].data.map(\r\n          answer => answer.answerCode === selectedCode ? { ...answer, freeAnswerText: value } : answer\r\n        )\r\n      }\r\n    } else {\r\n      newResultState = Object.assign({}, results);\r\n      newResultState[question.id].data.push(result)\r\n      newResultState.pool.push(selectedCode)\r\n    }\r\n    setResults(newResultState)\r\n\r\n    // проверить на уникальность (ВНЕШНЯЯ ЛОГИКА - уникальность) -> запретить другие ответы\r\n    if (logic.unique.includes(selectedCode)) {\r\n      setQuestion(prevState => ({\r\n        ...prevState,\r\n        answers: prevState.answers.map(\r\n          answer => answer.keyCode === +selectedKeyCode ? answer : { ...answer, disabled: true }\r\n        )\r\n      }))\r\n    }\r\n    setQuestion(prevState => ({\r\n      ...prevState,\r\n      answers: prevState.answers.map(\r\n        answer => answer.keyCode === selectedCode ? { ...answer, selected: true } : answer\r\n      ).map(\r\n        answer => logic.unique.includes(answer.code) & answer.keyCode !== selectedCode ? { ...answer, disabled: true } : answer\r\n      ).map(\r\n        answer => selectedAnswer.exclude.includes(answer.code) ? {\r\n          ...answer,\r\n          disabled: true,\r\n          excludeM: `противоречит коду ${selectedAnswer.code}`\r\n        } : answer\r\n      )\r\n    }))\r\n\r\n    // \r\n    if (checkRespondentFinish(newResultState)) {\r\n      return\r\n    } else {\r\n      if (results[question.id].data.length >= question.limit - 1) {         // -1 т.к. не успевает обновится стейт\r\n        setTimeout(() => {\r\n          goToNext()\r\n        }, STEP_DELAY)\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  // !!!!!!!!!!!!!!!!!!!!Обработчик SELECTa - не доделана логика выбора!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n  const multipleHandler = (value, codes) => {\r\n    if (value.length) {\r\n      const codesPool = value.map(val => val.code)\r\n      const resultsPool = value.map(val => {\r\n        return {\r\n          answerCode: val.code,\r\n          freeAnswer: false,\r\n          freeAnswerText: ''\r\n        }\r\n      })\r\n      const clearPool = results.pool.filter(val => !codes.includes(val))\r\n      setResults(prevState => ({\r\n        ...prevState,\r\n        [question.id]: {\r\n          ...prevState[question.id],\r\n          data: [\r\n            ...resultsPool\r\n          ]\r\n        },\r\n        pool: [\r\n          ...clearPool,\r\n          ...codesPool\r\n        ]\r\n      }))\r\n      if (value.length) {\r\n        setTimeout(() => {\r\n          goToNext()\r\n        }, STEP_DELAY)\r\n      }\r\n      return\r\n    }\r\n    setResults(prevState => ({\r\n      ...prevState,\r\n      [question.id]: {\r\n        ...prevState[question.id],\r\n        data: []\r\n      },\r\n      pool: prevState.pool.filter(obj => !codes.includes(obj))\r\n    }))\r\n  }\r\n\r\n  const cancelFinish = () => {\r\n    // просто возврат к анкете, чтобы что-то поправить\r\n    setFinishDialog(false)\r\n  }\r\n\r\n  const confirmFinish = () => {\r\n    // закончить данную анкету и начать новую, сбросив все данные\r\n    saveWorksheet(results)\r\n    setResults({\r\n      pool: []\r\n    })\r\n    setCount(0)\r\n    setFinish(false)\r\n    setFinishDialog(false)\r\n  }\r\n\r\n  const finishThisPoll = () => {\r\n    // закончить данный опрос и перейти на главную страницу\r\n    setFinish(false)\r\n    setFinishDialog(false)\r\n    saveAndGoBack(results)\r\n  }\r\n\r\n  const InlineInformer = () => {\r\n    return (\r\n      <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n        {inlineMessage}\r\n      </Typography>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <FinishDialog open={finishDialog} handleClose={cancelFinish} finishAll={finishThisPoll} confirm={confirmFinish} />\r\n      <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n        <Grid container xs={6} md={3} justify=\"flex-start\">\r\n          <FormControlLabel\r\n            value=\"end\"\r\n            control={<Checkbox color=\"primary\" onChange={codesShow} defaultChecked={userSettings.codesShow} />}\r\n            label=\"Коды ответов\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Hidden only={['sm', 'xs']}>\r\n          <Grid container md={6} justify=\"center\">\r\n            <InlineInformer />\r\n          </Grid>\r\n        </Hidden>\r\n        <Grid container xs={6} md={3} justify=\"flex-end\">\r\n          <p>Всего: <span><strong>{questionsLimit}</strong></span></p>\r\n        </Grid>\r\n        <Hidden mdUp>\r\n          <Grid container xs={12} justify=\"center\">\r\n            <InlineInformer />\r\n          </Grid>\r\n        </Hidden>\r\n\r\n      </Grid>\r\n      {question &&\r\n        <Question\r\n          count={count}\r\n          question={question}\r\n          settings={userSettings}\r\n          clickHandler={clickHandler}\r\n          blurHandler={blurHandler}\r\n          multipleHandler={multipleHandler}\r\n        />\r\n      }\r\n      <Button onClick={goToPrevious} variant=\"contained\" className=\"control-button\">Назад</Button>\r\n      <Button onClick={goToNext} variant=\"contained\" className=\"control-button\">Вперед</Button>\r\n      {finish &&\r\n        <Button onClick={finishRespondent} variant=\"contained\" className=\"control-button\">Финиш</Button>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PollDrive","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst DialogWithSelect = ({ open, handleClose, save, header, text, options }) => {\r\n  const [state, setState] = useState(\"\")\r\n  const handleChange = (e) => {\r\n    const { options, selectedIndex, value } = e.target;\r\n    const id = value\r\n    const title = options[selectedIndex].innerHTML\r\n    setState({\r\n      id,\r\n      title\r\n    })\r\n  }\r\n\r\n  const handleSave = () => {\r\n    save(state)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{header}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {text}\r\n          </DialogContentText>\r\n          <Select\r\n            fullWidth\r\n            native\r\n            value={state.id}\r\n            onChange={e => handleChange(e)}\r\n          >\r\n            <option aria-label=\"None\" disabled selected value=\"\" />\r\n            {options.map((option, i) =>\r\n              <option key={option.id} value={option.id}>{option.title}</option>\r\n            )}\r\n          </Select>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={handleSave} disabled={!Boolean(state)} color=\"primary\">\r\n            Сохранить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DialogWithSelect","import { gql } from '@apollo/client'\r\n\r\nexport const GET_POLL_DATA = gql`\r\n  query ($id: ID!) {\r\n    poll(id: $id) {\r\n      id\r\n      questions{\r\n        id\r\n        title\r\n        limit\r\n        order\r\n        answers {\r\n          id\r\n          code\r\n          title\r\n        }\r\n      }\r\n      cities {\r\n        id\r\n        title\r\n      }\r\n      logic {\r\n        path\r\n      }\r\n    }\r\n  }\r\n`","import { gql } from '@apollo/client'\r\n\r\nexport const SAVE_NEW_RESULT = gql`\r\nmutation ($poll: String!, $city: String!, $user: String!, $pool: [String], $data: [ResultData]) {\r\n  saveResult(\r\n    poll: $poll,\r\n    city: $city,\r\n    user: $user,\r\n    pool: $pool,\r\n    data: $data\r\n  )\r\n}\r\n`","export const parseIni = (area) => {\r\n  let configData = area;\r\n  // let configData = area.value;\r\n  let regex = {\r\n    section: /^\\s*\\[\\s*([^\\]]*)\\s*\\]\\s*$/,\r\n    param: /^\\s*([^=]+?)\\s*=\\s*(.*?)\\s*$/,\r\n    comment: /^\\s*#.*$/\r\n  };\r\n  let config = {};\r\n  let lines = configData.split(/[\\r\\n]+/);\r\n  let section = null;\r\n  lines.forEach(function (line) {\r\n    if (regex.comment.test(line)) {\r\n      return;\r\n    } else if (regex.param.test(line)) {\r\n      let match = line.match(regex.param);\r\n      if (section) {\r\n        config[section][match[1]] = parseParams(match[2]);\r\n      } else {\r\n        config[match[1]] = parseParams(match[2]);\r\n      }\r\n    } else if (regex.section.test(line)) {\r\n      let match = line.match(regex.section);\r\n      config[match[1]] = {};\r\n      section = match[1];\r\n    } else if (line.length == 0 && section) {\r\n      section = null;\r\n    }\r\n  });\r\n  // console.log(config);\r\n  return concatLogic(config);\r\n}\r\n\r\nfunction concatLogic(config) {\r\n  let regex = /([0-9]{1,})/gm;\r\n  let result = {};\r\n  let property = null;\r\n  for (let key in config) {\r\n    property = key.match(/[a-zA-Z]*/gm)[0];\r\n    result[property] = {};\r\n  }\r\n  for (let key in config) {\r\n    property = key.match(/[a-zA-Z]*/gm)[0];\r\n    let suffix = key.match(regex);\r\n    if (suffix !== null) {\r\n      result[property][suffix] = config[key];\r\n    } else {\r\n      result[property][1] = config[key];\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction parseParams(data) {\r\n  // избавляемся от пробелов\r\n  let trimData = data.replace(/\\s*/g, '');\r\n  let regex = {\r\n    // range : /\\[(.+?)\\]/gm,\r\n    // single: /([0-9]{1,3})/gm,\r\n    srange: /([0-9]{1,3})|\\[(.+?)\\]/gm\r\n  };\r\n\r\n  let output = [];\r\n  let temp;\r\n  do {\r\n    temp = regex.srange.exec(trimData);\r\n    if (temp) {\r\n      // одиночные\r\n      if (temp[1] !== undefined) {\r\n        output.push(temp[1]);\r\n      }\r\n      // диапазон\r\n      if (temp[2] !== undefined) {\r\n        let range = temp[2];\r\n        output = output.concat(rangeToArray(range));\r\n      }\r\n    }\r\n  } while (temp);\r\n  return output;\r\n}\r\n\r\nfunction rangeToArray(data) {\r\n  let regex = /(\\d{1,3})\\s*-\\s*(\\d{1,3})/gm;\r\n  let result = (data.replace(regex, (...match) => {\r\n    let temp = [];\r\n    let start = match[1];\r\n    let end = match[2];\r\n    // если перепутаны места\r\n    if (start > end) {\r\n      start = match[2];\r\n      end = match[1];\r\n    }\r\n    let length = (end - start) + 1;\r\n    while (length) {\r\n      start = start + '';\r\n      temp.push(start.padStart(3, '0'));\r\n      start++\r\n      length--;\r\n    }\r\n    return temp;\r\n  }));\r\n  return result.split(',');\r\n}\r\n\r\nexport const normalizeLogic = (logic) => {\r\n  let normalizedLogic = {}\r\n  for (let key in logic) {\r\n    switch (key) {\r\n      case 'difficult':\r\n        normalizedLogic = {\r\n          ...normalizedLogic,\r\n          difficult: logic[key][1].answers\r\n        }\r\n        break\r\n      case 'freeAnswers':\r\n        normalizedLogic = {\r\n          ...normalizedLogic,\r\n          freeAnswers: logic[key][1].answers\r\n        }\r\n        break\r\n      case 'exclude':\r\n        const exclude = logic[key]\r\n        let criticalExclude = {}\r\n        let nonCriticalExclude = {}\r\n        for (let i in exclude) {\r\n          if (exclude[i].critical[0] === '1') {\r\n            exclude[i].answers.map((answer) => {\r\n              criticalExclude[answer] = exclude[i].exclude\r\n            })\r\n          }\r\n          if (exclude[i].critical[0] === '0') {\r\n            exclude[i].answers.map((answer) => {\r\n              nonCriticalExclude[answer] = exclude[i].exclude\r\n            })\r\n          }\r\n        }\r\n        normalizedLogic = {\r\n          ...normalizedLogic,\r\n          criticalExclude,\r\n          nonCriticalExclude\r\n        }\r\n        break\r\n      case 'unique':\r\n        normalizedLogic = {\r\n          ...normalizedLogic,\r\n          unique: logic[key][1].answers\r\n        }\r\n        break\r\n      case 'invisible':\r\n        const invisible = logic[key]\r\n        let invisiblePool = []\r\n        for (let i in invisible) {\r\n          invisiblePool = [\r\n            ...invisiblePool,\r\n            ...invisible[i].answers\r\n          ]\r\n        }\r\n        normalizedLogic = {\r\n          ...normalizedLogic,\r\n          invisible: invisiblePool\r\n        }\r\n        break\r\n    }\r\n  }\r\n  return normalizedLogic\r\n}","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { mainUrl } from \"../../mainconfig\";\r\n\r\nimport Container from '@material-ui/core/Container'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport DriveLogic from \"./components/DriveLogic\";\r\nimport DialogWithSelect from '../../components/DialogWithSelect';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { gql, useApolloClient, useQuery, useMutation } from '@apollo/client'\r\n\r\nimport { GET_POLL_DATA } from \"./queries\"\r\n\r\nimport { SAVE_NEW_RESULT } from './mutaions'\r\nimport { parseIni, normalizeLogic } from './lib/utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst PollDrive = ({ id }) => {\r\n  const client = useApolloClient();\r\n  const [message, setMessage] = useState({\r\n    show: false,\r\n    type: 'error',\r\n    message: '',\r\n    duration: 6000\r\n  })\r\n  const { currentUser } = client.readQuery({\r\n    query: gql`\r\n    query CurrentUserQuery {\r\n      currentUser {\r\n        id\r\n        username\r\n      }\r\n    }\r\n    `,\r\n  })\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [poll, setPoll] = useState(null)\r\n  const [backOpen, setBackOpen] = useState(false)\r\n  const [poolOfCities, setPoolOfCities] = useState(null)\r\n  const [openCityDialog, setOpenCityDialog] = useState(true);\r\n  const [logic, setPollLogic] = useState(null)\r\n  const [currentCity, setCurrentCity] = useState(null)\r\n  const [currentQuestion, setCurrentQuestion] = useState({\r\n    'multiple': false\r\n  })\r\n  const { pollLoading, error, data } = useQuery(GET_POLL_DATA, {\r\n    variables: { id },\r\n    onCompleted: (_, __) => {\r\n      handleConfigFile(data.poll.logic.path)\r\n      setPoolOfCities(data.poll.cities)\r\n    }\r\n  })\r\n  const handleConfigFile = (filePath) => {\r\n    fetch(mainUrl + filePath)\r\n      .then((r) => r.text())\r\n      .then(text => {\r\n        const logic = parseIni(text)\r\n        // Нормализация ЛОГИКИ - здесь формируется ЛОГИКА опроса, на основании конфиг файла !!!\r\n        const normLogic = normalizeLogic(logic)\r\n        setPollLogic(normLogic)\r\n      })\r\n  }\r\n  const [saveResult] = useMutation(SAVE_NEW_RESULT)\r\n\r\n  const handleMessageClose = () => {\r\n    setMessage(prevState => ({\r\n      ...prevState,\r\n      show: false,\r\n      text: ''\r\n    }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (logic) {\r\n      // применени очередности, если в настройках опроса меняли очередность\r\n      const newOrderQuestion = data.poll.questions.slice().sort((a, b) => (a.order > b.order) ? 1 : -1)\r\n      // исключение вопросов, ответы которых полностью исключены полем [invisible] ВНЕШНЕЙ ЛОГИКИ\r\n      if (logic.invisible) {\r\n        const invisiblePool = logic.invisible\r\n        const visibleQuestions = newOrderQuestion.filter((question) => {\r\n          const answers = question.answers\r\n          const lAnswers = answers.length\r\n          let count = 0\r\n          for (let i = 0; i < lAnswers; i++) {\r\n            if (invisiblePool.includes(answers[i].code)) {\r\n              count++\r\n            }\r\n          }\r\n          if (count !== lAnswers) {\r\n            return true\r\n          }\r\n          return false\r\n        })\r\n        setPoll({\r\n          id: data.poll.id,\r\n          questions: visibleQuestions\r\n        })\r\n      } else {\r\n        setPoll({\r\n          id: data.poll.id,\r\n          questions: newOrderQuestion\r\n        })\r\n      }\r\n    }\r\n  }, [logic])\r\n\r\n  if (!poll || !poolOfCities || !logic || !currentUser) return (\r\n    <Fragment>\r\n      <CircularProgress />\r\n      <p>Загрузка. Подождите пожалуйста</p>\r\n    </Fragment>\r\n  )\r\n\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  const saveCity = (city) => {\r\n    setCurrentCity(city)\r\n    setOpenCityDialog(false)\r\n  }\r\n\r\n  const closeDialog = () => {\r\n    setOpenCityDialog(false)\r\n    history.push(\"/\")\r\n  }\r\n\r\n  const prepareResultData = (data) => {\r\n    let result = []\r\n    for (let key in data) {\r\n      if (key !== 'pool') {\r\n        result.push({\r\n          id: key,\r\n          data: data[key].data.map(answer => {\r\n            return {\r\n              answer: answer.answerId,\r\n              code: answer.answerCode,\r\n              text: answer.freeAnswerText,\r\n            }\r\n          })\r\n        })\r\n      }\r\n    }\r\n    return result\r\n  }\r\n\r\n  const saveAndGoBack = (data) => {\r\n    setBackOpen(true)\r\n    const result = prepareResultData(data)\r\n    saveResult({\r\n      variables: {\r\n        poll: poll.id,\r\n        city: currentCity.id,\r\n        user: currentUser.id,\r\n        pool: data.pool,\r\n        data: result\r\n      }\r\n    }).then(\r\n      res => {\r\n        setBackOpen(false)\r\n        history.push(\"/\")\r\n      },\r\n      error => {\r\n        // сохранить результат не удалось -> сохранить его локально?!\r\n        setBackOpen(false)\r\n        setMessage({\r\n          show: true,\r\n          type: 'error',\r\n          duration: 6000,\r\n          text: 'Сохранить не удалось.'\r\n        })\r\n        console.log(error)\r\n      }\r\n    )\r\n  }\r\n\r\n  const saveWorksheet = (data) => {\r\n    setBackOpen(true)\r\n    const result = prepareResultData(data)\r\n    saveResult({\r\n      variables: {\r\n        poll: poll.id,\r\n        city: currentCity.id,\r\n        user: currentUser.id,\r\n        pool: data.pool,\r\n        data: result\r\n      }\r\n    }).then(\r\n      res => {\r\n        setBackOpen(false)\r\n      },\r\n      error => {\r\n        setBackOpen(false)\r\n        setMessage({\r\n          show: true,\r\n          type: 'error',\r\n          duration: 6000,\r\n          text: 'Сохранить не удалось.'\r\n        })\r\n        console.log(error)\r\n        console.log(data)\r\n      }\r\n    )\r\n  }\r\n\r\n  const Alert = (props) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Backdrop className={classes.backdrop} open={backOpen}>\r\n        <CircularProgress color=\"inherit\" />\r\n        <p>Подождите, сохранение результатов</p>\r\n      </Backdrop>\r\n      <div style={{ backgroundColor: currentQuestion.multiple ? 'rgb(208 226 252)' : '#fff' }}>\r\n        <Container maxWidth=\"md\">\r\n          <DialogWithSelect\r\n            open={openCityDialog}\r\n            options={poolOfCities}\r\n            header=\"Город\"\r\n            text=\"Выберите город в котором проводился опрос\"\r\n            save={saveCity}\r\n            handleClose={closeDialog}\r\n          />\r\n          <DriveLogic\r\n            poll={poll}\r\n            logics={logic}\r\n            setCurrentQuestion={setCurrentQuestion}\r\n            saveAndGoBack={saveAndGoBack}\r\n            saveWorksheet={saveWorksheet} />\r\n        </Container>\r\n      </div>\r\n      <Snackbar open={message.show} autoHideDuration={message.duration} onClose={handleMessageClose}>\r\n        <Alert onClose={handleMessageClose} severity={message.type}>\r\n          {message.text}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PollDrive","import React, { Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport SettingBar from '../components/SettingBar'\r\nimport PollDrive from \"../modules/PollDrive\";\r\n\r\nconst DrivePage = () => {\r\n  let { id, code } = useParams();\r\n\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title={`Опрос ` + code + ` - вбивание`} />\r\n      <PollDrive id={id}/>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default DrivePage","import React, { Fragment } from 'react'\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, p, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      className=\"right-pannel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={p}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction allProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tabs: {\r\n    minWidth: '160px',\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n    overflow: 'visible'\r\n  }\r\n}));\r\n\r\nconst Vertical = ({ data, value, handleChange }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Tabs\r\n      orientation=\"vertical\"\r\n      variant=\"scrollable\"\r\n      value={value}\r\n      onChange={handleChange}\r\n      aria-label=\"Vertical tabs\"\r\n      scrollButtons=\"auto\"\r\n      className={classes.tabs}\r\n    >\r\n      {data.map((obj, index) => (\r\n        <Tab label={obj.label} {...allProps({ index })} />\r\n      ))}\r\n    </Tabs>\r\n  )\r\n}\r\n\r\nconst Horizontal = ({ data, value, handleChange }) => {\r\n  return (\r\n    <AppBar position=\"static\" color=\"default\">\r\n      <Tabs\r\n        variant=\"scrollable\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        scrollButtons=\"auto\"\r\n        aria-label=\"horizontal auto tabs\"\r\n      >\r\n        {data.map((obj, index) => (\r\n          <Tab label={obj.label} {...allProps({ index })} />\r\n        ))}\r\n      </Tabs>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nconst AdaptiveTabs = ({ data }) => {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (_, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"root-wrap\">\r\n        <Hidden xsDown>\r\n          <Vertical data={data} value={value} handleChange={handleChange} />\r\n        </Hidden>\r\n        <Hidden smUp>\r\n          <Horizontal data={data} value={value} handleChange={handleChange} />\r\n        </Hidden>\r\n        {data.map((obj, index) => (\r\n          <TabPanel value={value} index={index} p={obj.padding ? obj.padding : 1}>\r\n            {obj.component}\r\n          </TabPanel>\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AdaptiveTabs","import { gql } from '@apollo/client'\r\n\r\nexport const GET_POLL_DATA = gql`\r\n  query pollQuery($id: ID!) {\r\n    poll(id: $id) {\r\n      id\r\n      title\r\n      code\r\n      liter\r\n      questionsCount\r\n      answersCount\r\n      cities {\r\n        id\r\n        title\r\n      }\r\n      questions {\r\n        id\r\n        title\r\n        limit\r\n        order\r\n        answers {\r\n          id\r\n          title\r\n          order\r\n          code\r\n        }\r\n      }\r\n      logic {\r\n        path\r\n      }\r\n    }\r\n  }\r\n`","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport { parseIni, normalizeLogic } from '../../../PollDrive/lib/utils'\r\nimport { useQuery } from '@apollo/client'\r\n\r\nimport { GET_POLL_DATA } from \"./queries\"\r\n\r\n\r\nconst Generation = ({ id }) => {\r\n  const [poll, setPoll] = useState(null)\r\n  const [questions, setQuestions] = useState(null)\r\n  const [logic, setLogic] = useState(null)\r\n  const [count, setCount] = useState(null)\r\n  const { loading, data } = useQuery(GET_POLL_DATA, {\r\n    variables: { id },\r\n    onCompleted: () => {\r\n      setPoll({\r\n        id: data.poll.id,\r\n        title: data.poll.title,\r\n        questionsCount: data.poll.questionsCount,\r\n        answersCount: data.poll.answersCount\r\n      })\r\n      handleConfigFile(data.poll.logic.path)\r\n    }\r\n  })\r\n\r\n  const handleConfigFile = (filePath) => {\r\n    fetch(`http://localhost:4000${filePath}`)\r\n      .then((r) => r.text())\r\n      .then(text => {\r\n        const logic = parseIni(text)\r\n        // Нормализация ЛОГИКИ - здесь формируется ЛОГИКА опроса, на основании конфиг файла !!!\r\n        const mainLogic = normalizeLogic(logic)\r\n        setLogic(mainLogic)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (logic) {\r\n      let visibleQuestions = []\r\n      if (logic.invisible) {\r\n        const invisiblePool = logic.invisible\r\n        visibleQuestions = data.poll.questions.filter((question) => {\r\n          const answers = question.answers\r\n          const lAnswers = answers.length\r\n          let count = 0\r\n          for (let i = 0; i < lAnswers; i++) {\r\n            if (invisiblePool.includes(answers[i].code)) {\r\n              count++\r\n            }\r\n          }\r\n          if (count !== lAnswers) {\r\n            return true\r\n          }\r\n        })\r\n      } else {\r\n        visibleQuestions = data.poll.questions\r\n      }\r\n      const modQuestions = visibleQuestions.map((question, index) => {\r\n        const newAnswers = question.answers.map((answer, index) => {\r\n          let suffix = {}\r\n          if (logic.invisible) {\r\n            if (logic.invisible.includes(answer.code)) {\r\n              suffix = {\r\n                ...suffix,\r\n                disabled: true\r\n              }\r\n            }\r\n          }\r\n          if (logic.freeAnswers) {\r\n            if (logic.freeAnswers.includes(answer.code)) {\r\n              suffix = {\r\n                ...suffix,\r\n                freeAnswer: true\r\n              }\r\n            }\r\n          }\r\n          if (logic.unique) {\r\n            if (logic.unique.includes(answer.code)) {\r\n              suffix = {\r\n                ...suffix,\r\n                unique: true\r\n              }\r\n            }\r\n          }\r\n          if (logic.difficult) {\r\n            if (logic.difficult.includes(answer.code)) {\r\n              suffix = {\r\n                ...suffix,\r\n                difficult: true\r\n              }\r\n            }\r\n          }\r\n          const newAnswer = {\r\n            ...answer,\r\n            ...suffix\r\n          }\r\n          return newAnswer\r\n        })\r\n        const newQuestion = {\r\n          ...question,\r\n          answers: newAnswers\r\n        }\r\n        return newQuestion\r\n      })\r\n      setQuestions(modQuestions)\r\n    }\r\n  }, [logic])\r\n\r\n\r\n  if (loading || !logic || !questions) return (\r\n    <Fragment>\r\n      <CircularProgress />\r\n      <p>Загрузка. Подождите пожалуйста</p>\r\n    </Fragment>\r\n  )\r\n\r\n  const testPoolChange = (e) => {\r\n    const val = e.currentTarget.value\r\n    if (val < 0) {\r\n      return\r\n    }\r\n    setCount(val)\r\n  }\r\n\r\n  const generateTestPool = () => {\r\n    const worksheetsCount = count\r\n    console.log(questions);\r\n    // freeAnswer\r\n    // freeAnswersPool\r\n    // unique\r\n    // criticalExclude\r\n    // difficult\r\n    for (let i = 0; i < worksheetsCount; i++) {\r\n      questions.map((question, index) => {\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container>\r\n        <Box>\r\n          <h3>{poll.title}</h3>\r\n        </Box>\r\n        <Grid xs={12} item container justify=\"flex-start\">\r\n          <Box>\r\n            <TextField\r\n              id=\"outlined-number\"\r\n              label=\"Number\"\r\n              type=\"number\"\r\n              value={count}\r\n              onChange={testPoolChange}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              variant=\"outlined\"\r\n            />\r\n          </Box>\r\n          <Box p={1}>\r\n            <Button variant=\"contained\" color=\"primary\" disabled={count ? false : true} onClick={generateTestPool}>\r\n              Генерировать\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Generation","import React from 'react'\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst ConfirmDialog = ({ open, confirm, close, data }) => {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={close}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{data.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {data.text}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={close} color=\"primary\">\r\n          Отмена\r\n          </Button>\r\n        <Button onClick={confirm} color=\"primary\" autoFocus>\r\n          Удалить\r\n          </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default ConfirmDialog","import React, { Fragment } from 'react'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\nconst RespondentCard = ({ result, index, show, edit, selected, select }) => {\r\n  return (\r\n    <Fragment>\r\n      <Paper className=\"respondent-card\">\r\n        <Grid container item justify=\"space-between\">\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {index + 1}\r\n          </Typography>\r\n          {result.processed ? <p>dd</p> : ''}\r\n          <Checkbox\r\n            checked={selected}\r\n            onChange={(e) => select({\r\n              id: result.id,\r\n              index,\r\n              event: e\r\n            })}\r\n            inputProps={{ 'aria-label': 'primary checkbox' }}\r\n          />\r\n        </Grid>\r\n        <Typography variant=\"subtitle2\" gutterBottom>\r\n          н.п.: {result.city ? result.city.title : '-'}\r\n        </Typography>\r\n        <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n          сохранен: {result.created}\r\n        </Typography>\r\n        <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n          обновлен: {result.lastModified}\r\n        </Typography>\r\n        {/* <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n          {result.city ? result.city.category.label : 'вероятно город стерли из БД'}\r\n        </Typography> */}\r\n        <Grid container item justify=\"space-between\" className=\"card-service-buttons\">\r\n          <IconButton className=\"card-button\" aria-label=\"delete\" onClick={() => edit(result.id)}>\r\n            <EditIcon fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton className=\"card-button\" aria-label=\"delete\" onClick={() => show(result)}>\r\n            <ListAltIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Grid>\r\n      </Paper>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default RespondentCard","import { gql } from '@apollo/client'\r\n\r\nexport const GET_FILTER_SELECTS = gql`\r\n  query {\r\n    cities {\r\n      id\r\n      title\r\n      population\r\n      category {\r\n        title\r\n      }\r\n    }\r\n    intervievers {\r\n      id\r\n      username\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_POLL_RESULTS = gql`\r\n  query ($id: String!) {\r\n    pollResults(id: $id) {\r\n      id\r\n      user {\r\n        id\r\n        username\r\n      }\r\n      city {\r\n        id\r\n        title\r\n        category {\r\n          title\r\n        }\r\n      }\r\n      created\r\n      lastModified\r\n      processed\r\n      result {\r\n        question {\r\n          id\r\n          title\r\n          answers {\r\n            results {\r\n              id\r\n              code\r\n            }\r\n          }\r\n        }\r\n        answer\r\n        code\r\n        text\r\n      }\r\n    }\r\n  }\r\n\r\n`","import { gql } from '@apollo/client'\r\n\r\nexport const CITY_SAVE_MUTATION = gql`\r\nmutation saveNewCity($title: String!, $population: Int!, $category: String!) {\r\n  newCity(title: $title, population: $population, category: $category) {\r\n    id\r\n    title\r\n    category\r\n    population\r\n  }\r\n}\r\n`\r\n\r\nexport const CITY_EDIT_SAVE = gql`\r\nmutation saveCityEdit($id: String!, $title: String!, $population: Int!, $category: String!) {\r\n  cityEdit(id: $id, title: $title, population: $population, category: $category) {\r\n    id\r\n    title\r\n    category\r\n    population\r\n  }\r\n}\r\n`\r\nexport const DELETE_RESULTS = gql`\r\nmutation ($results: [String]!) {\r\n  deleteResults(results: $results) {\r\n    id\r\n  }\r\n}\r\n`","import React, { Fragment, useEffect, useState } from 'react'\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport DynamicFeedIcon from '@material-ui/icons/DynamicFeed';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport ConfirmDialog from '../../../../components/ConfirmDialog'\r\nimport RespondentCard from '../../components/RespondentCard'\r\n\r\nimport { useApolloClient } from '@apollo/client'\r\nimport { useQuery } from '@apollo/client'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { GET_POLL_RESULTS, GET_FILTER_SELECTS } from './queries'\r\nimport { DELETE_RESULTS } from './mutations'\r\nimport { LocalFlorist } from '@material-ui/icons';\r\n\r\nconst OverallResults = ({ id }) => {\r\n  const [ddate, setDdate] = useState()\r\n  const client = useApolloClient();\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const [delOpen, setDelOpen] = useState(false)\r\n  const [activeResults, setActiveResults] = useState()\r\n  const [filters, setFilters] = useState({\r\n    intervievers: [],\r\n    status: [\r\n      {\r\n        value: 0,\r\n        title: 'Не обработано'\r\n      },\r\n      {\r\n        value: 1,\r\n        title: 'Обработано'\r\n      }\r\n    ],\r\n    cities: [],\r\n    sex: [],\r\n    age: []\r\n  })\r\n  const [activeFilters, setActiveFilters] = useState()\r\n  const [selectPool, setSelectPool] = useState([])\r\n  const [lastSelectedIndex, setLastSelectedIndex] = useState()\r\n  const [delConfirm, setDelConfirm] = useState(false)\r\n  const [message, setMessage] = useState({\r\n    show: false,\r\n    type: 'error',\r\n    message: '',\r\n    duration: 6000\r\n  })\r\n  const {\r\n    data: pollResults,\r\n    loading: pollResultsLoading,\r\n    error: pollResultsError\r\n  } = useQuery(GET_POLL_RESULTS, {\r\n    variables: {\r\n      id\r\n    },\r\n    onCompleted: () => {\r\n      setActiveResults(pollResults.pollResults)\r\n    }\r\n  });\r\n  const {\r\n    data: filtersResults,\r\n    loading: filtersResultsLoading,\r\n    error: filtersResultsError\r\n  } = useQuery(GET_FILTER_SELECTS, {\r\n    onCompleted: () => {\r\n      setFilters({\r\n        ...filters,\r\n        cities: filtersResults.cities.map(city => {\r\n          return {\r\n            value: city.id,\r\n            title: city.title,\r\n            category: city.category.label\r\n          }\r\n        }),\r\n        intervievers: filtersResults.intervievers.map(iViever => {\r\n          return {\r\n            value: iViever.id,\r\n            title: iViever.username\r\n          }\r\n        }),\r\n      })\r\n    }\r\n  })\r\n  const [\r\n    deleteResult,\r\n    { loading: loadOnDelete, error: errorWhileDeleting }\r\n  ] = useMutation(DELETE_RESULTS)\r\n\r\n  useEffect(() => {\r\n    if (activeFilters) {\r\n      if (activeFilters.cities.length) {\r\n        const rrr = pollResults.pollResults.filter(\r\n          result => {\r\n            if (result.city) {\r\n              return activeFilters.cities.includes(result.city.id)\r\n            }\r\n            return false\r\n          }\r\n        )\r\n        setActiveResults(rrr)\r\n      } else {\r\n        setActiveResults(pollResults.pollResults)\r\n      }\r\n    }\r\n  }, [activeFilters])\r\n\r\n\r\n  const handleChange = (_, __) => {\r\n\r\n  }\r\n\r\n  if (pollResultsLoading || !pollResults || !activeResults || !filters || loadOnDelete) return (\r\n    <Fragment>\r\n      <CircularProgress />\r\n      <p>Загрузка. Подождите пожалуйста</p>\r\n    </Fragment>\r\n  )\r\n\r\n  const Alert = (props) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  const handleDialogConfirm = () => {\r\n\r\n  }\r\n\r\n  const handleDialogClose = () => {\r\n\r\n  }\r\n\r\n  const showDetails = ({ result }) => {\r\n    const oderedResults = result.slice().sort((a, b) => (a.code > b.code) ? 1 : -1)\r\n    const datails = oderedResults.map(obj => {\r\n      if (obj.text !== '') {\r\n        return obj.code + ' ' + obj.text\r\n      }\r\n      return obj.code\r\n    })\r\n    console.log(datails);\r\n  }\r\n\r\n  const handleEdit = () => {\r\n\r\n  }\r\n\r\n  const handleSelect = (data) => {\r\n    if (data.event.nativeEvent.shiftKey) {\r\n      let ar = []\r\n      if (data.index + 1 > lastSelectedIndex) {\r\n        ar = activeResults.slice(lastSelectedIndex, data.index + 1)\r\n      } else {\r\n        ar = activeResults.slice(data.index, lastSelectedIndex)\r\n      }\r\n      const rr = ar.filter(obj => !selectPool.includes(obj.id)).map(obj => obj.id)\r\n      setSelectPool(prevState => ([\r\n        ...prevState,\r\n        ...rr\r\n      ]))\r\n      setLastSelectedIndex(data.index)\r\n      return\r\n    }\r\n    setLastSelectedIndex(data.index)\r\n    if (data.event.nativeEvent.ctrlKey) {\r\n      if (selectPool.includes(data.id)) {\r\n        const n = selectPool.filter(id => {\r\n          return id !== data.id\r\n        })\r\n        setSelectPool(n)\r\n        return\r\n      } else {\r\n        setSelectPool(prevState => ([\r\n          ...prevState,\r\n          data.id\r\n        ]))\r\n        return\r\n      }\r\n    }\r\n    // при простом клике мышью\r\n    if (selectPool.includes(data.id)) {\r\n      if (selectPool.length > 1) {\r\n        setSelectPool([data.id])\r\n        return\r\n      }\r\n      setSelectPool([])\r\n    } else {\r\n      setSelectPool([data.id])\r\n    }\r\n  }\r\n\r\n\r\n  const deleteComplitely = () => {\r\n    deleteResult({\r\n      variables: {\r\n        results: selectPool\r\n      },\r\n      update: (cache, { data }) => {\r\n        const deletedPool = data.deleteResults.map(del => del.id)\r\n        setActiveResults(activeResults.filter(result => !deletedPool.includes(result.id)))\r\n        console.log(cache.data.data);\r\n        cache.modify({\r\n          fields: {\r\n            pollResults(existingRefs, { readField }) {\r\n              console.log(existingRefs);\r\n              return existingRefs.filter(respRef => !deletedPool.includes(readField('id', respRef)))\r\n            }\r\n          }\r\n        })\r\n      }\r\n    })\r\n    setDelOpen(false)\r\n  }\r\n\r\n  const handleResultsDelete = () => {\r\n    setDelOpen(true)\r\n  }\r\n\r\n  const handleResultsBatchUpdate = () => {\r\n\r\n  }\r\n\r\n  const handleResultsExport = () => {\r\n    const resultsPool = activeResults.filter(result =>\r\n      selectPool.includes(result.id)\r\n    ).map(obj => obj.result)\r\n    const lResults = resultsPool.length\r\n    let allResults = ''\r\n    for (let i = 0; i < lResults; i++) {\r\n      const oderedResults = resultsPool[i].slice().sort((a, b) => (a.code > b.code) ? 1 : -1)\r\n      const details = oderedResults.map(obj => {\r\n        if (obj.text !== '') {\r\n          return obj.code + ' ' + obj.text\r\n        }\r\n        return obj.code\r\n      })\r\n      allResults += details + ',999' + '\\n'\r\n    }\r\n    downloadIt(allResults)\r\n  }\r\n\r\n  const downloadIt = (data) => {\r\n    const element = document.createElement('a')\r\n    const file = new Blob([data], { type: 'text/plain' });\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"myFile.txt\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  }\r\n\r\n  // ФИЛЬТРЫ\r\n  const handleCityChange = (_, values) => {\r\n    const cities = values.map(city => city.value)\r\n    setActiveFilters({\r\n      cities\r\n    })\r\n  }\r\n\r\n  const handleStatusChahge = (_, values) => {\r\n\r\n  }\r\n\r\n\r\n  const handleDataChange = (e) => {\r\n    const date = e.target.value\r\n    setDdate(date)\r\n  }\r\n\r\n\r\n  const icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\n  const checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\n  return (\r\n    <Fragment>\r\n      <ConfirmDialog\r\n        open={delOpen}\r\n        confirm={deleteComplitely}\r\n        close={() => setDelOpen(false)}\r\n        data={\r\n          {\r\n            title: 'Удалить выбранные результаты?',\r\n            text: 'Внимание! Выбранные результаты будут уничтожены безвозвратно. Будьте внимательны!'\r\n          }\r\n        }\r\n      />\r\n      <div className=\"result-service-zone\">\r\n        {/* <Typography className=\"header\">Общие результаты опроса</Typography> */}\r\n        <Grid container justify=\"space-between\" className=\"service-buttons\">\r\n          <Box className=\"main-buttons\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleResultsExport}\r\n              disabled={!selectPool.length}\r\n              startIcon={<PublishIcon />}\r\n            >\r\n              Выгрузить\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleResultsBatchUpdate}\r\n              disabled={!selectPool.length}\r\n              startIcon={<DynamicFeedIcon />}\r\n            >\r\n              Обновить\r\n            </Button>\r\n          </Box>\r\n          <Box>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={handleResultsDelete}\r\n              disabled={!selectPool.length}\r\n              startIcon={<DeleteIcon />}\r\n            >\r\n              Удалить\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n        <Grid container justify=\"flex-start\" alignItems=\"center\" spacing={2}>\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <TextField\r\n              style={{ width: '100%' }}\r\n              id=\"date\"\r\n              type=\"date\"\r\n              variant=\"outlined\"\r\n              value={ddate}\r\n              onChange={handleDataChange}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    {true ?\r\n                      <Tooltip title=\"Очистить\">\r\n                        <ClearIcon style={{ cursor: \"pointer\" }}\r\n                          onClick={() => setDdate('')}\r\n                        />\r\n                      </Tooltip>\r\n                      :\r\n                      \"\"\r\n                    }\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <Autocomplete\r\n              multiple\r\n              limitTags={1}\r\n              options={filters.age}\r\n              disableCloseOnSelect\r\n              clearOnEscape\r\n              onChange={handleChange}\r\n              noOptionsText={\"Опции не настроены\"}\r\n              getOptionLabel={(option) => option.title}\r\n              renderOption={(option, { selected }) => (\r\n                <React.Fragment>\r\n                  <Checkbox\r\n                    icon={icon}\r\n                    checkedIcon={checkedIcon}\r\n                    style={{ marginRight: 8 }}\r\n                    checked={selected}\r\n                  />\r\n                  {option.title}\r\n                </React.Fragment>\r\n              )}\r\n              renderInput={(params) => (\r\n                <TextField {...params} variant=\"outlined\" label=\"Возраст\" />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <Autocomplete\r\n              multiple\r\n              limitTags={1}\r\n              options={filters.sex}\r\n              disableCloseOnSelect\r\n              clearOnEscape\r\n              onChange={handleChange}\r\n              noOptionsText={\"Опции не настроены\"}\r\n              getOptionLabel={(option) => option.title}\r\n              renderOption={(option, { selected }) => (\r\n                <React.Fragment>\r\n                  <Checkbox\r\n                    icon={icon}\r\n                    checkedIcon={checkedIcon}\r\n                    style={{ marginRight: 8 }}\r\n                    checked={selected}\r\n                  />\r\n                  {option.title}\r\n                </React.Fragment>\r\n              )}\r\n              renderInput={(params) => (\r\n                <TextField {...params} variant=\"outlined\" label=\"Пол\" />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <Autocomplete\r\n              multiple\r\n              limitTags={1}\r\n              options={filters.cities.sort((a, b) => a.category - b.category)}\r\n              groupBy={(option) => option.category}\r\n              disableCloseOnSelect\r\n              clearOnEscape\r\n              onChange={handleCityChange}\r\n              noOptionsText={\"Опции не настроены\"}\r\n              getOptionLabel={(option) => option.title}\r\n              renderOption={(option, { selected }) => (\r\n                <React.Fragment>\r\n                  <Checkbox\r\n                    icon={icon}\r\n                    checkedIcon={checkedIcon}\r\n                    style={{ marginRight: 8 }}\r\n                    checked={selected}\r\n                  />\r\n                  {option.title}\r\n                </React.Fragment>\r\n              )}\r\n              renderInput={(params) => (\r\n                <TextField {...params} variant=\"outlined\" label=\"Город\"\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container justify=\"flex-start\" alignItems=\"center\" spacing={2}>\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <Autocomplete\r\n              multiple\r\n              limitTags={1}\r\n              options={filters.intervievers}\r\n              disableCloseOnSelect\r\n              clearOnEscape\r\n              onChange={handleChange}\r\n              noOptionsText={\"Опции не настроены\"}\r\n              getOptionLabel={(option) => option.title}\r\n              renderOption={(option, { selected }) => (\r\n                <React.Fragment>\r\n                  <Checkbox\r\n                    icon={icon}\r\n                    checkedIcon={checkedIcon}\r\n                    style={{ marginRight: 8 }}\r\n                    checked={selected}\r\n                  />\r\n                  {option.title}\r\n                </React.Fragment>\r\n              )}\r\n              renderInput={(params) => (\r\n                <TextField {...params} variant=\"outlined\" label=\"Интервьюер\" />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <Autocomplete\r\n              options={filters.status}\r\n              onChange={handleStatusChahge}\r\n              noOptionsText={\"Опции не настроены\"}\r\n              getOptionLabel={(option) => option.title}\r\n              renderInput={(params) => (\r\n                <TextField {...params} variant=\"outlined\" label=\"Статус\" />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item container xs={12} sm={6} md={3} lg={3} justify=\"flex-start\">\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleResultsExport}\r\n              disabled={!selectPool.length}\r\n            >\r\n              применить\r\n            </Button>\r\n          </Grid>\r\n          <Grid item container xs={12} sm={6} md={3} lg={3} justify=\"flex-end\">\r\n            <Box m={1}>\r\n              <a href=\"\">Есть дубли</a>\r\n            </Box>\r\n            <Box m={1}>\r\n              <a href=\"\">Есть проблемы</a>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <ConfirmDialog\r\n        open={delConfirm}\r\n        confirm={handleDialogConfirm}\r\n        close={handleDialogClose}\r\n        data={\r\n          {\r\n            title: 'Удалить населенный пункт?',\r\n            text: 'Внимание! Результаты опросов учитывают н.п. в которых они проводились, удаление приведет к потере части статистики и некорректности ее отображения.'\r\n          }\r\n        }\r\n      />\r\n      <Grid container spacing={3} xs={12}>\r\n        {activeResults.map((result, index) => (\r\n          <Grid item xs={12} sm={6} md={3} lg={2} key={index} >\r\n            <RespondentCard\r\n              result={result}\r\n              index={index}\r\n              show={showDetails}\r\n              edit={handleEdit}\r\n              selected={selectPool.includes(result.id)}\r\n              select={handleSelect}\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default OverallResults","import React, { Fragment, useEffect, useRef, useState } from 'react'\r\nimport Chart from 'chart.js'\r\n\r\nconst BarChart = ({ question }) => {\r\n\r\n  const [data, setData] = useState({\r\n    labels: question.answers.map((_, index) => index + 1 + ''),\r\n    set: [\r\n      {\r\n        label: 'Кол-во',\r\n        data: question.answers.map(answer => answer.results.length)\r\n      }\r\n    ]\r\n  })\r\n\r\n  const chartRef = useRef()\r\n  useEffect(() => {\r\n    const myChartRef = chartRef.current.getContext(\"2d\")\r\n\r\n    new Chart(myChartRef, {\r\n      type: \"bar\",\r\n      data: {\r\n        labels: data.labels,\r\n        datasets: data.set\r\n      },\r\n      options: {\r\n        showLines: false, // disable for all datasets\r\n        animation: {\r\n          duration: 0 // general animation time\r\n        },\r\n        hover: {\r\n          animationDuration: 0 // duration of animations when hovering an item\r\n        },\r\n        responsiveAnimationDuration: 0, // animation duration after a resize\r\n        legend: {\r\n          display: false,\r\n          labels: {\r\n            // This more specific font property overrides the global property\r\n            fontColor: 'black',\r\n            fontSize: 16\r\n          }\r\n        },\r\n        scales: {\r\n          yAxes: [{\r\n            ticks: {\r\n              beginAtZero: true\r\n            }\r\n          }]\r\n        }\r\n      }\r\n    });\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <canvas ref={chartRef} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default BarChart","import React, { Fragment } from 'react'\r\n\r\nconst LinearTable = ({ index, question }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"linear-table\">\r\n        <table >\r\n          <tr>\r\n            <th>&nbsp;</th><th>Ответов</th><th>%</th>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"question-title\" colspan=\"3\"><strong>{index + 1}. {question.title}</strong></td>\r\n          </tr>\r\n          {question.answers.map((answer, index) =>\r\n            <tr>\r\n              <td className=\"answer-title\">\r\n                <strong>{index + 1}</strong>. - <strong>{answer.code}</strong> {answer.title}</td><td>{answer.results.length}</td>\r\n              <td>-</td>\r\n            </tr>\r\n          )}\r\n        </table>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default LinearTable","import { gql } from '@apollo/client'\r\n\r\nexport const GET_POLL_WITH_RESULTS = gql`\r\n  query ($id: ID!) {\r\n    poll(id: $id) {\r\n      id\r\n      title\r\n      questions {\r\n        id\r\n        title\r\n        order\r\n        limit\r\n        type\r\n        answers {\r\n          id\r\n          title\r\n          order\r\n          code\r\n          results {\r\n            id\r\n            code\r\n            text\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n`","import React, { Fragment } from 'react'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport LoadingState from '../../../../components/LoadingState'\r\nimport ErrorState from '../../../../components/ErrorState'\r\n\r\nimport BarChart from '../../components/BarChart'\r\nimport LinearTable from '../../components/LinearTable'\r\n\r\nimport { useQuery } from '@apollo/client'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { GET_POLL_WITH_RESULTS } from './queries'\r\n\r\nconst LinearDistribution = ({ id }) => {\r\n\r\n  const {\r\n    data: pollResults,\r\n    loading: pollResultsLoading,\r\n    error: pollResultsError\r\n  } = useQuery(GET_POLL_WITH_RESULTS, {\r\n    variables: {\r\n      id\r\n    },\r\n    onCompleted: () => {\r\n      console.log(pollResults);\r\n    }\r\n  });\r\n\r\n  if (pollResultsLoading) return (\r\n    <LoadingState type=\"card\" />\r\n  )\r\n\r\n  if (pollResultsError) {\r\n    console.log(JSON.stringify(pollResultsError));\r\n    return (\r\n      <ErrorState\r\n        title=\"Что-то пошло не так\"\r\n        description=\"Не удалось загрузить критические данные. Смотрите консоль\"\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <p> Линейное распределение ответов</p>\r\n      <Grid item container>\r\n        {pollResults.poll.questions.map((question, index) => (\r\n          <Fragment>\r\n            <Grid xs={12} md={6}>\r\n              <LinearTable index={index} key={question.id} question={question} />\r\n            </Grid>\r\n            <Grid xs={12} md={6}>\r\n              <BarChart question={question} />\r\n            </Grid>\r\n            <p></p>\r\n          </Fragment>\r\n        ))}\r\n      </Grid>\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default LinearDistribution","import { gql } from '@apollo/client'\r\n\r\nexport const GET_POLL_DATA = gql`\r\n  query($id: ID!) {\r\n    poll(id: $id) {\r\n      id\r\n      title\r\n      code\r\n      liter\r\n      questions {\r\n        id\r\n        title\r\n        limit\r\n        order\r\n        answers {\r\n          id\r\n          title\r\n          order\r\n          code\r\n          results {\r\n            id\r\n            code\r\n            text\r\n          }\r\n        }\r\n      }\r\n      logic {\r\n        path\r\n      }\r\n    }\r\n  }\r\n`","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { mainUrl } from \"../../../../mainconfig\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport LoadingState from '../../../../components/LoadingState'\r\nimport ErrorState from '../../../../components/ErrorState'\r\nimport SystemNoti from '../../../../components/SystemNoti'\r\nimport LoadingStatus from '../../../../components/LoadingStatus'\r\n\r\nimport LinearTable from '../../components/LinearTable'\r\nimport BarChart from '../../components/BarChart'\r\n\r\nimport { parseIni, normalizeLogic } from '../../../../modules/PollDrive/lib/utils'\r\n\r\nimport { useQuery } from '@apollo/client'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { GET_POLL_DATA } from './queries'\r\n\r\nconst BatchInput = ({ id }) => {\r\n  const [dataPool, setDataPool] = useState(false)\r\n  const [logic, setLogic] = useState(false)\r\n  const [processing, setProcessing] = useState(false)\r\n\r\n  const [displayData, setDisplayData] = useState(false)\r\n\r\n  useEffect(() => {\r\n\r\n    if (dataPool) {\r\n      const poll = pollData ? pollData.poll : null\r\n      if (poll) {\r\n        const questions = poll.questions\r\n        const resultPoolLength = dataPool.length\r\n        // пройтись по невидимым сперва\r\n\r\n        const newQuestionsPool = questions.map(question => {\r\n          const newAnswersPool = question.answers.map(answer => {\r\n            let temp = [...answer.results]\r\n            for (let i = 0; i < resultPoolLength; i++) {\r\n              if (dataPool[i].includes(answer.code)) {\r\n                temp.push({\r\n                  code: answer.code,\r\n                  text: ''\r\n                })\r\n              }\r\n            }\r\n            return {\r\n              ...answer,\r\n              results: temp\r\n            }\r\n          })\r\n          return {\r\n            ...question,\r\n            answers: newAnswersPool\r\n          }\r\n        })\r\n        setDisplayData(newQuestionsPool)\r\n        console.log(newQuestionsPool);\r\n      }\r\n    }\r\n  }, [dataPool])\r\n\r\n  const {\r\n    data: pollData,\r\n    loading: pollDataLoading,\r\n    error: pollDataError\r\n  } = useQuery(GET_POLL_DATA, {\r\n    variables: {\r\n      id\r\n    },\r\n    onCompleted: () => {\r\n      handleConfigFile(pollData.poll.logic.path)\r\n      console.log(pollData);\r\n    }\r\n  });\r\n\r\n  const handleConfigFile = (filePath) => {\r\n    fetch(mainUrl + filePath)\r\n      .then((r) => r.text())\r\n      .then(text => {\r\n        const logic = parseIni(text)\r\n        // Нормализация ЛОГИКИ - здесь формируется ЛОГИКА опроса, на основании конфиг файла !!!\r\n        const normLogic = normalizeLogic(logic)\r\n        setLogic(normLogic)\r\n      })\r\n  }\r\n\r\n  const handleWarInput = (e) => {\r\n    e.preventDefault()\r\n    if (!e.target.files[0]) return\r\n    setProcessing(true)\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n\r\n    if (file) {\r\n      reader.onloadend = () => {\r\n        // + удаляем перенос строк\r\n        const oprTextRaw = reader.result.replace(/\\r?\\n/g, \"\")\r\n        const oprArrayRaw = oprTextRaw.split(',999')\r\n        const oprArray = oprArrayRaw.filter(arr => arr.length)\r\n        const aLength = oprArray.length\r\n        let splitedCodesArrays = []\r\n        for (let i = 0; i < aLength; i++) {\r\n          const tempAr = oprArray[i].split(',')\r\n          const tempLength = tempAr.length\r\n          let normTemp = []\r\n          for (let j = 0; j < tempLength; j++) {\r\n            const atomData = tempAr[j]\r\n            normTemp.push(atomData.trim())\r\n          }\r\n          splitedCodesArrays.push(normTemp)\r\n        }\r\n        setDataPool(splitedCodesArrays)\r\n        setProcessing(false)\r\n      }\r\n    }\r\n    reader.readAsText(file);\r\n    e.target.value = \"\"\r\n  }\r\n\r\n  if (pollDataLoading) return (\r\n    <LoadingState type=\"card\" />\r\n  )\r\n\r\n  if (pollDataError) {\r\n    console.log(JSON.stringify(pollDataError));\r\n    return (\r\n      <ErrorState\r\n        title=\"Что-то пошло не так\"\r\n        description=\"Не удалось загрузить критические данные. Смотрите консоль\"\r\n      />\r\n    )\r\n  }\r\n\r\n  const Loading = () => {\r\n    if (processing) return <LoadingStatus />\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Loading />\r\n      <p> Пакетный ввод данных</p>\r\n      <Grid container spacing={3} xs={12}>\r\n        <Grid item xs={12}>\r\n          <Box>\r\n            <label>Подгрузите файл с результатами</label>\r\n            <br />\r\n            <input\r\n              type=\"file\"\r\n              onInput={handleWarInput}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        {displayData &&\r\n          displayData.map((question, index) => (\r\n            <Fragment>\r\n              <Grid xs={12} md={6}>\r\n                <LinearTable index={index} key={question.id} question={question} />\r\n                <p></p>\r\n              </Grid>\r\n              <Grid xs={12} md={6}>\r\n                <BarChart question={question} />\r\n                <p></p>\r\n              </Grid>\r\n            </Fragment>\r\n          ))}\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default BatchInput","import React from 'react'\r\n\r\nimport AdaptiveTabs from '../../components/AdaptiveTabs'\r\n\r\nimport Generation from './containers/Generation'\r\nimport OverallResults from './containers/OverallResults'\r\nimport LinearDistibution from './containers/LinearDistribution'\r\nimport BatchInput from './containers/BatchInput'\r\n\r\nconst PollResults = ({ id }) => {\r\n  const data = [\r\n    {\r\n      label: 'Общие',\r\n      component: <OverallResults id={id} />\r\n    },\r\n    {\r\n      label: 'Линейка',\r\n      component: <LinearDistibution id={id} />\r\n    },\r\n    {\r\n      label: 'Пакетный',\r\n      component: <BatchInput id={id} />\r\n    },\r\n    {\r\n      label: 'Тестирование',\r\n      component: <Generation id={id} />\r\n    }\r\n  ]\r\n  return (\r\n    <AdaptiveTabs data={data} />\r\n  )\r\n\r\n}\r\n\r\nexport default PollResults","import React, { Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container';\r\nimport SettingBar from '../components/SettingBar'\r\nimport PollResults from '../modules/PollResults'\r\n\r\nconst Results = () => {\r\n  let { id, code } = useParams();\r\n\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title={`Результаты ` + code} />\r\n      <div>\r\n        <Container maxWidth=\"xl\" style={{ padding: 0 }}>\r\n          <PollResults id={id} />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Results","function testXml(xmlString) {\r\n  var parser = new DOMParser();\r\n  var docError = parser.parseFromString('INVALID', 'text/xml');\r\n  var parsererrorNS = docError.getElementsByTagName(\"parsererror\")[0].namespaceURI;\r\n  var doc = parser.parseFromString(xmlString, 'text/xml');\r\n  if (doc.getElementsByTagNameNS(parsererrorNS, 'parsererror').length > 0) {\r\n    return false\r\n  }\r\n  return doc;\r\n}\r\n\r\nconst xmlparser = (xmlString) => {\r\n  const xml = testXml(xmlString)\r\n  if (xml) {\r\n    const results = xml.getElementsByTagName('a')\r\n    const lResults = results.length\r\n    let outData = []\r\n    for (let i = 0; i < lResults; i++) {\r\n      let resultData = {\r\n        unit: results[i].getAttribute('usr_intrv'),\r\n        date: results[i].getAttribute('date_intrv'),\r\n        lan: results[i].getAttribute('start-lan'),\r\n        lon: results[i].getAttribute('start-lon'),\r\n      }\r\n      const questions = results[i].getElementsByTagName('v')\r\n      const lQuestions = questions.length\r\n      let answersPool = []\r\n      for (let i = 0; i < lQuestions; i++) {\r\n        const answers = questions[i].getElementsByTagName('o')\r\n        const lAnswers = answers.length\r\n        for (let i = 0; i < lAnswers; i++) {\r\n          const code = answers[i].getAttribute('c').padStart(3, \"0\")\r\n          answersPool.push(code)\r\n        }\r\n        resultData.answers = answersPool\r\n      }\r\n      outData.push(resultData)\r\n    }\r\n    return outData\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nexport default xmlparser","import React, { Fragment, useState } from 'react'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport xmlparser from '../../lib/xmlparser'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst ParchaXmlAnalyzer = () => {\r\n  const [parchaData, setParchaData] = useState(null)\r\n  const [processing, setProcessing] = useState(false)\r\n  const classes = useStyles();\r\n\r\n  const handleInput = (e) => {\r\n    e.preventDefault()\r\n    setProcessing(true)\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    if (file) {\r\n      reader.onloadend = () => {\r\n        const xmlText = reader.result\r\n        const xml = xmlparser(xmlText)\r\n        if (xml) {\r\n          setParchaData(xml)\r\n          setProcessing(false)\r\n          return\r\n        } else {\r\n          setProcessing(false)\r\n          console.log('Неправильный формат XML');\r\n          return\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  const UnitInfo = ({ data }) => {\r\n    console.log(data);\r\n    if (data.lan !== '' || data.lon !== '') {\r\n      return data.answers.toString() + ',999'\r\n    } else {\r\n      return data.answers.toString() + ',999' + '-'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Backdrop className={classes.backdrop} open={processing} >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <input\r\n        type=\"file\"\r\n        onInput={handleInput}\r\n      />\r\n      <div className=\"parcha-results\">\r\n        {parchaData ?\r\n          parchaData.map((result, i) => (\r\n            <div>\r\n              { <UnitInfo data={result} />}\r\n            </div>\r\n          )) : <p>Подгрузите данные</p>\r\n        }\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ParchaXmlAnalyzer","import React, { Fragment } from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nconst WarShow = ({ data }) => {\r\n  return (\r\n    <Fragment>\r\n      <Grid container spacing={3}>\r\n        {data.map(({ person, places }, index) => {\r\n          const placesOfWork = places.map(({ title, workDays }) => {\r\n            const workD = workDays.map(d => <span><span>{d}</span><br /></span>)\r\n            return (\r\n              <span>\r\n                <span className=\"work-title\">{title}</span><br />\r\n                <span>{workD}</span>\r\n              </span>\r\n            )\r\n          })\r\n          return (\r\n            <Grid item xs={6} sm={6} md={4}>\r\n              <Paper>\r\n                <span>№ п.п. {index + 1}</span><br />\r\n                <span>№ по списку {person[0]}</span><br />\r\n                <span>{person[1]}</span><span className=\"person-name\">{`${person[2]} ${person[3]} ${person[4].slice(0, -1)} `}</span><br />\r\n                <span>{`${person[2]} ${person[3].substring(0, 1)}.${person[4].substring(0, 1)}. `}</span><br />\r\n                <span>Дата рождения: {person[5]}</span><br />\r\n                <span>Дата увольнения:</span><span className=\"person-out\"> {person[6]}</span>\r\n                <Divider />\r\n                <span className=\"work-header\"><em>Места работы:</em></span><br />\r\n                <span>{placesOfWork}</span>\r\n              </Paper>\r\n            </Grid>\r\n          )\r\n        })}\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default WarShow","export const pensParser = (text) => {\r\n  let empty = []\r\n  let need = []\r\n  let persons = []\r\n  const rr = text.split('\\n\\r')\r\n  const regEx = /нет сведен.., составляющ.. пенсионн.. прав.?/\r\n  for (let i = 0; i < rr.length; i++) {\r\n    if (regEx.test(rr[i])) {\r\n      let person = []\r\n      const splited = rr[i].split(' ')\r\n      person.push(splited[7], splited[8], splited[9], splited[10])\r\n      empty.push({\r\n        person,\r\n        data: null\r\n      })\r\n    } else {\r\n      let person = []\r\n      const splited = rr[i].split(' ')\r\n      person.push(splited[7], splited[8], splited[9], splited[10])\r\n      const full = rr[i]\r\n      need.push({\r\n        person,\r\n        data: full\r\n      })\r\n    }\r\n  }\r\n  const result = {\r\n    empty,\r\n    need\r\n  }\r\n  return result\r\n}\r\n\r\nexport const warior = (text) => {\r\n  let empty = []\r\n  let need = []\r\n  let persons = []\r\n  const rr = text.split('\\n')\r\n  for (let i = 0; i < rr.length; i++) {\r\n    let person = []\r\n    const splited = rr[i].split(';')\r\n    person.push(splited[0], splited[1], splited[2], splited[3], splited[4])\r\n    persons.push(person)\r\n  }\r\n  return persons\r\n}\r\n\r\nconst compareLists = (war, pens) => {\r\n  let doesNotMatch = []\r\n  let warMatchPool = []\r\n  // подсчет всех - просто промежуточные данные\r\n  const pensData = [...pens.empty, ...pens.need]\r\n  for (let i = 0; i < war.length; i++) {\r\n    const warPersonName = war[i][2]\r\n    const warPersonBorn = war[i][3]\r\n    const warPersonDismissal = war[i][4]\r\n    const warPersonSurname = warPersonName.split(' ')[0].toLowerCase()\r\n    let comp = 0\r\n    for (let j = 0; j < pensData.length; j++) {\r\n      const pensPersonSurname = pensData[j].person[0].toLowerCase()\r\n      const pensPersonBorn = pensData[j].person[3]\r\n      if (warPersonSurname === pensPersonSurname & warPersonBorn === pensPersonBorn) {\r\n        comp++\r\n      }\r\n    }\r\n    if (comp) {\r\n      warMatchPool.push(war[i])\r\n    } else {\r\n      doesNotMatch.push(war[i])\r\n    }\r\n  }\r\n  // вычисление и склеивание только нужных персон\r\n  const pensNeedData = [...pens.need]\r\n  let resulNeedData = []\r\n  let resultNotNeedData = []\r\n  for (let i = 0; i < warMatchPool.length; i++) {\r\n    const warPersonNum = warMatchPool[i][0]\r\n    const warPersonRank = warMatchPool[i][1]\r\n    const warPersonName = warMatchPool[i][2]\r\n    const warPersonBorn = warMatchPool[i][3]\r\n    const warPersonDismissal = warMatchPool[i][4]\r\n    const warPersonSurname = warPersonName.split(' ')[0].toLowerCase()\r\n    let comp = 0\r\n    for (let j = 0; j < pensNeedData.length; j++) {\r\n      const pensPersonSurname = pensNeedData[j].person[0].toLowerCase()\r\n      const pensPersonBorn = pensNeedData[j].person[3]\r\n      if (warPersonSurname === pensPersonSurname & warPersonBorn === pensPersonBorn) {\r\n        const persD = [warPersonNum, warPersonRank, ...pensNeedData[j].person, warPersonDismissal]\r\n        resulNeedData.push({\r\n          person: persD,\r\n          data: pensNeedData[j].data\r\n        })\r\n        comp++\r\n      }\r\n    }\r\n    if (!comp) {\r\n      // В/сл по которым нет сведения в пенсионном фонде\r\n      const person = [warPersonNum, warPersonRank, warPersonName, warPersonBorn, warPersonDismissal]\r\n      resultNotNeedData.push(\r\n        person\r\n      )\r\n    }\r\n  }\r\n  return resulNeedData\r\n}\r\n\r\nexport const processLists = (war, pens) => {\r\n  const resulNeedData = compareLists(war, pens)\r\n  let aLength = resulNeedData.length\r\n  // let aLength = 4\r\n  const regEx = /Факт работы \\(с 2017/;\r\n  let normalize = []\r\n  let sheeet = []\r\n  let finalResult = []\r\n  for (let i = 0; i < aLength; i++) {\r\n    const personData = resulNeedData[i]\r\n    const person = personData.person\r\n    const places = personData.data\r\n    const splited = places.split('\\n').slice(3)\r\n    // if (!regEx.test(splited[0])) {\r\n    //   console.log(person);\r\n    // }\r\n    finalResult.push({\r\n      person,\r\n      places: [...glueNormData(splited.slice(1))]\r\n    })\r\n  }\r\n  return finalResult\r\n}\r\n\r\nexport const compareDates = (data) => {\r\n  const intrestPersons = data.map((obj, index) => {\r\n    const dateReg = /^(\\d{2}).(\\d{2}).(\\d{4})/\r\n    const dateOfDismissal = Date.parse(obj.person[6].replace(dateReg, '01.$2.$3'))\r\n    const dateMatch = obj.person[6].match(dateReg)\r\n    const maxNeedDate = Date.parse('01.' + dateMatch[2] + '.' + (parseInt(dateMatch[3], 10) + + 2))\r\n    const places = obj.places\r\n    let placesOfWork = []\r\n    for (let i = 0; i < places.length; i++) {\r\n      const workDate = places[i].work\r\n      let workArray = []\r\n      for (let j = 0; j < workDate.length; j++) {\r\n        const dateInWork = Date.parse(getDateFromString(workDate[j]))\r\n        if (dateInWork >= dateOfDismissal & dateInWork <= maxNeedDate) {\r\n          workArray.push(workDate[j])\r\n        }\r\n      }\r\n      if (workArray.length) {\r\n        placesOfWork.push({\r\n          title: places[i].title,\r\n          workDays: workArray\r\n        })\r\n      }\r\n    }\r\n    if (placesOfWork.length) {\r\n      return { ...obj, places: placesOfWork }\r\n    } else {\r\n      return false\r\n    }\r\n  }).filter(person => person)\r\n  return intrestPersons\r\n}\r\n\r\nconst getDateFromString = (dString) => {\r\n  const reg = /([а-яА-Я]+)\\s(\\d{4})/\r\n  const dd = dString.match(reg)\r\n  const month = dd[1]\r\n  const year = dd[2]\r\n  switch (month) {\r\n    case 'январь':\r\n      return '01.01.' + year\r\n    case 'февраль':\r\n      return '01.02.' + year\r\n    case 'март':\r\n      return '01.03.' + year\r\n    case 'апрель':\r\n      return '01.04.' + year\r\n    case 'май':\r\n      return '01.05.' + year\r\n    case 'июнь':\r\n      return '01.06.' + year\r\n    case 'июль':\r\n      return '01.07.' + year\r\n    case 'август':\r\n      return '01.08.' + year\r\n    case 'сентябрь':\r\n      return '01.09.' + year\r\n    case 'октябрь':\r\n      return '01.10.' + year\r\n    case 'ноябрь':\r\n      return '01.11.' + year\r\n    case 'декабрь':\r\n      return '01.12.' + year\r\n  }\r\n}\r\n\r\nconst glueNormData = (placesRaw) => {\r\n  let places = []\r\n  let dates = 1\r\n  let title = ''\r\n  let work = []\r\n  const dataReg = /^(\\S+) (\\d{4})\\s/\r\n  // обработка данных от ПФР\r\n  for (let k = 0; k < placesRaw.length; k++) {\r\n    if (!dataReg.test(placesRaw[k])) {\r\n      if (dates) {\r\n        places = [...places, { title, work }]\r\n        title = placesRaw[k]\r\n        work = []\r\n      } else {\r\n        title += \" \" + placesRaw[k]\r\n      }\r\n      dates = 0\r\n    } else {\r\n      work.push(placesRaw[k])\r\n      if (k === placesRaw.length - 1) {\r\n        places = [...places, { title, work }]\r\n      }\r\n      dates = 1\r\n    }\r\n  }\r\n  return places.slice(1)\r\n}\r\n\r\n\r\n// уже не надо\r\nconst glueSheetData = (placesRaw) => {\r\n  let places = []\r\n  let dates = 1\r\n  let title = ''\r\n  let work = []\r\n  const dataReg = /\\d{2}.\\d{2}.\\d{4}-\\d{2}.\\d{2}.\\d{4}/\r\n  const dataRegEx = /^(\\S+) (\\d{4})\\s/\r\n  // обработка данных от ПФР\r\n  for (let k = 0; k < placesRaw.length; k++) {\r\n    if (!dataReg.test(placesRaw[k]) & !dataRegEx.test(placesRaw[k])) {\r\n      if (dates) {\r\n        places = [...places, { title, work }]\r\n        title = placesRaw[k]\r\n        work = []\r\n      } else {\r\n        title += \" \" + placesRaw[k]\r\n      }\r\n      dates = 0\r\n    } else {\r\n      work.push(placesRaw[k])\r\n      if (k === placesRaw.length - 1) {\r\n        places = [...places, { title, work }]\r\n      }\r\n      dates = 1\r\n    }\r\n  }\r\n\r\n  // нормализовать даты\r\n  const workDates = places.map(obj => {\r\n    const workArray = obj.work\r\n    for (let i = 0; i < workArray.length; i++) {\r\n      if (dataReg.test(workArray[i])) {\r\n        console.log(workArray[i]);\r\n      }\r\n    }\r\n    return obj\r\n  })\r\n\r\n  return places.slice(1)\r\n}","import React, { Fragment, useState } from 'react'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport WarShow from '../WarShow'\r\nimport CsvShow from '../CsvShow'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { pensParser, warior, processLists, compareDates } from '../../lib/txtparser'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst WordAnalyzer = () => {\r\n  const [pensData, setPensData] = useState(null)\r\n  const [warData, setWarData] = useState(null)\r\n  const [processing, setProcessing] = useState(false)\r\n  const [errorMessage, setMessage] = useState(null)\r\n  const [ready, setReady] = useState(null)\r\n  const [processedData, setProcessedData] = useState(null)\r\n  const [finalData, setFinalData] = useState(null)\r\n  const classes = useStyles();\r\n\r\n  const handleInput = (e) => {\r\n    e.preventDefault()\r\n    setMessage(null)\r\n    setProcessing(true)\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    if (file) {\r\n      reader.onloadend = () => {\r\n        const wordText = reader.result\r\n        const data = pensParser(wordText)\r\n        setPensData(data)\r\n        setProcessing(false)\r\n      }\r\n    }\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  const handleWarInput = (e) => {\r\n    e.preventDefault()\r\n    setMessage(null)\r\n    setProcessing(true)\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    if (file) {\r\n      reader.onloadend = () => {\r\n        const wordText = reader.result\r\n        const data = warior(wordText)\r\n        setWarData(data)\r\n        setProcessing(false)\r\n      }\r\n    }\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  const process = () => {\r\n    if (pensData && warData) {\r\n      setMessage(null)\r\n      const pData = processLists(warData, pensData)\r\n      setProcessedData(pData)\r\n      setReady(true)\r\n    } else {\r\n      setMessage('Не все данные подгружены')\r\n    }\r\n  }\r\n\r\n  const processEx = () => {\r\n    if (ready) {\r\n      const itrestPerson = compareDates(processedData)\r\n      console.log(itrestPerson);\r\n      setFinalData(itrestPerson)\r\n    } else {\r\n      if (pensData && warData) {\r\n        setMessage('Сперва нужно обработать')\r\n      } else {\r\n        setMessage('Не все данные подгружены')\r\n      }\r\n    }\r\n  }\r\n\r\n  const UnitInfo = ({ data }) => {\r\n    console.log(data);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Backdrop className={classes.backdrop} open={processing} >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs>\r\n          <Box>\r\n            <label>Список военных</label>\r\n            <br />\r\n            <input\r\n              type=\"file\"\r\n              onInput={handleWarInput}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Box>\r\n            <label>Список песионного фонда</label>\r\n            <br />\r\n            <input\r\n              type=\"file\"\r\n              onInput={handleInput}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={3}>\r\n        <Grid item>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={process}>\r\n            Обработать\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={processEx}>\r\n            Сравнить даты\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <p></p>\r\n      {errorMessage ?\r\n        <Alert severity=\"error\">{errorMessage}</Alert>\r\n        :\r\n        <p></p>\r\n      }\r\n      <div className=\"parcha-results\">\r\n        {finalData ?\r\n          <WarShow data={finalData} />\r\n          : <p></p>\r\n        }\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default WordAnalyzer","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport ParchaXmlAnalyzer from './components/ParchaXmlAnalyzer'\r\nimport WordAnalyzer from './components/WordAnalyzer'\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      className=\"right-pannel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction allProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n    overflow: 'visible'\r\n  },\r\n}));\r\n\r\n\r\nconst PollSettings = ({ id, code }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tabs\r\n        orientation=\"vertical\"\r\n        variant=\"scrollable\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        className={classes.tabs}\r\n      >\r\n        <Tab label=\"Парча\" {...allProps(0)} />\r\n        <Tab label=\"Word\" {...allProps(1)} />\r\n      </Tabs>\r\n      <TabPanel value={value} index={0}>\r\n        <ParchaXmlAnalyzer />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <WordAnalyzer />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PollSettings","import React, { Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport SettingBar from '../components/SettingBar'\r\nimport DataAnalyzer from '../modules/DataAnalyzer'\r\n\r\nconst Analyze = () => {\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title={`Анализатор данных`} />\r\n      <div style={{ paddingTop: '10px' }}>\r\n        <Container maxWidth=\"xl\">\r\n          <DataAnalyzer />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Analyze","import React, { Fragment } from 'react'\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport SettingBar from '../components/SettingBar'\r\n// import Test from '../containers/Test'\r\n\r\n// const Tester = observer(\r\nconst TesterPage = () => {\r\n\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title='Тестирование инерфейса' />\r\n      <Container maxWidth=\"lg\">\r\n        {/* <Test /> */}\r\n      </Container>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default TesterPage","import { gql } from '@apollo/client'\r\n\r\nexport const GET_POLL_DATA = gql`\r\n  query ($id: ID!) {\r\n    poll(id: $id) {\r\n      id\r\n      title\r\n      code\r\n      liter\r\n      questionsCount\r\n      answersCount\r\n      questions {\r\n        id\r\n        title\r\n        limit\r\n        order\r\n        topic {\r\n          id\r\n          title\r\n        }\r\n        answers {\r\n          id\r\n          title\r\n          order\r\n          code\r\n        }\r\n      }\r\n      logic {\r\n        path\r\n      }\r\n    }\r\n  }\r\n`","import React, { Fragment, useState } from 'react'\r\nimport { mainUrl } from '../../../../mainconfig'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport LoadingState from '../../../../components/LoadingState'\r\nimport ErrorState from '../../../../components/ErrorState'\r\n\r\nimport { parseIni, normalizeLogic } from '../../../PollDrive/lib/utils'\r\nimport { useQuery } from '@apollo/client'\r\n\r\nimport { GET_POLL_DATA } from \"./queries\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  popover: {\r\n    pointerEvents: 'none',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst ServiceIcons = ({ answer }) => {\r\n  const edit = (\r\n    <Tooltip key={1} title=\"Свободный ответ\">\r\n      <EditIcon />\r\n    </Tooltip>\r\n  )\r\n  const difficult = (\r\n    <Tooltip key={2} title=\"Затрудняюсь ответить\">\r\n      <EmojiPeopleIcon />\r\n    </Tooltip>\r\n  )\r\n  const unique = (\r\n    <Tooltip key={3} title=\"Уникальный ответ\">\r\n      <FlashOnIcon />\r\n    </Tooltip>\r\n  )\r\n  let r = []\r\n  if (answer.difficult) {\r\n    r.push(difficult)\r\n  }\r\n  if (answer.freeAnswer) {\r\n    r.push(edit)\r\n  }\r\n  if (answer.unique) {\r\n    r.push(unique)\r\n  }\r\n  return r\r\n}\r\n\r\nconst AnswerCard = ({ answer, index }) => {\r\n  return (\r\n    <div className={answer.disabled ? \"answer-card invisible\" : \"answer-card\"}>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Box m={1}>\r\n          <span className=\"answer-number\">{index + 1}.</span>\r\n          <span className=\"devider\"> </span>\r\n          <span className=\"answer-code\">{answer.code}</span>\r\n          <span className=\"devider\"> - </span>\r\n          <span className=\"answer-title\">{answer.title}</span>\r\n\r\n        </Box>\r\n        <Box m={1}>\r\n          <span>\r\n            <ServiceIcons answer={answer} />\r\n          </span>\r\n        </Box>\r\n      </Grid>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nconst QuestionTopic = ({ topic }) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const handlePopoverOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const open = Boolean(anchorEl);\r\n\r\n  return (\r\n    <Fragment>\r\n      <InfoIcon\r\n        onMouseEnter={handlePopoverOpen}\r\n        onMouseLeave={handlePopoverClose}\r\n        fontSize=\"small\" />\r\n      <Popover\r\n        className={classes.popover}\r\n        classes={{\r\n          paper: classes.paper,\r\n        }}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n        }}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n          Тема: {topic.title}\r\n        </Typography>\r\n      </Popover>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst QuestionCard = ({ question, index }) => {\r\n  return (\r\n    <Card className=\"question-card\">\r\n      <CardContent>\r\n        <div className=\"question-header\">\r\n          <Tooltip title=\"Макс. кол-во ответов\">\r\n            <span className=\"question-limit\">{question.limit}</span>\r\n          </Tooltip>\r\n          <span className=\"question-number\">{index + 1}.</span>\r\n          <span className=\"question-title\" color=\"textSecondary\">\r\n            {question.title}\r\n            <QuestionTopic topic={question.topic} />\r\n          </span>\r\n        </div>\r\n        {question.answers.map((answer, index) => (\r\n          <AnswerCard key={index} answer={answer} index={index} />\r\n        ))}\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst CommonSetting = ({ id }) => {\r\n  const [ready, setReady] = useState(false)\r\n  const [questions, setQuestions] = useState()\r\n  const {\r\n    loading,\r\n    error,\r\n    data: pollData\r\n  } = useQuery(GET_POLL_DATA, {\r\n    variables: { id },\r\n    onCompleted: () => {\r\n      handleConfigFileAndUpdateCache(pollData.poll)\r\n    }\r\n  })\r\n\r\n\r\n  const handleConfigFileAndUpdateCache = (poll) => {\r\n    const filePath = poll.logic.path\r\n    fetch(mainUrl + filePath)\r\n      .then((r) => r.text())\r\n      .then(text => {\r\n        const normalizedLogic = normalizeLogic(parseIni(text))\r\n        const updatedQuestions = modulateQuestionsWithLogic(normalizedLogic)\r\n        setQuestions(updatedQuestions.sort((a, b) => (a.order > b.order) ? 1 : -1))\r\n        setReady(true)\r\n      })\r\n  }\r\n\r\n  const modulateQuestionsWithLogic = (logic) => {\r\n    const modQuestions = pollData.poll.questions.map(question => {\r\n      const newAnswers = question.answers.map(answer => {\r\n        let suffix = {}\r\n        if (logic.invisible) {\r\n          if (logic.invisible.includes(answer.code)) {\r\n            suffix = {\r\n              ...suffix,\r\n              disabled: true\r\n            }\r\n          }\r\n        }\r\n        if (logic.freeAnswers) {\r\n          if (logic.freeAnswers.includes(answer.code)) {\r\n            suffix = {\r\n              ...suffix,\r\n              freeAnswer: true\r\n\r\n            }\r\n          }\r\n        }\r\n        if (logic.unique) {\r\n          if (logic.unique.includes(answer.code)) {\r\n            suffix = {\r\n              ...suffix,\r\n              unique: true\r\n            }\r\n          }\r\n        }\r\n        if (logic.difficult) {\r\n          if (logic.difficult.includes(answer.code)) {\r\n            suffix = {\r\n              ...suffix,\r\n              difficult: true\r\n            }\r\n          }\r\n        }\r\n        const newAnswer = {\r\n          ...answer,\r\n          ...suffix\r\n        }\r\n        return newAnswer\r\n      })\r\n      const newQuestion = {\r\n        ...question,\r\n        answers: newAnswers,\r\n        ffffuck: true\r\n      }\r\n      return newQuestion\r\n    })\r\n    return modQuestions\r\n  }\r\n\r\n  if (loading || !questions || !ready) return (\r\n    <LoadingState type=\"card\" />\r\n  )\r\n\r\n  if (error) {\r\n    console.log(JSON.stringify(error));\r\n    return (\r\n      <ErrorState\r\n        title=\"Что-то пошло не так\"\r\n        description=\"Не удалось загрузить критические данные. Смотрите консоль\"\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container className=\"common-settings\">\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          <strong>Тема: </strong>{pollData.poll.title}\r\n        </Typography>\r\n        <Grid\r\n          className=\"poll-info\"\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Box m={1}>\r\n            <div> Вопросов: {pollData.poll.questionsCount}</div>\r\n          </Box>\r\n          <Box m={1}>\r\n            <div> Ответов: {pollData.poll.answersCount}</div>\r\n          </Box>\r\n        </Grid>\r\n        {questions.map((question, index) => (\r\n          <QuestionCard question={question} key={question.id} index={index} />\r\n        ))}\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default CommonSetting","import { gql } from '@apollo/client'\r\n\r\nexport const logicQuery = gql`\r\n  query logicQuery($id: ID!) {\r\n    pollLogic(id: $id) {\r\n      id\r\n      path\r\n    }\r\n  }\r\n`","import { gql } from '@apollo/client'\r\n\r\nexport const saveConfigChanges = gql`\r\nmutation saveConfigChanges($path: String!, $text: String!) {\r\n  saveConfig(path: $path, text: $text)\r\n}\r\n`","import React, { Fragment, useState, useRef } from 'react'\r\nimport { mainUrl } from '../../../../mainconfig'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Box, Typography } from '@material-ui/core';\r\n\r\nimport LoadingStatus from '../../../../components/LoadingStatus'\r\nimport ErrorState from '../../../../components/ErrorState'\r\nimport LoadingState from '../../../../components/LoadingState'\r\nimport SystemNoti from '../../../../components/SystemNoti'\r\n\r\nimport { useQuery } from '@apollo/client'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { logicQuery } from \"./queries\"\r\nimport { saveConfigChanges } from \"./mutations\"\r\nimport { GET_POLL_DATA } from '../../containers/Common/queries'\r\n\r\nconst ConfigEditor = ({ id }) => {\r\n  const [noti, setNoti] = useState(false)\r\n  const [updated, setUpdated] = useState(false)\r\n  const [config, setConfig] = useState(null)\r\n  const [filePath, setFilePath] = useState(null)\r\n  const textRef = useRef()\r\n  const { loading, error, data } = useQuery(logicQuery, {\r\n    variables: { id },\r\n    onCompleted: () => {\r\n      handleConfigFile(data.pollLogic.path)\r\n    },\r\n  })\r\n\r\n  const [saveConfig, { loading: configSaveLoading }] = useMutation(saveConfigChanges, {\r\n    onError: (e) => {\r\n      console.log(e);\r\n      setNoti({\r\n        type: 'error',\r\n        text: 'Сохранить не удалось. Смотрите консоль.'\r\n      })\r\n    },\r\n    onCompleted: () => {\r\n      setNoti({\r\n        type: 'success',\r\n        text: 'Конфиг сохранен успешно!'\r\n      })\r\n    },\r\n    refetchQueries: () => [{\r\n      query: GET_POLL_DATA,\r\n      variables: {\r\n        id\r\n      }\r\n    }]\r\n  })\r\n\r\n  const handleConfigFile = (filePath) => {\r\n    setFilePath(filePath)\r\n    fetch(mainUrl + filePath)\r\n      .then((r) => r.text())\r\n      .then(text => {\r\n        setConfig(text)\r\n      })\r\n  }\r\n\r\n  const handleSave = (e) => {\r\n    saveConfig({\r\n      variables: {\r\n        path: filePath,\r\n        text: textRef.current.value\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleConfigChange = (e) => {\r\n    if (config === e.currentTarget.value) {\r\n      setUpdated(false)\r\n      return\r\n    }\r\n    setUpdated(true)\r\n  }\r\n\r\n  const Loading = () => {\r\n    if (configSaveLoading) return <LoadingStatus />\r\n    return null\r\n  }\r\n\r\n  if (loading || !config) return (\r\n    <LoadingState type=\"card\" />\r\n  )\r\n\r\n  if (error) {\r\n    console.log(JSON.stringify(error));\r\n    return (\r\n      <ErrorState\r\n        title=\"Что-то пошло не так\"\r\n        description=\"Не удалось загрузить критические данные. Смотрите консоль\"\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <SystemNoti\r\n        open={noti}\r\n        text={noti ? noti.text : \"\"}\r\n        type={noti ? noti.type : \"\"}\r\n        close={() => setNoti(false)}\r\n      />\r\n      <Loading />\r\n\r\n      <Grid item container>\r\n        <Grid item container justify=\"space-between\">\r\n          <Box p={1}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Отображение и настройка конфигурационного файла\r\n            </Typography>\r\n          </Box>\r\n          <Box>\r\n            <Tooltip title=\"Сохранить\">\r\n              <IconButton onClick={handleSave} disabled={!updated}>\r\n                <SaveIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Box>\r\n          <textarea\r\n            ref={textRef}\r\n            defaultValue={config}\r\n            onChange={handleConfigChange}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ConfigEditor","import { gql } from '@apollo/client'\r\n\r\nexport const DELETE_POLL = gql`\r\n  mutation deletePoll($id: ID!) {\r\n    deletePoll(id: $id) {\r\n      title\r\n    }\r\n  }\r\n`","import React, { Fragment, useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { GET_ALL_ACTIVE_POLLS } from '../../../PollHome/queries'\r\nimport { DELETE_POLL } from './mutations'\r\n\r\nconst DeletePoll = ({ id, code }) => {\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false)\r\n  const [incorrect, setIncorrect] = useState(true)\r\n  const [delPoll, { poll }] = useMutation(DELETE_POLL, {\r\n    onCompleted: () => {\r\n      history.push(\"/\")\r\n    }\r\n  })\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handlePollDel = (id) => {\r\n    delPoll({\r\n      variables: {\r\n        id\r\n      },\r\n      refetchQueries: [{ query: GET_ALL_ACTIVE_POLLS }]\r\n    })\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const text = e.currentTarget.value.toUpperCase()\r\n    e.currentTarget.value = text\r\n    if (text.toUpperCase() === code) {\r\n      setIncorrect(false)\r\n    } else {\r\n      setIncorrect(true)\r\n    }\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    handlePollDel(id)\r\n  }\r\n\r\n  const deleteQuery = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Удаление</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Это действие не может быть отменено.\r\n              Оно приведет к безвозвратному удалению ВСЕХ данных опроса.\r\n            </Typography>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              Пожалуйста, введите КОД опроса.\r\n            </Typography>\r\n          </DialogContentText>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Код опроса\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={handleChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={handleDelete} color=\"primary\" disabled={incorrect}>\r\n            Удалить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Grid item container xs={12}>\r\n        <Grid >\r\n          <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n            удаление опроса\r\n        </Typography>\r\n          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n            После удаления ОПРОСА пути назад уже не будет. Пожалуйста, будьте внимательны.\r\n          </Typography>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={deleteQuery}>\r\n            Удалить опрос\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default DeletePoll","import { gql } from '@apollo/client'\r\n\r\nexport const GET_ALL_CITIES_AND_ACTIVE = gql`\r\n  query ($id: ID!) {\r\n    poll(id: $id) {\r\n      id\r\n      cities {\r\n        id\r\n        title\r\n        population\r\n        category {\r\n          title\r\n        }\r\n      }\r\n    }\r\n    cities {\r\n      id\r\n      title\r\n      category {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`","import { gql } from '@apollo/client'\r\n\r\nexport const DELETE_CITY_FROM_ACTIVE = gql`\r\n  mutation ($id: ID!, $cities: [String]) {\r\n    deleteCityFromActive(id: $id, cities: $cities) {\r\n      id\r\n      cities {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const SET_ACTIVE_CITIES = gql`\r\n  mutation ($id: ID!, $cities: [String]) {\r\n    setPollCity(id: $id, cities: $cities) {\r\n      id\r\n      cities {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`","import React, { Fragment, useState } from 'react'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nimport LoadingStatus from '../../../../components/LoadingStatus'\r\nimport ErrorState from '../../../../components/ErrorState'\r\nimport LoadingState from '../../../../components/LoadingState'\r\nimport SystemNoti from '../../../../components/SystemNoti'\r\n\r\nimport ConfirmDialog from '../../../../components/ConfirmDialog'\r\n\r\nimport { gql, useApolloClient, useQuery } from '@apollo/client'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { GET_ALL_CITIES_AND_ACTIVE } from './queries'\r\nimport { SET_ACTIVE_CITIES, DELETE_CITY_FROM_ACTIVE } from './mutations'\r\n\r\nconst CitiesEditor = ({ id }) => {\r\n  const [noti, setNoti] = useState(false)\r\n  // const client = useApolloClient();\r\n  // const { currentUser } = client.readQuery({\r\n  //   query: gql`\r\n  //   query {\r\n  //     currentUser {\r\n  //       id\r\n  //       username\r\n  //     }\r\n  //   }\r\n  //   `,\r\n  // })\r\n  const [clear, setClear] = useState(0)\r\n  const [delId, setDelId] = useState(false)\r\n  const [allCities, setAllCitites] = useState()\r\n  const [availableCities, setAvailableCities] = useState()\r\n  const [selected, setSelected] = useState([])\r\n  const {\r\n    data: citiesData,\r\n    loading: citiesLoading,\r\n    error: cititesError\r\n  } = useQuery(GET_ALL_CITIES_AND_ACTIVE, {\r\n    variables: { id },\r\n    onCompleted: () => {\r\n      const pollCities = citiesData.poll.cities\r\n      setAllCitites(citiesData.cities)\r\n      setAvailableCities(citiesData.cities.filter(\r\n        city => {\r\n          for (let i = 0; i < pollCities.length; i++) {\r\n            if (city.id === pollCities[i].id) {\r\n              return false\r\n            }\r\n          }\r\n          return true\r\n        }\r\n      ))\r\n    }\r\n  })\r\n  const [\r\n    setCityActive,\r\n    { loading: cityActivationLoading }\r\n  ] = useMutation(SET_ACTIVE_CITIES, {\r\n    onError: (e) => {\r\n      console.log(e);\r\n      setNoti({\r\n        type: 'error',\r\n        text: 'Сохранить не удалось. Смотрите консоль.'\r\n      })\r\n    },\r\n    update: (cache, { data: { setPollCity } }) => {\r\n      const cities = setPollCity.cities.map(city => city.id)\r\n      setAvailableCities(availableCities.filter(city => {\r\n        return !cities.includes(city.id)\r\n      }))\r\n    }\r\n  })\r\n  const [\r\n    deleteCity,\r\n    { loading: deleteCityLoading }\r\n  ] = useMutation(DELETE_CITY_FROM_ACTIVE, {\r\n    onError: (e) => {\r\n      console.log(e);\r\n      setNoti({\r\n        type: 'error',\r\n        text: 'Удалить не удалось. Смотрите консоль.'\r\n      })\r\n    },\r\n    update: (cache, { data }) => {\r\n      const pollCities = data.deleteCityFromActive.cities\r\n      const aCitites = allCities.filter(city => {\r\n        for (let i = 0; i < pollCities.length; i++) {\r\n          if (city.id === pollCities[i].id) return false\r\n        }\r\n        return true\r\n      })\r\n      setAvailableCities(aCitites)\r\n    }\r\n  })\r\n\r\n  if (citiesLoading || !citiesData || !availableCities) return (\r\n    <LoadingState type=\"card\" />\r\n  )\r\n\r\n  const Loading = () => {\r\n    if (cityActivationLoading || deleteCityLoading) return <LoadingStatus />\r\n    return null\r\n  }\r\n\r\n  if (cititesError) {\r\n    console.log(JSON.stringify(cititesError));\r\n    return (\r\n      <ErrorState\r\n        title=\"Что-то пошло не так\"\r\n        description=\"Не удалось загрузить критические данные. Смотрите консоль\"\r\n      />\r\n    )\r\n  }\r\n\r\n  const handleCityDelete = (id) => {\r\n    setDelId(id)\r\n  }\r\n\r\n  const handleDelConfirm = () => {\r\n    deleteCityCompletely([delId])\r\n    setDelId(false)\r\n  }\r\n\r\n  const handleAdd = () => {\r\n    const selectedCities = selected.map(obj => {\r\n      return obj.id\r\n    })\r\n    setCityActive({\r\n      variables: {\r\n        id,\r\n        cities: selectedCities\r\n      },\r\n    })\r\n    setClear(clear + 1)\r\n  }\r\n\r\n  const handleChange = (_, value) => {\r\n    setSelected(value)\r\n  }\r\n\r\n  const icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\n  const checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\n  const deleteCityCompletely = (cities) => {\r\n    deleteCity({\r\n      variables: {\r\n        id,\r\n        cities: cities\r\n      }\r\n    })\r\n  }\r\n\r\n  const CityCard = ({ city, deleteCity }) => {\r\n    const handleDelete = () => {\r\n      deleteCity(city.id)\r\n    }\r\n    return (\r\n      <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n        <Paper className=\"city-card\">\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {city.title}\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\" gutterBottom>\r\n            {city.category.title}\r\n          </Typography>\r\n          <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n            Население: {city.population}\r\n          </Typography>\r\n          <Grid container item justify=\"space-between\" className=\"card-service-buttons\">\r\n            <IconButton className=\"card-button\" aria-label=\"delete\" onClick={handleDelete}>\r\n              <DeleteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <SystemNoti\r\n        open={noti}\r\n        text={noti ? noti.text : \"\"}\r\n        type={noti ? noti.type : \"\"}\r\n        close={() => setNoti(false)}\r\n      />\r\n      <Loading />\r\n      <ConfirmDialog\r\n        open={delId}\r\n        confirm={handleDelConfirm}\r\n        close={() => setDelId(false)}\r\n        data={\r\n          {\r\n            title: 'Удалить населенный пункт?',\r\n            text: 'Внимание! Результаты опросов учитывают н.п. в которых они проводились, удаление приведет к потере части статистики и некорректности ее отображения.'\r\n          }\r\n        }\r\n      />\r\n      <div className=\"cities-service-zone\">\r\n        <Typography className=\"header\">Города в которых проводится опрос</Typography>\r\n        <Grid container justify=\"flex-start\" alignItems=\"center\" spacing={2}>\r\n          <Grid item xs={12} sm={8} md={6} lg={5}>\r\n            <Autocomplete\r\n              multiple\r\n              key={clear}\r\n              limitTags={3}\r\n              options={availableCities}\r\n              disableCloseOnSelect\r\n              clearOnEscape\r\n              onChange={handleChange}\r\n              getOptionLabel={(option) => option.title}\r\n              renderOption={(option, { selected }) => (\r\n                <React.Fragment>\r\n                  <Checkbox\r\n                    icon={icon}\r\n                    checkedIcon={checkedIcon}\r\n                    style={{ marginRight: 8 }}\r\n                    checked={selected}\r\n                  />\r\n                  {option.title}\r\n                </React.Fragment>\r\n              )}\r\n              renderInput={(params) => (\r\n                <TextField {...params} variant=\"outlined\" label=\"Добавьте город\" />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={6} lg={5}>\r\n            <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={handleAdd} disabled={!selected.length}>\r\n              Добавить\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <Grid container spacing={3} xs={12} >\r\n        {citiesData.poll.cities.map((city, index) => (\r\n          <CityCard key={index} city={city} deleteCity={handleCityDelete} />\r\n        ))}\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default CitiesEditor","import React, { useState } from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst QuestionCard = ({ question, handleLimitInput }) => {\r\n  const [val, setVal] = useState(question.limit)\r\n\r\n  const handleKeyUp = (e) => {\r\n    if (e.keyCode === 13) e.currentTarget.blur()\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const currentValue = e.currentTarget.value\r\n    console.log(e);\r\n    if (currentValue < 1) {\r\n      setVal(1)\r\n    } else if (currentValue > 99) {\r\n      setVal(99)\r\n    } else {\r\n      setVal(currentValue)\r\n    }\r\n  }\r\n\r\n  const handleBlur = (e) => {\r\n    handleLimitInput({\r\n      id: question.id,\r\n      limit: val\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n      <Paper className=\"question-item\" elevation={2}>\r\n        <Grid item xs={12} sm container>\r\n          <Grid item xs container direction=\"column\" spacing={2} alignItems=\"flex-start\">\r\n            <Grid item xs>\r\n              <Tooltip title=\"Очередность отображения\" aria-label=\"add\">\r\n                <Typography variant=\"body2\" color=\"primary\">\r\n                  {question.order}\r\n                </Typography>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs container direction=\"column\" spacing={3} alignItems=\"flex-end\" >\r\n            <Grid item xs alignItems=\"center\" style={{ cursor: 'pointer' }}>\r\n              <Tooltip title=\"Меню. В разработке\" aria-label=\"add\">\r\n                <MoreVertIcon />\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Tooltip title=\"Лимит ответов\" aria-label=\"add\">\r\n              <input\r\n                type=\"number\"\r\n                className=\"question-limit-input\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                onKeyUp={handleKeyUp}\r\n                value={val}\r\n              />\r\n            </Tooltip>\r\n          </Grid>\r\n        </Grid>\r\n        <Typography className=\"question-title\">\r\n          {question.title.length > 160 ?\r\n            question.title.substring(0, 100) + ' ... ' + question.title.substring(question.title.length - 45) :\r\n            question.title\r\n          }\r\n        </Typography>\r\n\r\n      </Paper>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default QuestionCard","import { gql } from '@apollo/client'\r\n\r\nexport const pollQuery = gql`\r\n  query pollQuery($id: ID!) {\r\n    poll(id: $id) {\r\n      id\r\n      title\r\n      code\r\n      liter\r\n      questions {\r\n        id\r\n        title\r\n        limit\r\n        order\r\n        answers {\r\n          id\r\n          title\r\n          order\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const saveNewLimit = gql`\r\nmutation ($id: ID!, $limit: Int!) {\r\n  newLimit(id: $id, limit: $limit) {\r\n    id\r\n    limit\r\n  }\r\n}\r\n`\r\nexport const saveNewOrder = gql`\r\nmutation ($questions: [ReorderedArray]) {\r\n  newOrder(neworder: $questions) {\r\n    id\r\n    order\r\n  }\r\n}\r\n`","import React, { Fragment, useState } from 'react'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useQuery } from '@apollo/client'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\r\nimport arrayMove from \"array-move\";\r\n\r\nimport LoadingStatus from '../../../../components/LoadingStatus'\r\nimport SystemNoti from '../../../../components/SystemNoti'\r\nimport LoadingState from '../../../../components/LoadingState'\r\nimport ErrorState from '../../../../components/ErrorState'\r\nimport QuestionCard from '../../components/QuestionCard'\r\nimport { pollQuery } from \"./queries\"\r\nimport { saveNewLimit, saveNewOrder } from \"./mutations\"\r\n\r\nconst ReoderEditor = ({ id }) => {\r\n  const [noti, setNoti] = useState(false)\r\n  const [questions, setQuestions] = useState(null)\r\n  const [prevOrder, setPrevOrder] = useState(null)\r\n  const { loading: pollLoading, error: pollError, data } = useQuery(pollQuery, {\r\n    variables: { id },\r\n    onCompleted: () => {\r\n      const questions = data.poll.questions\r\n      console.log(questions);\r\n      setQuestions(questions.slice().sort((a, b) => (a.order > b.order) ? 1 : -1))\r\n    }\r\n  })\r\n  const [saveLimit, { loading: limitSaveLoading }] = useMutation(saveNewLimit, {\r\n    onError: (e) => {\r\n      console.log(e);\r\n      setNoti({\r\n        type: 'error',\r\n        text: 'Сохранить лимит не удалось. Смотрите консоль.'\r\n      })\r\n    }\r\n  })\r\n  const [saveOrder, { loading: saveOrderLoading }] = useMutation(saveNewOrder, {\r\n    onError: (e) => {\r\n      console.log(e);\r\n      setNoti({\r\n        type: 'error',\r\n        text: 'Сохранить порядок не удалось. Смотрите консоль.'\r\n      })\r\n    },\r\n    update: (cache, { data }) => {\r\n      const questions = data.newOrder\r\n      for (let i = 0; i < questions.length; i++) {\r\n        const id = questions[i].id\r\n        const dd = cache.data.data\r\n        for (let key in dd) {\r\n          if (dd[key].id === id) console.log(dd[key]);\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  if (pollLoading || !questions) return (\r\n    <LoadingState type=\"card\" />\r\n  )\r\n\r\n  if (pollError) {\r\n    console.log(JSON.stringify(pollError));\r\n    return (\r\n      <ErrorState\r\n        title=\"Что-то пошло не так\"\r\n        description=\"Не удалось загрузить критические данные. Смотрите консоль\"\r\n      />\r\n    )\r\n  }\r\n\r\n  const Loading = () => {\r\n    if (limitSaveLoading || saveOrderLoading) return <LoadingStatus />\r\n    return null\r\n  }\r\n\r\n  const handleLimitInput = (inputData) => {\r\n    const id = inputData.id\r\n    const limit = +inputData.limit\r\n    setQuestions(questions.map(question => question.id === id ? { ...question, limit: limit } : question))\r\n    saveLimit({\r\n      variables: {\r\n        id,\r\n        limit\r\n      }\r\n    })\r\n  }\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    setPrevOrder({ ...questions })\r\n    console.log(oldIndex, newIndex);\r\n    if (oldIndex !== newIndex) {\r\n      const newArray = arrayMove(questions, oldIndex, newIndex)\r\n      let deltaArray = []\r\n      const newOrder = newArray.reduce((acum, val, index) => {\r\n        if (val.order === index + 1) {\r\n          acum.push(val)\r\n        } else {\r\n          deltaArray.push({\r\n            id: val.id,\r\n            order: index + 1\r\n          })\r\n          acum.push({ ...val, order: index + 1 })\r\n        }\r\n        return acum\r\n      }, [])\r\n      setQuestions(newOrder)\r\n      saveOrder({\r\n        variables: {\r\n          questions: deltaArray\r\n        }\r\n      })\r\n    }\r\n  };\r\n\r\n  const SortableItem = SortableElement(({ question }) =>\r\n    <QuestionCard question={question} handleLimitInput={handleLimitInput} />\r\n  );\r\n\r\n  const SortableList = SortableContainer(({ questions }) => {\r\n    return (\r\n      <Grid container item xs={12} spacing={2}>\r\n        {questions.map((question, index) => (\r\n          <SortableItem key={`item-${question.id}`} index={index} question={question} />\r\n        ))}\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <SystemNoti\r\n        open={noti}\r\n        text={noti ? noti.text : \"\"}\r\n        type={noti ? noti.type : \"\"}\r\n        close={() => setNoti(false)}\r\n      />\r\n      <Loading />\r\n      <SortableList\r\n        questions={questions}\r\n        onSortEnd={onSortEnd}\r\n        axis=\"xy\"\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ReoderEditor","import React, { Fragment } from 'react'\r\n\r\nimport AdaptiveTabs from '../../components/AdaptiveTabs'\r\n\r\nimport CommonSetting from './containers/Common'\r\nimport ConfigEditor from './containers/ConfigEditor'\r\nimport DeletePoll from './containers/DeletePoll';\r\nimport CititesEditor from './containers/CitiesEditor';\r\nimport ReoderEditor from './containers/ReoderEditor';\r\n\r\nconst PollSettings = ({ id, code }) => {\r\n  const data = [\r\n    {\r\n      label: 'Общие',\r\n      component: <CommonSetting id={id} />\r\n    },\r\n    {\r\n      label: 'Порядок отображения',\r\n      component: <ReoderEditor id={id} />\r\n    },\r\n    {\r\n      label: 'Конфиг',\r\n      component: <ConfigEditor id={id} />\r\n    },\r\n    {\r\n      label: 'Города',\r\n      component: <CititesEditor id={id} />\r\n    },\r\n    {\r\n      label: 'Удаление',\r\n      component: <DeletePoll id={id} code={code} />\r\n    }\r\n  ]\r\n  return (\r\n    <Fragment>\r\n      <AdaptiveTabs data={data} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PollSettings","import React, { Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container';\r\nimport SettingBar from '../components/SettingBar'\r\nimport PollSettings from '../modules/PollSettings'\r\n\r\nconst Settings = () => {\r\n  let { id, code } = useParams();\r\n\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title={`Настройки опроса ` + code} />\r\n      <div>\r\n        <Container maxWidth=\"xl\" style={{ padding: 0 }}>\r\n          <PollSettings id={id} code={code} />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Settings","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nconst PollFiles = ({ id }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tabs\r\n        orientation=\"vertical\"\r\n        variant=\"scrollable\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        className={classes.tabs}\r\n      >\r\n        <Tab label=\"Файлы\" {...a11yProps(0)} />\r\n      </Tabs>\r\n      <TabPanel value={value} index={0}>\r\n        Файлы опроса - {id}\r\n        <p>В РАЗРАБОТКЕ</p>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PollFiles","import React, { Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport SettingBar from '../components/SettingBar'\r\nimport PollFiles from '../modules/PollFiles'\r\n\r\nconst Attachment = () => {\r\n  let { id, code } = useParams();\r\n\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title={`Файлы ` + code} />\r\n      <div style={{ paddingTop: '10px' }}>\r\n        <Container maxWidth=\"xl\">\r\n          <PollFiles id={id} />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Attachment","import React, { Fragment } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst PollWiki = () => {\r\n  return (\r\n    <Fragment>\r\n      <Grid container item>\r\n        WIKI\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PollWiki","import React, { Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport SettingBar from '../components/SettingBar'\r\nimport PollWiki from '../modules/PollWiki'\r\n\r\nconst Wiki = () => {\r\n  let { id, code } = useParams();\r\n\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title={`Wiki ` + code} />\r\n      <Container maxWidth=\"lg\">\r\n        <PollWiki />\r\n      </Container>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Wiki","import { gql } from '@apollo/client'\r\n\r\nexport const GET_CITITES_WITH_CATEGORIES = gql`\r\nquery {\r\n  cities{\r\n    id\r\n    title\r\n    population\r\n    category {\r\n      id\r\n      title\r\n    }\r\n  }\r\n  cityCategories{\r\n    id\r\n    title\r\n  }\r\n}\r\n`","import { gql } from '@apollo/client'\r\n\r\nexport const CITY_SAVE_MUTATION = gql`\r\nmutation ($title: String!, $population: Int!, $category: String!) {\r\n  newCity(title: $title, population: $population, category: $category) {\r\n    id\r\n    title\r\n    category {\r\n      id\r\n      title\r\n    }\r\n    population\r\n  }\r\n}\r\n`\r\nexport const CITY_EDIT_SAVE = gql`\r\nmutation ($id: String!, $title: String!, $population: Int!, $category: String!) {\r\n  cityEdit(id: $id, title: $title, population: $population, category: $category) {\r\n    id\r\n    title\r\n    category {\r\n      id\r\n      title\r\n    }\r\n    population\r\n  }\r\n}\r\n`\r\nexport const DELETE_CITY = gql`\r\nmutation ($id: String!) {\r\n  deleteCity(id: $id) {\r\n    id\r\n    title\r\n    category {\r\n      id\r\n      title\r\n    }\r\n    population\r\n  }\r\n}\r\n`","import React, { Fragment, useState } from 'react'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport ConfirmDialog from '../../../../components/ConfirmDialog'\r\n\r\nimport LoadingState from '../../../../components/LoadingState'\r\nimport ErrorState from '../../../../components/ErrorState'\r\nimport SystemNoti from '../../../../components/SystemNoti'\r\nimport LoadingStatus from '../../../../components/LoadingStatus'\r\n\r\nimport { useQuery } from '@apollo/client'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { GET_CITITES_WITH_CATEGORIES } from './queries'\r\nimport { CITY_SAVE_MUTATION, CITY_EDIT_SAVE, DELETE_CITY } from './mutations'\r\n\r\nconst Cities = () => {\r\n  const [noti, setNoti] = useState(false)\r\n\r\n  const [delId, setDelId] = useState(false)\r\n  const [cityAdd, setCityAdd] = useState(false)\r\n  const {\r\n    data: citiesData,\r\n    loading: citiesLoading,\r\n    error: citiesError\r\n  } = useQuery(GET_CITITES_WITH_CATEGORIES)\r\n\r\n  const [saveCity, { loading: saveCityLoading }] = useMutation(CITY_SAVE_MUTATION, {\r\n    onError: (e) => {\r\n      setNoti({\r\n        type: 'error',\r\n        text: 'Сохранить новый город не удалось. Смотрите консоль.'\r\n      })\r\n      console.log(e);\r\n    },\r\n    update: (cache, { data: { newCity } }) => cache.writeQuery({\r\n      query: GET_CITITES_WITH_CATEGORIES,\r\n      data: {\r\n        cities: [\r\n          ...citiesData.cities,\r\n          newCity\r\n        ]\r\n      }\r\n    })\r\n  })\r\n\r\n  const [saveCityEdit, { loading: saveCityEditLoading }] = useMutation(CITY_EDIT_SAVE, {\r\n    onError: (e) => {\r\n      setNoti({\r\n        type: 'error',\r\n        text: 'Обновить информацию не удалось. Смотрите консоль.'\r\n      })\r\n      console.log(e);\r\n    },\r\n    update: (cache, { data: { cityEdit } }) => cache.writeQuery({\r\n      query: GET_CITITES_WITH_CATEGORIES,\r\n      data: {\r\n        cities: citiesData.cities.map(city => city.id === cityEdit.id ? cityEdit : city)\r\n      }\r\n    })\r\n  })\r\n\r\n  const [\r\n    deleteCity,\r\n    { loading: deleteCityLoading }\r\n  ] = useMutation(DELETE_CITY, {\r\n    onError: (e) => {\r\n      setNoti({\r\n        type: 'error',\r\n        text: 'Удалить город не удалось. Смотрите консоль.'\r\n      })\r\n      console.log(e);\r\n    },\r\n    update: (cache, { data: { deleteCity } }) => cache.writeQuery({\r\n      query: GET_CITITES_WITH_CATEGORIES,\r\n      data: {\r\n        cities: citiesData.cities.filter(city => city.id === deleteCity.id ? false : true)\r\n      }\r\n    })\r\n  })\r\n\r\n  const CityCard = ({ city, save, deleteCity }) => {\r\n    const [editting, setEditting] = useState(false)\r\n\r\n    const handleEdit = () => {\r\n      setEditting(true)\r\n    }\r\n\r\n    const handleSave = (data) => {\r\n      save({\r\n        ...data,\r\n        id: city.id\r\n      })\r\n    }\r\n\r\n    const handleCloseEdit = () => {\r\n      setEditting(false)\r\n    }\r\n\r\n    const handleDelete = () => {\r\n      deleteCity(city.id)\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        {!editting ?\r\n          <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n            <Paper className=\"city-card\">\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                {city.title}\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\" gutterBottom>\r\n                {city.category.title}\r\n              </Typography>\r\n              <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n                Население: {city.population}\r\n              </Typography>\r\n              <Grid container item justify=\"space-between\" className=\"card-service-buttons\">\r\n                <IconButton className=\"card-button\" aria-label=\"delete\" onClick={handleDelete}>\r\n                  <DeleteIcon fontSize=\"small\" />\r\n                </IconButton>\r\n                <IconButton className=\"card-button\" aria-label=\"delete\" onClick={handleEdit}>\r\n                  <EditIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n          : <CityAdd city={city} save={handleSave} close={handleCloseEdit} />\r\n        }\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  const CityAdd = ({ save, close, city }) => {\r\n    const [edit, setEdit] = useState(false)\r\n    const [title, setTitle] = useState(city ? city.title : '')\r\n    const [population, setPopulation] = useState(city ? city.population : '')\r\n    const [category, setCategory] = useState(city ? city.category.id : '')\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault()\r\n      const newCity = {\r\n        title,\r\n        population: +population,\r\n        category\r\n      }\r\n      console.log(newCity);\r\n      save(newCity)\r\n    }\r\n\r\n    const titleHandle = (e) => {\r\n      setEdit(true)\r\n      setTitle(e.currentTarget.value)\r\n    }\r\n    const popHandle = (e) => {\r\n      setEdit(true)\r\n      setPopulation(e.currentTarget.value)\r\n    }\r\n    const catHandle = (e) => {\r\n      setEdit(true)\r\n      setCategory(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n      <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n        <Paper className=\"add-city-card\">\r\n          <IconButton className=\"add-dialog-close\" aria-label=\"delete\" size=\"small\" onClick={close}>\r\n            <CloseIcon fontSize=\"inherit\" />\r\n          </IconButton>\r\n          <form onSubmit={handleSubmit}>\r\n            <TextField\r\n              className=\"add-city-title\"\r\n              required\r\n              defaultValue={city ? city.title : ''}\r\n              helperText=\"Название н.п.\"\r\n              onChange={titleHandle}\r\n            />\r\n            <TextField\r\n              className=\"add-city-population\"\r\n              type=\"number\"\r\n              required\r\n              defaultValue={city ? city.population : ''}\r\n              onChange={popHandle}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              helperText=\"Численность, чел.\"\r\n            />\r\n            <TextField\r\n              select\r\n              required\r\n              onChange={catHandle}\r\n              defaultValue={city ? city.category.id : ''}\r\n              SelectProps={{\r\n                native: true,\r\n              }}\r\n              helperText=\"Категория н.п.\"\r\n            >\r\n              <option key={0} disabled selected value=\"\"></option>\r\n              {citiesData.cityCategories.map((option) => (\r\n                <option key={option.id} value={option.id}>\r\n                  {option.title}\r\n                </option>\r\n              ))}\r\n            </TextField>\r\n            <Button\r\n              className=\"city-dialog-save\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              startIcon={<SaveIcon />}\r\n              type=\"submit\"\r\n              disabled={!edit}\r\n            >\r\n              Save\r\n          </Button>\r\n          </form>\r\n        </Paper>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  const handleAdd = () => {\r\n    setCityAdd(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setCityAdd(false)\r\n  }\r\n\r\n  async function handleSaveNew(newData) {\r\n    await saveCity({\r\n      variables: { ...newData }\r\n    })\r\n    setCityAdd(false)\r\n  }\r\n\r\n  async function handleSaveEdit(cityData) {\r\n    await saveCityEdit({\r\n      variables: { ...cityData }\r\n    })\r\n  }\r\n\r\n  async function deleteCityCompletely(id) {\r\n    await deleteCity({\r\n      variables: { id }\r\n    })\r\n  }\r\n\r\n  const handleCityDelete = (id) => {\r\n    setDelId(id)\r\n  }\r\n\r\n  const handleDelConfirm = () => {\r\n    deleteCityCompletely(delId)\r\n    setDelId(false)\r\n  }\r\n\r\n  const handleDelDialogClose = () => {\r\n    setDelId(false)\r\n  }\r\n\r\n  if (citiesLoading) return (\r\n    <LoadingState />\r\n  )\r\n\r\n  if (citiesError) {\r\n    console.log(JSON.stringify(citiesError));\r\n    return (\r\n      <ErrorState\r\n        title=\"Что-то пошло не так\"\r\n        description=\"Не удалось загрузить критические данные. Смотрите консоль\"\r\n      />\r\n    )\r\n  }\r\n\r\n  const Loading = () => {\r\n    if (saveCityLoading) return <LoadingStatus />\r\n    if (saveCityEditLoading) return <LoadingStatus />\r\n    if (deleteCityLoading) return <LoadingStatus />\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <SystemNoti\r\n        open={noti}\r\n        text={noti ? noti.text : \"\"}\r\n        type={noti ? noti.type : \"\"}\r\n        close={() => setNoti(false)}\r\n      />\r\n      <Loading />\r\n\r\n      <div className=\"cities-service-zone\">\r\n        <Typography className=\"header\">Города проведения опросов</Typography>\r\n        <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={handleAdd}>\r\n          Добавить\r\n        </Button>\r\n      </div>\r\n      <ConfirmDialog\r\n        open={delId}\r\n        confirm={handleDelConfirm}\r\n        close={handleDelDialogClose}\r\n        data={\r\n          {\r\n            title: 'Удалить населенный пункт?',\r\n            text: 'Внимание! Результаты опросов учитывают н.п. в которых они проводились, удаление приведет к потере части статистики и некорректности ее отображения.'\r\n          }\r\n        }\r\n      />\r\n      <Grid container spacing={3} xs={12}>\r\n        {cityAdd &&\r\n          <CityAdd save={handleSaveNew} close={handleClose} />\r\n        }\r\n        {citiesData.cities.map((city, index) => (\r\n          <CityCard city={city} save={handleSaveEdit} deleteCity={handleCityDelete} />\r\n        ))}\r\n      </Grid>\r\n      <p></p>\r\n      <span>Статус</span>\r\n      <Divider />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Cities","import React, { Fragment } from 'react'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Sample = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"sample-service-zone\">\r\n        <Typography className=\"header\">Конструктор выборки</Typography>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Sample","import React from 'react'\r\n\r\nimport AdaptiveTabs from '../../components/AdaptiveTabs'\r\n\r\nimport Cities from './containers/Cities'\r\nimport Sample from './containers/Sample'\r\n\r\nconst PollAppSettings = () => {\r\n  const data = [\r\n    {\r\n      label: 'Города',\r\n      component: <Cities />\r\n    },\r\n    {\r\n      label: 'Выборка',\r\n      component: <Sample />\r\n    },\r\n    {\r\n      label: 'Пол',\r\n      component: 'ПОЛ'\r\n    },\r\n    {\r\n      label: 'Возраст',\r\n      component: 'Возраст'\r\n    },\r\n    {\r\n      label: 'Статус',\r\n      component: 'Статус'\r\n    },\r\n    {\r\n      label: 'ТНП',\r\n      component: 'ТНП'\r\n    }\r\n  ]\r\n  return (\r\n    <AdaptiveTabs data={data} />\r\n  )\r\n}\r\n\r\nexport default PollAppSettings","import React, { Fragment } from 'react'\r\nimport Container from '@material-ui/core/Container';\r\nimport SettingBar from '../components/SettingBar'\r\nimport PollAppSettings from '../modules/PollAppSettings'\r\n\r\nconst PollAppSettingsPage = () => {\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title={`Настройки подсистемы`} />\r\n      <div>\r\n        <Container maxWidth=\"xl\" style={{ padding: 0 }}>\r\n          <PollAppSettings />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PollAppSettingsPage","import React, { Fragment, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nconst UserAddDialog = ({ open, close, saveNewUser, selects }) => {\r\n  const [userData, setUserData] = useState()\r\n\r\n  const save = (e) => {\r\n    e.preventDefault()\r\n    saveNewUser(userData)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog open={open} onClose={close} aria-labelledby=\"form-dialog-title\">\r\n        <form onSubmit={save}>\r\n          <DialogTitle>Добавление пользователя</DialogTitle>\r\n          <DialogContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth=\"true\"\r\n                  label=\"Пользователь\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setUserData(\r\n                    {\r\n                      ...userData,\r\n                      username: e.currentTarget.value\r\n                    }\r\n                  )}\r\n                  helperText=\"Используйте формат: Иванов И.И.\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth=\"true\"\r\n                  label=\"Логин\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setUserData(\r\n                    {\r\n                      ...userData,\r\n                      login: e.currentTarget.value\r\n                    }\r\n                  )}\r\n                  helperText=\"Используйте формат: IvanovII\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth=\"true\"\r\n                  label=\"Пароль\"\r\n                  type=\"password\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setUserData(\r\n                    {\r\n                      ...userData,\r\n                      password: e.currentTarget.value\r\n                    }\r\n                  )}\r\n                  helperText=\"Не менее восьми символов\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth=\"true\"\r\n                  label=\"Пароль\"\r\n                  type=\"password\"\r\n                  variant=\"outlined\"\r\n                  helperText=\"Повторите пароль\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl required variant=\"outlined\" fullWidth=\"true\">\r\n                  <InputLabel htmlFor=\"outlined-age-native-simple\">Статус</InputLabel>\r\n                  <Select\r\n                    required\r\n                    native\r\n                    label=\"Статус\"\r\n                    onChange={(e) => setUserData(\r\n                      {\r\n                        ...userData,\r\n                        status: e.currentTarget.value\r\n                      }\r\n                    )}\r\n                    inputProps={{\r\n                      name: 'age',\r\n                      id: 'outlined-age-native-simple',\r\n                    }}\r\n                  >\r\n                    <option aria-label=\"None\" selected disabled=\"true\" value=\"\" />\r\n                    {selects.userStatus.map(obj => <option value={obj.id}>{obj.title}</option>)}\r\n                  </Select>\r\n                  <FormHelperText>Укажите социальный статус</FormHelperText>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl required variant=\"outlined\" fullWidth=\"true\">\r\n                  <InputLabel htmlFor=\"outlined-age-native-simple\">Права</InputLabel>\r\n                  <Select\r\n                    native\r\n                    label=\"Права\"\r\n                    onChange={(e) => setUserData(\r\n                      {\r\n                        ...userData,\r\n                        rights: e.currentTarget.value\r\n                      }\r\n                    )}\r\n                    inputProps={{\r\n                      name: 'age',\r\n                      id: 'outlined-age-native-simple',\r\n                    }}\r\n                  >\r\n                    <option aria-label=\"None\" selected disabled=\"true\" value=\"\" />\r\n                    {selects.userRights.map(obj => <option value={obj.id}>{obj.title}</option>)}\r\n                  </Select>\r\n                  <FormHelperText>Укажите права поьзователя</FormHelperText>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <p></p>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" onClick={close}>\r\n              Отмена\r\n          </Button>\r\n            <Button variant=\"contained\" type=\"submit\" color=\"primary\">\r\n              Добавить\r\n          </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default UserAddDialog","import React, { Fragment, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nconst UserUpdateDialog = ({ data, selects, open, close, updateUser }) => {\r\n  const [userData, setUserData] = useState(false)\r\n\r\n  const save = (e) => {\r\n    e.preventDefault()\r\n    updateUser({\r\n      id: data.id,\r\n      data: userData\r\n    })\r\n    setUserData(false)\r\n    close()\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog open={open} onClose={close} aria-labelledby=\"form-dialog-title\">\r\n        <form onSubmit={save}>\r\n          <DialogTitle>Обновить данные</DialogTitle>\r\n          <DialogContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth=\"true\"\r\n                  label=\"Пользователь\"\r\n                  variant=\"outlined\"\r\n                  defaultValue={data.username}\r\n                  onChange={(e) => setUserData(\r\n                    {\r\n                      ...userData,\r\n                      username: e.currentTarget.value\r\n                    }\r\n                  )}\r\n                  helperText=\"Используйте формат: Иванов И.И.\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth=\"true\"\r\n                  label=\"Логин\"\r\n                  variant=\"outlined\"\r\n                  defaultValue={data.login}\r\n                  onChange={(e) => setUserData(\r\n                    {\r\n                      ...userData,\r\n                      login: e.currentTarget.value\r\n                    }\r\n                  )}\r\n                  helperText=\"Используйте формат: IvanovII\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl required variant=\"outlined\" fullWidth=\"true\">\r\n                  <InputLabel htmlFor=\"outlined-age-native-simple\">Статус</InputLabel>\r\n                  <Select\r\n                    required\r\n                    native\r\n                    defaultValue={data.status ? data.status.id : ''}\r\n                    label=\"Статус\"\r\n                    onChange={(e) => setUserData(\r\n                      {\r\n                        ...userData,\r\n                        status: e.currentTarget.value\r\n                      }\r\n                    )}\r\n                    inputProps={{\r\n                      name: 'age',\r\n                      id: 'outlined-age-native-simple',\r\n                    }}\r\n                  >\r\n                    <option aria-label=\"None\" selected disabled=\"true\" value=\"\" />\r\n                    {selects.userStatus.map(obj => <option value={obj.id}>{obj.title}</option>)}\r\n                  </Select>\r\n                  <FormHelperText>Укажите социальный статус</FormHelperText>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl required variant=\"outlined\" fullWidth=\"true\">\r\n                  <InputLabel htmlFor=\"outlined-age-native-simple\">Права</InputLabel>\r\n                  <Select\r\n                    native\r\n                    defaultValue={data.rights ? data.rights.id : ''}\r\n                    label=\"Права\"\r\n                    onChange={(e) => setUserData(\r\n                      {\r\n                        ...userData,\r\n                        rights: e.currentTarget.value\r\n                      }\r\n                    )}\r\n                    inputProps={{\r\n                      name: 'age',\r\n                      id: 'outlined-age-native-simple',\r\n                    }}\r\n                  >\r\n                    <option aria-label=\"None\" selected disabled=\"true\" value=\"\" />\r\n                    {selects.userRights.map(obj => <option value={obj.id}>{obj.title}</option>)}\r\n                  </Select>\r\n                  <FormHelperText>Укажите права поьзователя</FormHelperText>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <p></p>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" onClick={close}>\r\n              Отмена\r\n          </Button>\r\n            <Button variant=\"contained\" type=\"submit\" color=\"primary\">\r\n              Обновить\r\n          </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default UserUpdateDialog","import React, { Fragment, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst PassResetDialog = ({ data, open, close, passReset }) => {\r\n  const [userData, setUserData] = useState(false)\r\n\r\n  const save = (e) => {\r\n    e.preventDefault()\r\n    passReset({\r\n      id: data.id,\r\n      password: userData.password\r\n    })\r\n    setUserData(false)\r\n    close()\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog open={open} onClose={close} aria-labelledby=\"form-dialog-title\">\r\n        <form onSubmit={save}>\r\n          <DialogTitle>Установка пароля</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Установите новый пароль пользователя - {data.username}\r\n            </DialogContentText>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth=\"true\"\r\n                  label=\"Пароль\"\r\n                  type=\"password\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setUserData(\r\n                    {\r\n                      ...userData,\r\n                      password: e.currentTarget.value\r\n                    }\r\n                  )}\r\n                  helperText=\"Не менее восьми символов\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth=\"true\"\r\n                  label=\"Пароль\"\r\n                  type=\"password\"\r\n                  variant=\"outlined\"\r\n                  helperText=\"Повторите пароль\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <p></p>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" onClick={close}>\r\n              Отмена\r\n          </Button>\r\n            <Button variant=\"contained\" type=\"submit\" color=\"primary\">\r\n              Сохранить\r\n          </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default PassResetDialog","import React, { Fragment, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Button from '@material-ui/core/Button';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\n\r\nimport ConfirmDialog from '../../../../components/ConfirmDialog';\r\nimport UserAddDialog from '../UserAddDialog'\r\nimport UserUpdateDialog from '../UserUpdateDialog'\r\nimport PassResetDialog from '../PassResetDialog'\r\n\r\n// const users = [\r\n//   {\r\n//     id: '1111',\r\n//     username: 'Петров И.В.',\r\n//     login: 'PtrovIV',\r\n//     status: 'военнослужащий',\r\n//     rights: 'Пользователь'\r\n//   },\r\n//   {\r\n//     id: '22222',\r\n//     username: 'Иванов С.В.',\r\n//     login: 'IvanovSV',\r\n//     status: 'военнослужащий',\r\n//     rights: 'Пользователь'\r\n//   },\r\n//   {\r\n//     id: '33333',\r\n//     username: 'Сидорова С.В.',\r\n//     login: 'SidorovaSV',\r\n//     status: 'гражданский служащий',\r\n//     rights: 'Админ'\r\n//   },\r\n// ]\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'username', numeric: false, disablePadding: true, label: 'Пользователь', sort: true },\r\n  { id: 'login', numeric: false, disablePadding: false, label: 'Логин', sort: true },\r\n  { id: 'status', numeric: false, disablePadding: false, label: 'Статус', sort: true },\r\n  { id: 'rights', numeric: false, disablePadding: false, label: 'Права', sort: true },\r\n  { id: '', numeric: true, disablePadding: true, label: 'Action', sort: false }\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align='center'\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n          >{headCell.sort ? (\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n              hideSortIcon={headCell.sort ? false : true}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n\r\n          ) : (<span>{headCell.label}</span>)}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, deleteDelete, setUserAddOpen } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} выбрано\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n            Пользователи\r\n          </Typography>\r\n        )\r\n      }\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Удалить\">\r\n          <IconButton aria-label=\"delete\" onClick={deleteDelete}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Добавить пользователя\">\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => setUserAddOpen(true)}>\r\n              Добавить\r\n            </Button>\r\n          </Tooltip>\r\n        )\r\n      }\r\n    </Toolbar >\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst UsersTable = ({ users, addNewUser, deleteUsers, updateUser, resetPassword, selects }) => {\r\n  const classes = useStyles();\r\n\r\n  const [deleteDialog, setDeleteDialog] = useState(false)\r\n  const [userAddOpen, setUserAddOpen] = useState(false)\r\n  const [userUpdate, setUserUpdate] = useState(false)\r\n  const [passReset, setPassReset] = useState(false)\r\n\r\n  const [order, setOrder] = useState('asc');\r\n  const [orderBy, setOrderBy] = useState('calories');\r\n  const [selected, setSelected] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = users.map((n) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (_, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleRowEdit = (_, row) => {\r\n    setUserUpdate(row)\r\n  }\r\n\r\n  const handlePassReset = (_, row) => {\r\n    setPassReset(row)\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const handleDelConfirm = () => {\r\n    deleteUsers(selected)\r\n    setDeleteDialog(false)\r\n    setSelected([])\r\n  }\r\n\r\n  const saveNewUser = (data) => {\r\n    // TODO: \"Нужна заставка ожидания\"\r\n    addNewUser(data)\r\n    setUserAddOpen(false)\r\n  }\r\n\r\n  const hanleUserUpdate = ({ id, data }) => {\r\n    updateUser({\r\n      id,\r\n      data\r\n    })\r\n  }\r\n\r\n  const handlePasswordReset = ({ id, password }) => {\r\n    resetPassword({\r\n      id, password\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <UserAddDialog open={userAddOpen} selects={selects} close={() => setUserAddOpen(false)} saveNewUser={saveNewUser} />\r\n      <UserUpdateDialog data={userUpdate} selects={selects} open={userUpdate} close={() => setUserUpdate(false)} updateUser={hanleUserUpdate} />\r\n      <PassResetDialog data={passReset} open={passReset} close={() => setPassReset(false)} passReset={handlePasswordReset} />\r\n      <ConfirmDialog\r\n        open={deleteDialog}\r\n        confirm={handleDelConfirm}\r\n        close={() => setDeleteDialog(false)}\r\n        data={\r\n          {\r\n            title: 'Удалить пользователей(я)?',\r\n            text: 'Внимание! Это операция не может быть отменена. Часть данных приложения привязаны к учетной записи, будьте внимательны.'\r\n          }\r\n        }\r\n      />\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} deleteDelete={setDeleteDialog} setUserAddOpen={setUserAddOpen} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"medium\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={users.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(users, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          onClick={(event) => handleClick(event, row.id)}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"center\" component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.username}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">{row.login}</TableCell>\r\n                      <TableCell align=\"center\">{row.status ? row.status.title : '-'}</TableCell>\r\n                      <TableCell align=\"center\">{row.rights ? row.rights.title : '-'}</TableCell>\r\n                      <TableCell align=\"center\" padding=\"none\">\r\n                        <Tooltip title=\"Обновить\">\r\n                          <IconButton\r\n                            onClick={(event) => handleRowEdit(event, row)}\r\n                          >\r\n                            <EditIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Сбросить пароль\">\r\n                          <IconButton\r\n                            onClick={(event) => handlePassReset(event, row)}\r\n                          >\r\n                            <LockOpenIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={users.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          labelRowsPerPage=\"Строк:\"\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default UsersTable","import { gql } from '@apollo/client'\r\n\r\nexport const GET_ALL_USERS = gql`\r\n  query {\r\n    users {\r\n      id\r\n      username\r\n      login\r\n      status {\r\n        id\r\n        title\r\n      }\r\n      rights {\r\n        id\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_AUTH_SELECTS = gql`\r\n  query {\r\n    userRights {\r\n      id\r\n      title\r\n    }\r\n    userStatus {\r\n      id\r\n      title\r\n    }\r\n  }\r\n`","import { gql } from '@apollo/client'\r\n\r\nexport const ADD_NEW_USER = gql`\r\n  mutation($user: UserDataCreate!) {\r\n    addNewUser(user: $user) {\r\n      id\r\n      username\r\n      login\r\n      status {\r\n        id\r\n        title\r\n      }\r\n      rights {\r\n        id\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_USER = gql`\r\n  mutation($id: String, $data: UserDataUpdate) {\r\n    updateUser(id: $id, data: $data) {\r\n      id\r\n      username\r\n      login\r\n      status {\r\n        id\r\n        title\r\n      }\r\n      rights {\r\n        id\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_USERS = gql`\r\n  mutation($users: [String]) {\r\n    deleteUsers(users: $users) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const RESET_PASSWORD = gql`\r\n  mutation($id: String, $password: String) {\r\n    resetPassword(id: $id, password: $password)\r\n  }\r\n`","import React, { Fragment, useState } from 'react'\r\n\r\nimport UsersTable from './components/UsersTable'\r\n\r\nimport LoadingState from '../../components/LoadingState'\r\nimport ErrorState from '../../components/ErrorState'\r\nimport SystemNoti from '../../components/SystemNoti'\r\nimport LoadingStatus from '../../components/LoadingStatus'\r\n\r\nimport { useQuery } from '@apollo/client'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { GET_ALL_USERS, GET_AUTH_SELECTS } from './queries'\r\nimport { ADD_NEW_USER, UPDATE_USER, DELETE_USERS, RESET_PASSWORD } from './mutations'\r\n\r\nconst Users = () => {\r\n  const [noti, setNoti] = useState(false)\r\n  const {\r\n    loading: dataLoading,\r\n    error: dataError,\r\n    data\r\n  } = useQuery(GET_ALL_USERS)\r\n  const {\r\n    loading: selectsLoading,\r\n    error: selectsError,\r\n    data: selects\r\n  } = useQuery(GET_AUTH_SELECTS)\r\n\r\n  const [deleteUsers, { loading: deleteLoading }] = useMutation(DELETE_USERS,\r\n    {\r\n      onError: (e) => {\r\n        setNoti({\r\n          type: 'error',\r\n          text: 'Удалить не удалось. Смотрите консоль.'\r\n        })\r\n        console.log(e);\r\n      },\r\n      update: (cache, { data: { deleteUsers } }) => cache.writeQuery({\r\n        query: GET_ALL_USERS,\r\n        data: {\r\n          users: data.users.filter(user => {\r\n            for (let i = 0; i < deleteUsers.length; i++) {\r\n              if (deleteUsers[i].id === user.id) return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      })\r\n    }\r\n  )\r\n  const [addUser, { loading: addLoading }] = useMutation(ADD_NEW_USER,\r\n    {\r\n      onError: (e) => {\r\n        setNoti({\r\n          type: 'error',\r\n          text: 'Добавить не удалось. Смотрите консоль.'\r\n        })\r\n        console.log(e);\r\n      },\r\n      update: (cache, { data: { addNewUser } }) => cache.writeQuery({\r\n        query: GET_ALL_USERS,\r\n        data: {\r\n          users: [\r\n            ...data.users,\r\n            addNewUser\r\n          ]\r\n        }\r\n      })\r\n    }\r\n  )\r\n\r\n  const [updateUser, { loading: updateLoading }] = useMutation(UPDATE_USER,\r\n    {\r\n      onError: (e) => {\r\n        setNoti({\r\n          type: 'error',\r\n          text: 'Обновить не удалось. Смотрите консоль.'\r\n        })\r\n        console.log(e);\r\n      },\r\n      update: (cache, { data: { updateUser } }) => cache.writeQuery({\r\n        query: GET_ALL_USERS,\r\n        data: {\r\n          users: data.users.map(user => user.id === updateUser.id ? updateUser : user)\r\n        }\r\n      })\r\n    }\r\n  )\r\n  const [resetPassword] = useMutation(RESET_PASSWORD)\r\n\r\n  if (dataLoading || selectsLoading) return (\r\n    <LoadingState />\r\n  )\r\n\r\n  if (dataError || selectsError) {\r\n    return (\r\n      <ErrorState\r\n        title=\"Что-то пошло не так\"\r\n        description=\"Не удалось загрузить критические данные. Смотрите консоль\"\r\n      />\r\n    )\r\n  }\r\n\r\n  const addNewUser = (data) => {\r\n    addUser({\r\n      variables: {\r\n        user: data\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleUsersDelete = (data) => {\r\n    deleteUsers({\r\n      variables: {\r\n        users: data\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleUserUpdate = ({ id, data }) => {\r\n    updateUser({\r\n      variables: {\r\n        id,\r\n        data\r\n      }\r\n    })\r\n  }\r\n\r\n  const resetPass = ({ id, password }) => {\r\n    resetPassword({\r\n      variables: {\r\n        id,\r\n        password\r\n      }\r\n    })\r\n  }\r\n\r\n  const Loading = () => {\r\n    if (deleteLoading) return <LoadingStatus />\r\n    if (addLoading) return <LoadingStatus />\r\n    if (updateLoading) return <LoadingStatus />\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <SystemNoti\r\n        open={noti}\r\n        text={noti ? noti.text : \"\"}\r\n        type={noti ? noti.type : \"\"}\r\n        close={() => setNoti(false)}\r\n      />\r\n      <Loading />\r\n\r\n      <UsersTable\r\n        users={data.users}\r\n        selects={selects}\r\n        addNewUser={addNewUser}\r\n        deleteUsers={handleUsersDelete}\r\n        updateUser={handleUserUpdate}\r\n        resetPassword={resetPass}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Users","import React, { Fragment } from 'react'\r\nimport Container from '@material-ui/core/Container';\r\nimport SettingBar from '../components/SettingBar'\r\nimport Users from '../modules/Users'\r\n\r\nconst UsersPage = () => {\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title={`Пользователи системы`} />\r\n      <div style={{ paddingTop: '10px' }}>\r\n        <Container maxWidth=\"lg\">\r\n          <Users />\r\n        </Container>\r\n      </div>\r\n    </Fragment >\r\n  )\r\n}\r\n\r\nexport default UsersPage","import React, { Fragment } from 'react';\r\nimport ErrorState from '../components/ErrorState'\r\n\r\n\r\n// import { ReactComponent as ErrorIllustration } from \"../../illustrations/error.svg\";\r\n\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <Fragment>\r\n      <ErrorState\r\n        title=\"404 Страница не найдена\"\r\n        description=\"Вы заблудились. Проверьте адрес\"\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default NotFoundPage;","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\n\r\nimport {\r\n  HomePage,\r\n  DrivePage,\r\n  ResultsPage,\r\n  AnalyzePage,\r\n  SettingsPage,\r\n  TesterPage,\r\n  AttachmentPage,\r\n  WikiPage,\r\n  PollAppSettingsPage,\r\n  UsersPage,\r\n  NotFoundPage\r\n} from '../../pages'\r\n\r\nconst Router = () => {\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path={\"/\"} exact component={HomePage} />\r\n        <Route path={\"/settings/users\"} exact component={UsersPage} />\r\n        <Route path={\"/results/:id/:code\"} component={ResultsPage} />\r\n        <Route path={\"/poll-settings/:id/:code\"} component={SettingsPage} />\r\n        <Route path={\"/drive/:id/:code\"} component={DrivePage} />\r\n        <Route path={\"/analyze\"} component={AnalyzePage} />\r\n        <Route path={\"/attachment/:id/:code\"} component={AttachmentPage} />\r\n        <Route path={\"/poll-wiki/:id/:code\"} component={WikiPage} />\r\n        <Route path={\"/poll-app-settings\"} component={PollAppSettingsPage} />\r\n        <Route path={\"/tester\"} component={TesterPage} />\r\n        <Route component={NotFoundPage} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default Router","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      {'РИАЦi51' + ' '}\r\n      {new Date().getFullYear()}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  forget: {\r\n    cursor: 'pointer'\r\n  }\r\n}));\r\n\r\nconst SignIn = ({ onLogin, userError, passwordError }) => {\r\n  const [login, setlogin] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const classes = useStyles();\r\n\r\n  const handleName = (e) => {\r\n    setlogin(e.target.value)\r\n  }\r\n\r\n  const handlePassword = (e) => {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (login || password)\r\n      onLogin({\r\n        login,\r\n        password\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Войдите в систему\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            error={!!userError}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"login\"\r\n            label=\"Логин\"\r\n            name=\"login\"\r\n            autoComplete=\"login\"\r\n            autoFocus\r\n            onChange={handleName}\r\n            helperText={userError}\r\n\r\n          />\r\n          <TextField\r\n            error={passwordError}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Пароль\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handlePassword}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Запомнить меня\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleSubmit}\r\n          >\r\n            Войти\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box >\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\nexport default SignIn","import { gql } from '@apollo/client';\r\n\r\nexport const SIGNIN_MUTATION = gql`\r\n  mutation signin(\r\n    $login: String!,\r\n    $password: String!\r\n  ) {\r\n    signin(\r\n      login: $login,\r\n      password: $password\r\n    ) {\r\n      user {\r\n        id\r\n        login\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SIGNUP_MUTATION = gql`\r\n  mutation signup(\r\n    $login: String!,\r\n    $password: String!\r\n  ) {\r\n    signup(\r\n      login: $login,\r\n      password: $password\r\n    ) {\r\n      user {\r\n        id\r\n        login\r\n      }\r\n    }\r\n  }\r\n\r\n`","import React, { Fragment, useState } from 'react';\r\n\r\nimport './App.scss';\r\nimport Router from '../Router'\r\n\r\nimport SignInForm from '../../components/SignInForm'\r\n\r\nimport ErrorState from '../../components/ErrorState'\r\nimport LoadingSate from '../../components/LoadingState'\r\nimport LoadingStatus from '../../components/LoadingStatus'\r\n\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { CURRENT_USER_QUERY } from './queries';\r\nimport { SIGNIN_MUTATION } from './mutations';\r\n\r\n\r\nconst App = () => {\r\n  const { loading, error, data } = useQuery(CURRENT_USER_QUERY);\r\n  const [passwordError, setPasswordError] = useState(null)\r\n  const [userError, setUserError] = useState(null)\r\n\r\n  const [signin, { loading: signinLoading }] = useMutation(\r\n    SIGNIN_MUTATION,\r\n    {\r\n      onError: (e) => {\r\n        setUserError('Неправильный логин или пароль')\r\n        setPasswordError(true)\r\n      },\r\n      update: (cache, { data: { signin } }) => cache.writeQuery({\r\n        query: CURRENT_USER_QUERY,\r\n        data: { currentUser: signin.user },\r\n      }),\r\n    }\r\n  )\r\n\r\n  if (loading) return <LoadingSate />\r\n\r\n  if (error) {\r\n    console.log(JSON.stringify(error));\r\n    return (\r\n      <ErrorState\r\n        title=\"Что-пошло не так\"\r\n        description=\"Приложение не хочет стартовать, смотрите консоль!\"\r\n      />\r\n    )\r\n  };\r\n\r\n  const handleLogin = (data) => {\r\n    signin({ variables: data })\r\n  }\r\n\r\n  const Loading = () => {\r\n    if (signinLoading) return <LoadingStatus />\r\n    return null\r\n  }\r\n\r\n\r\n  if (!!data.currentUser) {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"App\">\r\n          <Loading />\r\n          <Router />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n  return <div>\r\n    <Loading />\r\n    <SignInForm onLogin={handleLogin} userError={userError} passwordError={passwordError} />\r\n  </div>\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport { mainUrl } from './mainconfig'\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { cache } from './cache'\r\n\r\nimport App from './containers/App/App';\r\n\r\n// const cache = new InMemoryCache()\r\n\r\nconst client = new ApolloClient({\r\n  uri: mainUrl + '/graphql',\r\n  cache,\r\n  credentials: 'include',\r\n  connectToDevTools: true\r\n})\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}