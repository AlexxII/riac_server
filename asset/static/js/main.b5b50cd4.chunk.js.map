{"version":3,"sources":["serviceWorker.js","cache.js","components/ServiceMenu/index.js","containers/App/queries.js","components/HomeBar/queries.js","components/HomeBar/mutations.js","components/HomeBar/index.js","components/ActiveAvatar/index.js","components/PassiveAvatar/index.js","lib/selects.js","components/PollCard/index.js","containers/ListOfPolls/index.js","lib/xmlparser.js","components/XmlInput/index.js","containers/AddPollDialog/index.js","containers/AddPollWrap/queries.js","components/AddFab/index.js","containers/AddPollWrap/index.js","containers/HomeWrap/queries.js","containers/HomeWrap/index.js","pages/HomePage.js","components/SettingBar/index.js","mainconfig.js","modules/PollDrive/components/FreeAnswer/index.js","modules/PollDrive/components/Answer/index.js","modules/PollDrive/components/MultipleAnswers/index.js","modules/PollDrive/components/Question/index.js","modules/PollDrive/lib/keycodes.js","modules/PollDrive/lib/defineSelectedAnswer.js","modules/PollDrive/lib/questionFormation.js","modules/PollDrive/lib/beep.js","modules/PollDrive/components/FinishDialog/index.js","modules/PollDrive/index.js","components/CityDialog/index.js","containers/DriveWrap/queries.js","containers/DriveWrap/mutaions.js","containers/DriveWrap/lib/utils.js","containers/DriveWrap/index.js","pages/DrivePage.js","modules/PollResults/Generation/queries.js","modules/PollResults/Generation/index.js","modules/PollResults/index.js","pages/ResultsPage.js","modules/DataAnalyzer/lib/xmlparser.js","modules/DataAnalyzer/components/ParchaXmlAnalyzer/index.js","modules/DataAnalyzer/components/WarShow/index.js","modules/DataAnalyzer/lib/txtparser.js","modules/DataAnalyzer/components/WordAnalyzer/index.js","modules/DataAnalyzer/index.js","pages/AnalyzePage.js","containers/Test/index.js","pages/TesterPage.js","modules/PollSettings/components/Common/queries.js","modules/PollSettings/components/Common/index.js","modules/PollSettings/components/ConfigEditor/queries.js","modules/PollSettings/components/ConfigEditor/index.js","modules/PollSettings/components/QuestionCard/index.js","modules/PollSettings/components/ReoderEditor/queries.js","modules/PollSettings/components/ReoderEditor/index.js","modules/PollSettings/components/DeletePoll/mutations.js","modules/PollSettings/components/DeletePoll/index.js","modules/PollSettings/index.js","pages/SettingsPage.js","modules/PollFiles/index.js","pages/AttachmentPage.js","modules/PollWiki/index.js","pages/WikiPage.js","modules/PollAppSettings/components/Cities/quesries.js","modules/PollAppSettings/components/Cities/index.js","modules/PollAppSettings/index.js","pages/PollAppSettingsPage.js","containers/Router/index.js","components/SignInForm/index.js","containers/SignInWrap/mutations.js","containers/SignInWrap/index.js","containers/App/App.js","index.js"],"names":["Boolean","window","location","hostname","match","cache","InMemoryCache","typePolicies","Query","fields","activeUser","read","userVar","makeVar","useStyles","makeStyles","list","width","fullList","ServiceMenu","open","close","classes","Drawer","anchor","onClose","className","clsx","role","onClick","onKeyDown","List","ListItem","button","key","ListItemIcon","ListItemText","primary","Divider","to","CURRENT_USER_QUERY","gql","GET_USER_INFO","LOGOUT_MUTATION","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","inputRoot","color","sectionDesktop","sectionMobile","link","textDecoration","HomeBar","React","useState","anchorEl","setAnchorEl","appAnchorEl","setAppAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","menuOpen","setMenuOpen","useMutation","update","writeQuery","query","data","currentUser","logout","useQuery","onCompleted","console","log","user","loading","error","isMenuOpen","isMobileMenuOpen","isAppMenuOpen","handleProfileMenuOpen","event","currentTarget","handleAppsMenuOpen","handleMobileMenuClose","handleMenuClose","handleAppMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","MenuItem","renderAppsMenu","renderMobileMenu","IconButton","Badge","badgeContent","aria-label","aria-controls","aria-haspopup","AppBar","position","Toolbar","edge","e","Typography","variant","noWrap","Tooltip","userName","StyledBadge","withStyles","badge","backgroundColor","boxShadow","palette","background","paper","top","left","height","borderRadius","animation","border","content","transform","opacity","root","avatar","props","ActiveAvatar","overlap","liter","PassiveAvatar","pollTypes","pollWays","maxWidth","margin","header","padding","flex","media","expand","marginLeft","transition","transitions","create","duration","shortest","expandOpen","PollCard","Avatar","active","type","Results","code","Drive","Attachment","Settings","Wiki","Card","CardHeader","action","subheader","startDate","endDate","CardContent","Grid","container","item","xs","sm","gutterBottom","way","sample","CardActions","disableSpacing","justify","ListOfPolls","polls","map","poll","i","xmlparser","xmlString","xml","parser","DOMParser","parsererrorNS","parseFromString","getElementsByTagName","namespaceURI","doc","getElementsByTagNameNS","length","testXml","element","getAttribute","start","end","structure","backdrop","zIndex","drawer","XmlImport","field","errorMessage","setFieldValue","touched","name","onBlur","value","onChange","processing","setProcessing","undefined","count","fileUpload","useRef","Fragment","Backdrop","CircularProgress","style","preventDefault","reader","FileReader","file","target","files","onloadend","xmlText","result","regEx","replace","readAsText","Button","startIcon","current","click","TextInputComponent","label","TextField","fullWidth","helperText","InputLabelProps","shrink","SelectInputComponent","array","select","option","AddPollDialog","closeHndl","saveHndl","SUPPORTED_FORMATS","validationSchema","yup","shape","required","startdate","enddate","matches","min","ensure","xmlfile","test","size","includes","Dialog","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","aria-describedby","DialogTitle","DialogContent","initialValues","comment","validateOnBlur","onSubmit","values","setSubmitting","errors","isSubmitting","dirty","handleSubmit","handleReset","handleChange","handleBlur","component","XmlInput","DialogActions","disabled","addNewPoll","small","bottom","right","AddFub","Fab","AddPollWrap","refetch","openDialog","setOpenDialog","addPoll","xmlParse","newPoll","questions","logic","topic","Promise","resolve","reject","questionsLen","questionData","limit","order","answers","questionAnswers","answersLen","answerData","padStart","defaultLogic","logicLen","logicData","restrict","topics","topicsLen","topicData","basicLogicFormation","basicLogic","reduce","acum","val","exclude","unique","extLogic","filter","obj","difficult","freeAnswers","AddFab","xmlFile","then","basicData","pollInfo","variables","shortTitle","poolOfQuestions","pollsQuery","HomeWrap","client","Container","HomePage","arrow","SettingBar","mainUrl","FreeAnswer","answer","focusHandler","blurHandler","textInput","useEffect","focus","freeAnswerText","showFreeAnswer","ref","data-code","data-keycode","keyCode","placeholder","onKeyUp","replaceAll","blur","onFocus","Answer","clickHandler","settings","answerRef","answerCls","answerTitle","selected","push","join","showIndex","codesShow","freeAnswer","fontSize","excludeM","marginTop","errorText","Tags","multipleHandler","setAnswers","codes","setCodes","state","text","setError","defVal","codesOfAnswers","Autocomplete","multiple","options","reason","getOptionLabel","getOptionDisabled","renderOption","renderTags","getTagProps","index","Chip","renderInput","params","Question","question","mega","serviceBtns","resetBtn","confirmBtns","castCodes","97","98","99","100","101","102","103","104","105","answersCodes","keycodes","cast","defineSelectedAnswer","checkAnswerSelected","do","trueCode","checkServiceBtn","checkResetBtn","checkConfirmBtn","questionFormation","setResults","keyCodesPool","codesPool","visibleAnswers","invisible","criticalExclude","uniqueIn","selectedIn","uniqueSelected","newAnswers","suffix","pool","answerCode","qSuffix","megaMltp","prevState","next","mAnswers","beep","config","audioCtx","AudioContext","webkitAudioContext","Object","assign","volume","frequency","oscillator","createOscillator","gainNode","createGain","connect","destination","gain","setTimeout","stop","FinishDialog","handleClose","finishAll","confirm","DialogContentText","autoFocus","PollDrive","logics","setCurrentQuestion","saveAndGoBack","saveWorksheet","questionsLimit","setQuestion","userSettings","setUserSettings","direction","setDirection","setCount","results","finish","setFinish","finishDialog","setFinishDialog","inlineMessage","setInlineMessage","keyUpHandler","nodeName","nextStep","mainLogic","confirmResults","resetAnswers","finishRespondent","goToNext","goToPrevious","document","addEventListener","removeEventListener","newQuestion","checkRespondentFinish","newResults","resPool","eCode","savedCodes","excludePool","selectedAnswer","el","nonCriticalExclude","newResultState","InlineInformer","alignItems","md","FormControlLabel","control","Checkbox","defaultChecked","labelPlacement","Hidden","only","mdUp","dataset","selectedCode","selectedKeyCode","keycode","resultsPool","clearPool","CityDialog","save","cities","setState","Select","native","selectedIndex","innerHTML","city","pollDataQuery","citiesQuery","saveNewResult","parseIni","area","regex","section","param","lines","split","forEach","line","parseParams","property","concatLogic","temp","trimData","srange","output","exec","range","concat","rangeToArray","normalizeLogic","normalizedLogic","critical","invisiblePool","DriveWrap","history","useHistory","setPoll","backOpen","setBackOpen","poolOfCities","setPoolOfCities","openCityDialog","setOpenCityDialog","setPollLogic","currentCity","setCurrentCity","currentQuestion","handleConfigFile","path","pollLoading","filePath","fetch","r","normLogic","saveResult","visibleQuestions","lAnswers","cData","cError","citiesLoading","prepareResultData","DrivePage","useParams","GET_POLL_DATA","Generation","setQuestions","setLogic","questionsCount","answersCount","modQuestions","worksheetsCount","TabPanel","children","other","hidden","Box","p","a11yProps","tabs","borderRight","divider","PollResults","setValue","Tabs","orientation","newValue","Tab","paddingTop","lResults","outData","resultData","unit","date","lan","lon","lQuestions","answersPool","ParchaXmlAnalyzer","parchaData","setParchaData","UnitInfo","toString","onInput","WarShow","person","placesOfWork","places","workD","workDays","d","Paper","slice","substring","processLists","war","pens","resulNeedData","doesNotMatch","warMatchPool","pensData","empty","need","warPersonName","warPersonBorn","warPersonSurname","toLowerCase","comp","j","pensNeedData","resultNotNeedData","warPersonNum","warPersonRank","warPersonDismissal","persD","compareLists","aLength","finalResult","personData","splited","glueNormData","getDateFromString","dString","dd","month","year","placesRaw","dates","work","dataReg","k","WordAnalyzer","setPensData","warData","setWarData","setMessage","ready","setReady","processedData","setProcessedData","finalData","setFinalData","persons","rr","warior","full","pensParser","pData","itrestPerson","dateReg","dateOfDismissal","Date","parse","dateMatch","maxNeedDate","parseInt","workDate","workArray","dateInWork","Alert","severity","allProps","overflow","PollSettings","Analyze","DataAnalyzer","Test","observer","observable","secondsPassed","timerData","handle","setInterval","clearTimeout","Border","Tester","ServiceIcons","edit","AnswerCard","QuestionCard","CommonSetting","m","logicQuery","saveConfigChanges","ConfigEditor","setConfig","setFilePath","textRef","pollLogic","saveConfig","defaultValue","handleLimitInput","setVal","lg","xl","elevation","cursor","currentValue","pollQuery","saveNewLimit","saveNewOrder","ReoderEditor","setPrevOrder","saveLimit","saveOrder","inputData","SortableItem","SortableElement","SortableList","SortableContainer","onSortEnd","oldIndex","newIndex","newArray","arrayMove","deltaArray","newOrder","axis","deletePoll","DeletePoll","setOpen","incorrect","setIncorrect","delPoll","toUpperCase","refetchQueries","handlePollDel","Common","PollFiles","PollWiki","GET_ALL_CITIES","Cities","cityAdd","setCityAdd","CityCard","CityAdd","SelectProps","PollAppSettings","PollAppSettingsPage","Router","exact","ResultsPage","SettingsPage","AnalyzePage","AttachmentPage","WikiPage","TesterPage","Copyright","align","getFullYear","flexDirection","secondary","main","form","submit","forget","SignIn","onLogin","userError","passwordError","username","setUsername","password","setPassword","CssBaseline","noValidate","autoComplete","SIGNIN_MUTATION","SignInWrap","setUserError","setPasswordError","setUser","onError","signin","SignInForm","App","JSON","stringify","ApolloClient","uri","credentials","ReactDOM","render","StrictMode","ApolloProvider","getElementById","navigator","serviceWorker","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b5b50cd4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { InMemoryCache, makeVar } from '@apollo/client'\r\n\r\nexport const cache = new InMemoryCache({\r\n  typePolicies: {\r\n    Query: {\r\n      fields: {\r\n        activeUser: {\r\n          read() {\r\n            return userVar()\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport const userVar = makeVar();","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function ServiceMenu({ open, close }) {\r\n  const classes = useStyles();\r\n  const list = () => (\r\n    <div\r\n      className={clsx(classes.list)}\r\n      role=\"presentation\"\r\n      onClick={close}\r\n      onKeyDown={close}\r\n    >\r\n      <List>\r\n        <ListItem button key={1}>\r\n          <ListItemIcon><PhoneIcon /></ListItemIcon>\r\n          <ListItemText primary=\"Генератор номеров\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <NavLink to='pollappsetting'>\r\n          <ListItem button key={1}>\r\n            <ListItemIcon><SettingsIcon /></ListItemIcon>\r\n            <ListItemText primary=\"Настройки\" />\r\n          </ListItem>\r\n        </NavLink>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Drawer anchor={'left'} open={open} onClose={close}>\r\n      {list('left')}\r\n    </Drawer>\r\n  );\r\n}\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const CURRENT_USER_QUERY = gql`\r\n  query CurrentUserQuery {\r\n    currentUser {\r\n      id\r\n      username\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USER_INFO = gql`\r\n  query GetActiveUser {\r\n    activeUser @client {\r\n      username\r\n    }\r\n  }\r\n`;","import { gql } from '@apollo/client';\r\n\r\nexport const GET_USER_INFO = gql`\r\n  query GetActiveUser {\r\n    activeUser @client {\r\n      username\r\n    }\r\n  }\r\n`;","import { gql } from '@apollo/client';\r\n\r\nexport const LOGOUT_MUTATION = gql`\r\n  mutation Logout {\r\n    logout\r\n  }\r\n`;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport PieChartIcon from '@material-ui/icons/PieChart';\r\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn';\r\nimport { NavLink } from 'react-router-dom'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport ServeiceMenu from '../ServiceMenu'\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport { CURRENT_USER_QUERY } from '../../containers/App/queries'\r\nimport { GET_USER_INFO } from './queries';\r\nimport { LOGOUT_MUTATION } from './mutations'\r\n\r\n// ЧЕРЕЗ Композицию\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('xs')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  link: {\r\n    color: 'white',\r\n    textDecoration: 'none'\r\n  }\r\n}));\r\n\r\nconst HomeBar = ({ title }) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [appAnchorEl, setAppAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const [menuOpen, setMenuOpen] = React.useState(false)\r\n\r\n  const [logout] = useMutation(\r\n    LOGOUT_MUTATION,\r\n    {\r\n      update: (cache) => cache.writeQuery({\r\n        query: CURRENT_USER_QUERY,\r\n        data: { currentUser: null },\r\n      }),\r\n    },\r\n  );\r\n\r\n  const { loading, error, user } = useQuery(GET_USER_INFO, {\r\n    onCompleted: (data) => console.log(data)\r\n  });\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n  const isAppMenuOpen = Boolean(appAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleAppsMenuOpen = (event) => {\r\n    setAppAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleProfileExit = () => {\r\n    logout()\r\n    handleMenuClose()\r\n  }\r\n\r\n  const handleAppMenuClose = () => {\r\n    setAppAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  }\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const openServiceMenu = (e) => {\r\n    setMenuOpen(true)\r\n  }\r\n\r\n  const closeServiceMenu = (e) => {\r\n    setMenuOpen(false)\r\n  }\r\n\r\n  const menuId = 'primary-account-menu';\r\n  const appsMenuId = 'primary-apps-menu';\r\n\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      {/* <MenuItem onClick={handleMenuClose}>Профиль</MenuItem> */}\r\n      <MenuItem onClick={handleProfileExit}>Выход</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const renderAppsMenu = (\r\n    <Menu\r\n      anchorEl={appAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={appsMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isAppMenuOpen}\r\n      onClose={handleAppMenuClose}\r\n    >\r\n      <MenuItem onClick={handleAppMenuClose}>ПУСТО_1</MenuItem>\r\n      <MenuItem onClick={handleAppMenuClose}>ПУСТО_2</MenuItem>\r\n    </Menu>\r\n  )\r\n\r\n  const mobileMenuId = 'primary-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <NavLink to=\"analyze\">\r\n        <MenuItem>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={0} color=\"secondary\">\r\n              <PieChartIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <p>XML</p>\r\n        </MenuItem>\r\n      </NavLink>\r\n      <MenuItem>\r\n        <IconButton color=\"inherit\">\r\n          <Badge badgeContent={0} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Уведомления</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleAppsMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"more apps\"\r\n          aria-controls=\"primary-apps-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\">\r\n          <AppsIcon />\r\n        </IconButton>\r\n        <p>Приложения</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            onClick={openServiceMenu}\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            {title}\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <NavLink to=\"tester\">\r\n              <IconButton color=\"inherit\">\r\n                <Badge badgeContent={0} color=\"secondary\">\r\n                  <AlarmOnIcon className={classes.link} />\r\n                </Badge>\r\n              </IconButton>\r\n            </NavLink>\r\n            <NavLink to=\"analyze\">\r\n              <IconButton color=\"inherit\">\r\n                <Badge badgeContent={0} color=\"secondary\">\r\n                  <PieChartIcon className={classes.link} />\r\n                </Badge>\r\n              </IconButton>\r\n            </NavLink>\r\n            <IconButton color=\"inherit\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              aria-label=\"apps\"\r\n              aria-controls={appsMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleAppsMenuOpen}\r\n              color=\"inherit\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <AppsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <Tooltip title=\r\n                  {!!user ?\r\n                    user.currentUser.userName\r\n                    :\r\n                    ''\r\n                  }>\r\n                  <AccountCircle />\r\n                </Tooltip>\r\n              </Badge>\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <ServeiceMenu open={menuOpen} close={closeServiceMenu}/>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n      {renderAppsMenu}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeBar","import React from 'react';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: '#44b700',\r\n    color: '#44b700',\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    '&::after': {\r\n      position: 'absolute',\r\n      top: '-1px',\r\n      left: '-1px',\r\n      width: '100%',\r\n      height: '100%',\r\n      borderRadius: '50%',\r\n      animation: '$ripple 1.2s infinite ease-in-out',\r\n      border: '1px solid currentColor',\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  '@keyframes ripple': {\r\n    '0%': {\r\n      transform: 'scale(.8)',\r\n      opacity: 1,\r\n    },\r\n    '100%': {\r\n      transform: 'scale(2.4)',\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    backgroundColor: props => props.color\r\n  }\r\n}));\r\n\r\nconst ActiveAvatar = (props) => {\r\n  const classes = useStyles(props);\r\n  return (\r\n    <div className={classes.root}>\r\n      <StyledBadge\r\n        overlap=\"circle\"\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        variant=\"dot\"\r\n      >\r\n        <Avatar className={classes.avatar}>\r\n          {props.liter}\r\n        </Avatar>\r\n      </StyledBadge>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActiveAvatar","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    backgroundColor: props => props.color\r\n  }\r\n}));\r\n\r\nconst PassiveAvatar = (props) => {\r\n  const classes = useStyles(props);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Avatar className={classes.avatar}>\r\n        {props.liter}\r\n      </Avatar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PassiveAvatar","export const pollTypes = [\r\n  'Экспертный',\r\n  'Всероссийский'\r\n]\r\n\r\nexport const pollWays = [\r\n  'Интервьюирование',\r\n  'Анкетирование',\r\n  'Телефонный',\r\n  'Web-опрос'\r\n]\r\n","import React, { useState, Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { NavLink } from 'react-router-dom'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PollIcon from '@material-ui/icons/Poll';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ActiveAvatar from '../../components/ActiveAvatar'\r\nimport PassiveAvatar from '../../components/PassiveAvatar/'\r\nimport DelConfirm from '../DelConfirm'\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\n\r\nimport {pollWays} from '../../lib/selects'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: '100%',\r\n    margin: '10px 0'\r\n  },\r\n  header: {\r\n    padding: '16px 16px 0 16px'\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    padding: '10px 16px 0 16px'\r\n  },\r\n  media: {\r\n    height: 0,\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  }\r\n}));\r\n\r\nconst PollCard = ({ data }) => {\r\n  const classes = useStyles();\r\n  const [pollId] = useState(data.id)\r\n  const [anchorEl, setAnchorEl] = useState(false);\r\n\r\n  const isPollMenuOpen = Boolean(anchorEl);\r\n\r\n  const Avatar = () => {\r\n    if (data.active) {\r\n      return (\r\n        <ActiveAvatar type={data.type} color={data.color}>\r\n          {data.type}\r\n        </ActiveAvatar>\r\n      )\r\n    } else {\r\n      return (\r\n        <PassiveAvatar type={data.type} color={data.color}>\r\n          {data.type}\r\n        </PassiveAvatar>\r\n      )\r\n    }\r\n  }\r\n\r\n  const Results = () => {\r\n    return (\r\n      <Tooltip title=\"Результаты\">\r\n        <NavLink to={`/results/${data.id}/${data.code}`}>\r\n          <IconButton>\r\n            <PollIcon />\r\n          </IconButton>\r\n        </NavLink>\r\n      </Tooltip>\r\n    )\r\n  }\r\n  const Drive = () => {\r\n    return (\r\n      <Tooltip title=\"Ввод результатов\">\r\n        <NavLink to={`/drive/${data.id}/${data.code}`}>\r\n          <IconButton >\r\n            <AssignmentTurnedInIcon />\r\n          </IconButton>\r\n        </NavLink>\r\n      </Tooltip>\r\n    )\r\n  }\r\n  const Attachment = () => {\r\n    return (\r\n      <Tooltip title=\"Файлы\">\r\n        <NavLink to={`/attachment/${data.id}/${data.code}`}>\r\n          <IconButton>\r\n            <AttachFileIcon />\r\n          </IconButton>\r\n        </NavLink>\r\n      </Tooltip>\r\n    )\r\n  }\r\n\r\n  const Settings = () => {\r\n    return (\r\n      <Tooltip title=\"Настройки\">\r\n        <NavLink to={`/poll-settings/${data.id}/${data.code}`}>\r\n          <IconButton>\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </NavLink>\r\n      </Tooltip>\r\n    )\r\n  }\r\n\r\n  const Wiki = () => {\r\n    return (\r\n      <Tooltip title=\"Заметки\">\r\n        <NavLink to={`/poll-wiki/${data.id}/${data.code}`}>\r\n          <IconButton>\r\n            <LibraryBooksIcon />\r\n          </IconButton>\r\n        </NavLink>\r\n      </Tooltip>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className={classes.root}>\r\n        <CardHeader className={classes.header}\r\n          avatar={\r\n            <Avatar />\r\n          }\r\n          action={\r\n            <Settings />\r\n          }\r\n          title={data.code + ': ' + data.title}\r\n          subheader={data.startDate + ' - ' + data.endDate}\r\n        />\r\n        <CardContent className={classes.content}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                Метод проведения: {pollWays[data.way]}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                Респондентов: {data.sample}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n          <Grid container item xs={12}>\r\n            <Results />\r\n            <Drive />\r\n          </Grid>\r\n          <Grid container item xs={12} justify=\"flex-end\">\r\n            <Attachment />\r\n            <Wiki />\r\n          </Grid>\r\n        </CardActions>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default PollCard","import React, { Fragment } from 'react'\r\nimport PollCard from '../../components/PollCard'\r\n\r\nconst ListOfPolls = ({ data }) => {\r\n\r\n  return data.polls.map((poll, i) => (\r\n    <PollCard key={i} data={poll} />\r\n  ))\r\n}\r\n\r\nexport default ListOfPolls","function testXml(xmlString) {\r\n  var parser = new DOMParser();\r\n  var docError = parser.parseFromString('INVALID', 'text/xml');\r\n  var parsererrorNS = docError.getElementsByTagName(\"parsererror\")[0].namespaceURI;\r\n  var doc = parser.parseFromString(xmlString, 'text/xml');\r\n  if (doc.getElementsByTagNameNS(parsererrorNS, 'parsererror').length > 0) {\r\n    return false\r\n  }\r\n  return doc;\r\n}\r\n\r\nconst xmlparser = (xmlString) => {\r\n  const xml = testXml(xmlString)\r\n  if (xml) {\r\n    let data = {}\r\n    const element = xml.getElementsByTagName(\"opros\")[0]\r\n    data.title = element.getAttribute('name')\r\n    data.code = element.getAttribute('cod')\r\n    data.start = element.getAttribute('start_date')\r\n    data.end = element.getAttribute('end_date')\r\n    data.structure = {\r\n      data: ''\r\n    }\r\n    return data\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nexport default xmlparser","import React, { useRef, useEffect, useState } from 'react'\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Button from '@material-ui/core/Button';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport xmlparser from '../../lib/xmlparser'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst XmlImport = ({ field, ...props }) => {\r\n  const { errorMessage, touched, setFieldValue } = props;\r\n  const { name, value, onChange, onBlur } = field;\r\n  const [processing, setProcessing] = useState(false)\r\n  const [file, setFile] = useState(undefined)\r\n  const [count, setCount] = useState(0)\r\n  const classes = useStyles();\r\n  const fileUpload = useRef();\r\n  let fileReader\r\n\r\n  const upload = () => {\r\n    if (fileUpload) {\r\n      fileUpload.current.click();\r\n    }\r\n  }\r\n\r\n  const handleChg = (e) => {\r\n    e.preventDefault()\r\n    setProcessing(true)\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    if (file) {\r\n      reader.onloadend = () => {\r\n        const xmlText = reader.result\r\n        const xml = xmlparser(xmlText)\r\n        if (xml) {\r\n          setProcessing(false)\r\n          const regEx = /^(\\d{2}).(\\d{2}).(\\d{4})$/;\r\n          setFieldValue('title', xml.title)\r\n          setFieldValue('startdate', xml.start.replace(regEx, `$3-$2-$1`))\r\n          setFieldValue('enddate', xml.end.replace(regEx, `$3-$2-$1`))\r\n          setFieldValue('code', xml.code)\r\n          setFieldValue('xmlfile', file)\r\n        } else {\r\n          console.log('Неправильный формат XML');\r\n          setFieldValue('mainconfig', '')\r\n          return\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Backdrop className={classes.backdrop} open={processing} >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      <input\r\n        style={{ display: 'none' }}\r\n        id={name}\r\n        name={name}\r\n        type=\"file\"\r\n        id={name}\r\n        ref={fileUpload}\r\n        onBlur={onBlur}\r\n        // onChange={handleChange}\r\n        onInput={handleChg}\r\n      />\r\n      <Badge\r\n        color=\"secondary\"\r\n        badgeContent={count}\r\n        style={{ top: '5px' }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n          startIcon={<PublishIcon />}\r\n          onClick={upload}\r\n        >\r\n          XML\r\n        </Button>\r\n      </Badge>\r\n      {errorMessage ? (\r\n        <Typography variant=\"caption\" color=\"error\">\r\n          {errorMessage}\r\n        </Typography>\r\n      ) : null}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default XmlImport","import React, { Component, useState } from \"react\";\r\nimport { Formik, Field } from \"formik\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport XmlInput from \"../../components/XmlInput\";\r\nimport { pollTypes, pollWays } from '../../lib/selects'\r\n\r\nimport * as yup from \"yup\";\r\n\r\nconst TextInputComponent = ({ field, ...props }) => {\r\n  const { errorMessage, label, type, touched } = props;\r\n  const { name, value, onChange, onBlur } = field;\r\n  return (\r\n    <div>\r\n      <TextField\r\n        fullWidth\r\n        type={type}\r\n        name={name}\r\n        label={label}\r\n        value={value}\r\n        error={touched && errorMessage ? true : false}\r\n        helperText={touched && errorMessage ? errorMessage : undefined}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        InputLabelProps={{\r\n          shrink: true\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SelectInputComponent = ({ field, ...props }) => {\r\n  const { errorMessage, label, touched, array } = props;\r\n  const { name, value, onChange, onBlur } = field;\r\n  return (\r\n    <div>\r\n      <TextField\r\n        select\r\n        fullWidth\r\n        name={name}\r\n        label={label}\r\n        value={value}\r\n        error={touched && errorMessage ? true : false}\r\n        helperText={touched && errorMessage ? errorMessage : undefined}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        InputLabelProps={{\r\n          shrink: true\r\n        }}\r\n      >\r\n        {array.map((option, i) => (\r\n          <MenuItem key={i} value={i}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst AddPollDialog = ({ open, closeHndl, saveHndl }) => {\r\n  const FILE_SIZE = 1024 * 1024;                              // 1 mb\r\n  const codeRegExp = /^[A-Za-z]{3}[0-9]{2}-[0-9]{2}?$/\r\n  const SUPPORTED_FORMATS = [\r\n    \"text/xml\"\r\n  ];\r\n  const validationSchema = yup.object().shape({\r\n    title: yup.string().required(\"Обязательное поле\"),\r\n    startdate: yup.date().required('Обязательное поле'),\r\n    enddate: yup.date().required('Обязательное поле'),\r\n    code: yup.string().matches(codeRegExp, 'Формат не валидный').required('Обязательное поле'),\r\n    sample: yup.number().min(1, 'Не меньше одного').required('Обязательное поле'),\r\n    type: yup.string().ensure().required('Обязательное поле'),\r\n    way: yup.string().ensure().required('Обязательное поле'),\r\n    xmlfile: yup\r\n      .mixed()\r\n      .required(\"Обязательное поле формы\")\r\n      .test(\r\n        \"fileSize\",\r\n        \"Слишком большой файл\",\r\n        value => value && value.size <= FILE_SIZE\r\n      )\r\n      .test(\r\n        \"fileFormat\",\r\n        \"Неподдерживаемый формат\",\r\n        value => value && SUPPORTED_FORMATS.includes(value.type)\r\n      )\r\n  });\r\n  const submitHandling = (values, { setSubmitting }) => {\r\n    saveHndl(values)\r\n    closeHndl()\r\n    setSubmitting(true);\r\n  }\r\n  return (\r\n    <Dialog\r\n      className=\"add-poll-dialog\"\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      open={open}\r\n      maxWidth={'sm'}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">Добавить опрос</DialogTitle>\r\n      <DialogContent>\r\n        <Formik\r\n          initialValues={{\r\n            xmlfile: undefined,\r\n            title: undefined,\r\n            startdate: undefined,\r\n            enddate: undefined,\r\n            code: undefined,\r\n            sample: 10,\r\n            type: 1,\r\n            way: 1,\r\n            comment: undefined\r\n          }}\r\n          validationSchema={validationSchema}\r\n          validateOnBlur={true}\r\n          onSubmit={submitHandling}\r\n        >\r\n          {\r\n            ({\r\n              saveHndl,\r\n              values,\r\n              errors,\r\n              touched,\r\n              dirty,\r\n              isSubmitting,\r\n              handleReset,\r\n              handleSubmit,\r\n              handleChange,\r\n              handleBlur,\r\n              setFieldValue\r\n            }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <Field\r\n                        name=\"xmlfile\"\r\n                        component={XmlInput}\r\n                        setFieldValue={setFieldValue}\r\n                        errorMessage={errors[\"xmlfile\"] ? errors[\"xmlfile\"] : undefined}\r\n                        touched={touched[\"xmlfile\"]}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <Field\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        label=\"Наименование\"\r\n                        setFieldValue={setFieldValue}\r\n                        component={TextInputComponent}\r\n                        errorMessage={errors[\"title\"]}\r\n                        touched={touched[\"title\"]}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Field\r\n                        name=\"startdate\"\r\n                        type=\"date\"\r\n                        label=\"Дата начала\"\r\n                        setFieldValue={setFieldValue}\r\n                        component={TextInputComponent}\r\n                        errorMessage={errors[\"startdate\"]}\r\n                        touched={touched[\"startdate\"]}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Field\r\n                        name=\"enddate\"\r\n                        type=\"date\"\r\n                        label=\"Дата окончания\"\r\n                        setFieldValue={setFieldValue}\r\n                        component={TextInputComponent}\r\n                        errorMessage={errors[\"enddate\"]}\r\n                        touched={touched[\"enddate\"]}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Field\r\n                        name=\"code\"\r\n                        label=\"Код опроса\"\r\n                        type=\"text\"\r\n                        setFieldValue={setFieldValue}\r\n                        component={TextInputComponent}\r\n                        errorMessage={errors[\"code\"]}\r\n                        touched={touched[\"code\"]}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Field\r\n                        name=\"sample\"\r\n                        type=\"number\"\r\n                        label=\"Выборка\"\r\n                        setFieldValue={setFieldValue}\r\n                        component={TextInputComponent}\r\n                        errorMessage={errors[\"sample\"]}\r\n                        touched={touched[\"sample\"]}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Field\r\n                        name=\"type\"\r\n                        label=\"Тип опроса\"\r\n                        array={pollTypes}\r\n                        setFieldValue={setFieldValue}\r\n                        component={SelectInputComponent}\r\n                        errorMessage={errors[\"type\"]}\r\n                        touched={touched[\"type\"]}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Field\r\n                        name=\"way\"\r\n                        label=\"Способ проведения\"\r\n                        array={pollWays}\r\n                        component={SelectInputComponent}\r\n                        errorMessage={errors[\"way\"]}\r\n                        touched={touched[\"way\"]}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Field\r\n                        name=\"comment\"\r\n                        label=\"Комментарии\"\r\n                        component={TextInputComponent}\r\n                        errorMessage={errors[\"comment\"]}\r\n                        touched={touched[\"comment\"]}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <DialogActions>\r\n                    <Button onClick={closeHndl} color=\"primary\">\r\n                      Отмена\r\n                    </Button>\r\n                    <Button type=\"submit\" disabled={isSubmitting}>\r\n                      Сохранить\r\n                    </Button>\r\n                  </DialogActions>\r\n                </form>\r\n              )\r\n          }\r\n        </Formik>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\nexport default AddPollDialog;","import { gql } from '@apollo/client'\r\n\r\nexport const addNewPoll = gql`\r\n  mutation addNewPoll($newPoll: PollWithConfig!, $poolOfQuestions: [QuestionInput], $logic: LogicInput, $topic: [TopicInput]) {\r\n    addPoll(poll: $newPoll, questions: $poolOfQuestions, logic: $logic, topic: $topic) {\r\n      title\r\n    }\r\n  }\r\n`\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    top: '10px',\r\n    left: '-55px'\r\n  },\r\n  small: {\r\n    position: 'fixed',\r\n    bottom: '30px',\r\n    right: '30px'\r\n  }\r\n}));\r\n\r\nconst AddFub = ({ onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.small}>\r\n      <Fab color=\"secondary\" aria-label=\"add\" onClick={onClick}>\r\n        <AddIcon />\r\n      </Fab>\r\n    </div>\r\n  );\r\n}\r\nexport default AddFub","import React, { Fragment, useState } from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AddPollDialog from '../AddPollDialog';\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { addNewPoll } from \"./queries\"\r\nimport AddFab from \"../../components/AddFab\";\r\n\r\nconst AddPollWrap = ({ refetch }) => {\r\n  const [openDialog, setOpenDialog] = useState(false)\r\n  const [addPoll, { newPoll }] = useMutation(addNewPoll, {\r\n    onCompleted: () => refetch()\r\n  })\r\n  const openPollDialog = () => {\r\n    setOpenDialog(true)\r\n  }\r\n  const closeDialog = () => {\r\n    setOpenDialog(false)\r\n  }\r\n  const saveNewPoll = (data) => {\r\n    const xmlFile = data.xmlfile\r\n    if (xmlFile.size) {\r\n      let promise = new Promise((resolve, reject) => {\r\n        resolve(xmlParse(xmlFile))\r\n      })\r\n      promise.then(result => {\r\n        const basicData = basicLogicFormation(result)\r\n        const pollInfo = {\r\n          title: data.title,\r\n          startDate: data.startdate,\r\n          endDate: data.enddate,\r\n          code: data.code,\r\n          sample: data.sample,\r\n          type: data.type,\r\n          way: data.way,\r\n          comment: data.comment\r\n        }\r\n        const xmlFile = data.xmlfile\r\n        addPoll({\r\n          variables: {\r\n            newPoll: {\r\n              ...pollInfo,\r\n              comment: pollInfo.comment ? pollInfo.comment : \"\",\r\n              shortTitle: '',\r\n              active: true\r\n            },\r\n            poolOfQuestions: basicData.questions,\r\n            logic: {\r\n              ...basicData.logic\r\n            },\r\n            topic: basicData.topic\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  const xmlParse = (file) => {\r\n    let result = {\r\n      questions: [],\r\n      logic: [],\r\n      topic: []\r\n    }\r\n    let reader = new FileReader();\r\n    return new Promise((resolve, reject) => {\r\n      reader.onloadend = () => {\r\n        const xmlText = reader.result\r\n        const parser = new DOMParser();\r\n        const doc = parser.parseFromString(xmlText, 'text/xml');\r\n        const questions = doc.getElementsByTagName('vopros')\r\n        const questionsLen = questions.length\r\n        for (let i = 0; i < questionsLen; i++) {\r\n          let questionData = {\r\n            title: questions[i].getAttribute('text'),\r\n            topic: +questions[i].getAttribute('tema_id'),\r\n            limit: +questions[i].getAttribute('limit'),\r\n            type: +questions[i].getAttribute('type_id'),\r\n            order: +questions[i].getAttribute('sort'),\r\n            answers: []\r\n          }\r\n          const questionAnswers = questions[i].getElementsByTagName('otvet')\r\n          const answersLen = questionAnswers.length\r\n          for (let i = 0; i < answersLen; i++) {\r\n            const answerData = {\r\n              title: questionAnswers[i].getAttribute('otvet_text'),\r\n              code: questionAnswers[i].getAttribute('otvet_cod').padStart(3, \"0\"),\r\n              type: +questionAnswers[i].getAttribute('otvet_type'),\r\n              order: +questionAnswers[i].getAttribute('otvet_sort')\r\n            }\r\n            questionData.answers[i] = answerData\r\n          }\r\n          result.questions[i] = questionData\r\n        }\r\n        const defaultLogic = doc.getElementsByTagName('restrict')\r\n        const logicLen = defaultLogic.length\r\n        if (logicLen) {\r\n          let logicData = []\r\n          for (let i = 0; i < logicLen; i++) {\r\n            const logic = {\r\n              code: defaultLogic[i].getAttribute('otvet_cod').padStart(3, \"0\"),\r\n              restrict: defaultLogic[i].getAttribute('restrict_cod').padStart(3, \"0\"),\r\n              type: defaultLogic[i].getAttribute('restrict_type')\r\n            }\r\n            logicData[i] = logic\r\n          }\r\n          result.logic = logicData\r\n        }\r\n        const topics = doc.getElementsByTagName('tema')\r\n        const topicsLen = topics.length\r\n        if (topicsLen) {\r\n          for (let i = 0; i < topicsLen; i++) {\r\n            const topicData = {\r\n              id: topics[i].getAttribute('id'),\r\n              title: topics[i].getAttribute('name')\r\n            }\r\n            result.topic[i] = topicData\r\n          }\r\n        }\r\n        resolve(result)\r\n      }\r\n      reader.readAsText(file);\r\n    })\r\n  }\r\n\r\n  const basicLogicFormation = (data) => {\r\n    const basicLogic = data.logic.reduce((acum, val, i) => {\r\n      if (val.type === '3') {\r\n        if (!acum.exclude[val.code]) {\r\n          acum.exclude[val.code] = { restrict: [val.restrict] }\r\n        } else {\r\n          acum.exclude[val.code] = {\r\n            restrict: [\r\n              ...acum.exclude[val.code].restrict,\r\n              val.restrict\r\n            ]\r\n          }\r\n        }\r\n      } else if (val.type === '5') {\r\n        acum.unique = [...acum.unique, val.code]\r\n      }\r\n      return acum\r\n    }, {\r\n      unique: [],\r\n      exclude: {}\r\n    })\r\n    const extLogic = data.questions.reduce((acum, val) => {\r\n      if (val.limit > 1) {\r\n        // если вопрос с множество ответов -> ответ 'Затрудняюсь ответить' (type = 3) - УНИКАЛЬНЫЙ\r\n        basicLogic.unique = [\r\n          ...basicLogic.unique,\r\n          ...val.answers.filter(obj => obj.type === 3).map(obj => obj.code)\r\n        ]\r\n      }\r\n      acum.difficult = [\r\n        ...acum.difficult,\r\n        ...val.answers.filter(obj => obj.type === 3).map(obj => obj.code)\r\n      ]\r\n      acum.freeAnswers = [\r\n        ...acum.freeAnswers,\r\n        ...val.answers.filter(obj => obj.type === 2).map(obj => obj.code)\r\n      ]\r\n      return acum\r\n    }, {\r\n      difficult: [],\r\n      freeAnswers: []\r\n    })\r\n    data.logic = {\r\n      ...basicLogic,\r\n      ...extLogic\r\n    }\r\n    console.log(data.logic);\r\n    return data\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <AddFab onClick={openPollDialog} />\r\n      <AddPollDialog open={openDialog} saveHndl={saveNewPoll} closeHndl={closeDialog} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AddPollWrap","import { gql } from '@apollo/client'\r\n\r\nexport const pollsQuery = gql`\r\n  query pollsQuery {\r\n    polls {\r\n      id\r\n      title\r\n      code\r\n      liter\r\n      color\r\n      startDate\r\n      endDate\r\n      sample\r\n      way\r\n      type\r\n      complete\r\n      questionsCount\r\n      answersCount\r\n      active\r\n    }\r\n  }\r\n`\r\nexport const addNewPoll = gql`\r\n  mutation addNewPoll($newPoll: PollWithConfig!, $poolOfQuestions: [QuestionInput], $logic: LogicInput, $topic: [TopicInput]) {\r\n    addPoll(poll: $newPoll, questions: $poolOfQuestions, logic: $logic, topic: $topic) {\r\n      title\r\n    }\r\n  }\r\n`\r\n\r\nexport const deletePoll = gql`\r\n  mutation deletePoll($id: ID!) {\r\n    deletePoll(id: $id) {\r\n      title\r\n    }\r\n  }\r\n`","import React, { Fragment, useState } from 'react'\r\nimport Container from '@material-ui/core/Container'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport ListOfPolls from '../ListOfPolls'\r\nimport AddPollWrap from '../AddPollWrap'\r\n\r\nimport { useQuery } from '@apollo/client'\r\nimport { pollsQuery } from \"./queries\"\r\n\r\nconst HomeWrap = (props, client) => {\r\n  const { loading, error, data, refetch } = useQuery(pollsQuery)\r\n\r\n  if (loading) return (\r\n    <Fragment>\r\n      <CircularProgress />\r\n      <p>Загрузка. Подождите пожалуйста</p>\r\n    </Fragment>\r\n  )\r\n\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container maxWidth=\"md\">\r\n        <ListOfPolls data={data} />\r\n      </Container>\r\n      <AddPollWrap refetch={refetch} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default HomeWrap","import React, { Fragment } from 'react'\r\n\r\nimport HomeBar from '../components/HomeBar'\r\nimport HomeWrap from '../containers/HomeWrap'\r\n\r\nconst HomePage = () => {\r\n\r\n  return (\r\n    <Fragment>\r\n      <HomeBar title={\"Опросы\"} />\r\n      <HomeWrap />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default HomePage","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    textDecoration: 'none'\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('xs')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  sectionDesktop: {\r\n    display: 'flex'\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  arrow: {\r\n    color: 'white',\r\n    textDecoration: 'none'\r\n  }\r\n}));\r\n\r\nconst SettingBar = ({ title }) => {\r\n  const classes = useStyles();\r\n  const [appAnchorEl, setAppAnchorEl] = React.useState(null);\r\n  const isAppMenuOpen = Boolean(appAnchorEl);\r\n\r\n  const handleAppsMenuOpen = (event) => {\r\n    setAppAnchorEl(event.currentTarget);\r\n  };\r\n  const handleAppMenuClose = () => {\r\n    setAppAnchorEl(null);\r\n  }\r\n\r\n  const appsMenuId = 'primary-apps-menu';\r\n\r\n  const renderAppsMenu = (\r\n    <Menu\r\n      anchorEl={appAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={appsMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isAppMenuOpen}\r\n      onClose={handleAppMenuClose}\r\n    >\r\n      <MenuItem onClick={handleAppMenuClose}>ПУСТО_1</MenuItem>\r\n      <MenuItem onClick={handleAppMenuClose}>ПУСТО_2</MenuItem>\r\n    </Menu>\r\n  )\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <NavLink to=\"/\">\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n            >\r\n              <ArrowBackIcon className={classes.arrow} />\r\n            </IconButton>\r\n          </NavLink>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            {title}\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"apps\"\r\n              aria-controls={appsMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleAppsMenuOpen}\r\n              color=\"inherit\">\r\n              <AppsIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderAppsMenu}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingBar","// export const mainUrl = 'http://loclahost:4000'\r\nexport const mainUrl = 'http://192.168.31.83:4000'","import React, { useRef, useEffect } from 'react'\r\n\r\nconst FreeAnswer = ({ answer, focusHandler, blurHandler }) => {\r\n  const textInput = useRef(null);\r\n  useEffect(() => {\r\n    if (answer.focus) {\r\n      textInput.current.focus()\r\n    }\r\n    if (answer.freeAnswerText !== '') {\r\n      textInput.current.value = answer.freeAnswerText\r\n    }\r\n  }, [])\r\n\r\n  const handlerInput = (e) => {\r\n    // замена запятой на \";\"\r\n    const regRex = /,/gi\r\n    let keyCode = e.keyCode\r\n    if (keyCode === 13) {\r\n      const val = textInput.current.value.replaceAll(regRex, ';')\r\n      textInput.current.value = val\r\n      e.currentTarget.blur()\r\n      return\r\n    } else if (keyCode === 27) {\r\n      if (textInput.current.value !== '') {\r\n        textInput.current.value = ''\r\n        return\r\n      }\r\n      e.currentTarget.blur()\r\n      return\r\n    }\r\n  }\r\n  if (answer.showFreeAnswer) {\r\n    return (\r\n      <span>\r\n        <input\r\n          className=\"free-answer\"\r\n          type=\"text\"\r\n          ref={textInput}\r\n          data-code={answer.code}\r\n          data-keycode={answer.keyCode}\r\n          placeholder=\"Введите свободный ответ\"\r\n          onKeyUp={handlerInput}\r\n          onFocus={focusHandler}\r\n          onBlur={blurHandler}\r\n        />\r\n      </span>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport default FreeAnswer","import React, { Fragment, useRef } from 'react'\r\nimport FreeAnswer from '../FreeAnswer'\r\nimport FlashOnSharpIcon from '@material-ui/icons/FlashOnSharp';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst Answer = ({ answer, clickHandler, focusHandler, blurHandler, settings }) => {\r\n  const answerRef = useRef(null)\r\n\r\n  let answerCls = ['answer-wrap']\r\n  let answerTitle = ['answer-title']\r\n  if (answer.selected) {\r\n    answerCls.push('selected')\r\n  }\r\n  if (answer.disabled) {\r\n    answerTitle.push('disabled')\r\n  }\r\n\r\n  const click = () => {\r\n    clickHandler(answerRef.current)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div onClick={(e) => click(e)}\r\n        className={answerCls.join(' ')}\r\n        ref={answerRef}\r\n        data-code={answer.keyCode} >\r\n        <div className={\"answer-title\"}>\r\n          <span className={\"answer-key\"}>{answer.showIndex}</span>\r\n          <span> </span>\r\n          {settings.codesShow &&\r\n            <span className={\"answer-code\"} >{answer.code}</span>\r\n          }\r\n          <span> - </span>\r\n          <span className={answerTitle.join(' ')}>{answer.title}</span>\r\n          <span className=\"free-answer-icon\">{answer.freeAnswer ? <EditIcon fontSize=\"small\" /> : null}</span>\r\n          <span className=\"answer-exclude-message\">{answer.excludeM}</span>\r\n        </div>\r\n        <div>\r\n          {answer.showFreeAnswer && (\r\n            <FreeAnswer\r\n              answer={answer}\r\n              focus={answer.focus}\r\n              focusHandler={focusHandler}\r\n              blurHandler={blurHandler}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Answer","import React, { useState, useEffect } from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 500,\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  errorText: {\r\n    color: 'red'\r\n  }\r\n}));\r\n\r\nexport default function Tags({ data, limit, settings, multipleHandler }) {\r\n  const classes = useStyles();\r\n  const [answers, setAnswers] = useState([])\r\n  const [codes, setCodes] = useState([])\r\n  const [error, setError] = useState({\r\n    state: false,\r\n    text: ''\r\n  })\r\n\r\n  useEffect(() => {\r\n    const defVal = data.filter(val => {\r\n      if (val.selected) return val\r\n    })\r\n    const codesOfAnswers = data.map(val => val.code)\r\n    setCodes(codesOfAnswers)\r\n    setAnswers(defVal)\r\n  }, [])\r\n\r\n  const handleAnswerSelect = (e, value, reason) => {\r\n    switch (reason) {\r\n      case 'select-option':\r\n        if (value.length > limit) {\r\n          setError({ state: true, text: 'Максимальное количество ответов' })\r\n          return\r\n        }\r\n        setAnswers(value)\r\n        setError({ ...error, state: false })\r\n        break\r\n      case 'remove-option':\r\n        setAnswers(value)\r\n        setError({ ...error, state: false })\r\n        break\r\n      case 'clear':\r\n        setAnswers([])\r\n        setError({ ...error, state: false })\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const blurHandler = (e) => {\r\n    setError({ ...error, state: false })\r\n    multipleHandler(answers, codes)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Autocomplete\r\n        multiple={limit > 1}\r\n        id=\"tags-standard\"\r\n        options={data}\r\n        onChange={handleAnswerSelect}\r\n        value={answers}\r\n        getOptionLabel={(option) => option.title}\r\n        getOptionDisabled={(option) => option.disabled}\r\n        renderOption={(option) => {\r\n          if (settings.codesShow) {\r\n            return <span><span style={{ fontSize: '10px' }}>{option.code}</span> - {option.title}</span>\r\n          }\r\n          return option.title\r\n        }}\r\n        onBlur={blurHandler}\r\n        renderTags={(value, getTagProps) =>\r\n          value.map((option, index) => (\r\n            <Chip\r\n              {...getTagProps({ index })}\r\n              variant=\"outlined\"\r\n              key={index}\r\n              label={settings.codesShow ?\r\n                <span><span style={{ fontSize: '10px' }}>{option.code}</span> - {option.title}</span> :\r\n                <span>{option.title}</span>\r\n              }\r\n            />\r\n          ))\r\n        }\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            error={error.state}\r\n            variant=\"standard\"\r\n            label=\"Выберите ответы\"\r\n            helperText={error.state ? error.text : ''}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { Fragment, useState } from 'react'\r\nimport Answer from \"../Answer\";\r\nimport Tags from '../MultipleAnswers'\r\n\r\nconst Question = ({ count, question, clickHandler, focusHandler, blurHandler, multipleHandler, settings }) => {\r\n  function FlatAnswer() {\r\n    return (\r\n      question.answers.map((answer, i) => (\r\n        <Answer key={i} answer={answer}\r\n          clickHandler={clickHandler}\r\n          focusHandler={focusHandler}\r\n          blurHandler={blurHandler}\r\n          settings={settings}\r\n        />\r\n      )))\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h3 className={\"question-title\"} >\r\n        <span className={\"question-number\"}>{count + 1}</span>\r\n        <span> - </span>\r\n        {question.title}</h3>\r\n      <div>{\r\n        !question.mega ?\r\n          question.answers.map((answer, i) => (\r\n            <Answer key={i} answer={answer}\r\n              clickHandler={clickHandler}\r\n              focusHandler={focusHandler}\r\n              blurHandler={blurHandler}\r\n              settings={settings}\r\n            />\r\n          )) : <Tags data={question.answers} limit={question.limit} settings={settings} multipleHandler={multipleHandler} />\r\n      }\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Question","export const serviceBtns = [\r\n  8, 9, 16, 17, 18, 19, 20, 32,\r\n  33, 34, 35, 36, 38, 40, 91, 106,\r\n  107, 109, 110, 112, 113, 114, 115,\r\n  116, 117, 118, 119, 120, 121, 122, 123, 144\r\n];\r\n\r\nexport const resetBtn = [\r\n  27\r\n]\r\n\r\nexport const confirmBtns = [\r\n  48,\r\n  96,\r\n  13\r\n];\r\n\r\nexport const castCodes = {\r\n  97: 49,\r\n  98: 50,\r\n  99: 51,\r\n  100: 52,\r\n  101: 53,\r\n  102: 54,\r\n  103: 55,\r\n  104: 56,\r\n  105: 57\r\n};\r\n\r\nexport const answersCodes = [\r\n  37,\r\n  39,\r\n  49,\r\n  50,\r\n  51,\r\n  52,\r\n  53,\r\n  54,\r\n  55,\r\n  56,\r\n  57,\r\n  81,\r\n  87,\r\n  69,\r\n  82,\r\n  84,\r\n  89,\r\n  85,\r\n  73,\r\n  79,\r\n  80,\r\n  65,\r\n  83,\r\n  68,\r\n  70,\r\n  71,\r\n  72,\r\n  74,\r\n  75,\r\n  76,\r\n  90,\r\n  88,\r\n  67,\r\n  97,\r\n  98,\r\n  99,\r\n  100,\r\n  101,\r\n  102,\r\n  103,\r\n  104,\r\n  105\r\n]\r\n\r\nexport const keycodes = [\r\n  ['1', 49],\r\n  ['2', 50],\r\n  ['3', 51],\r\n  ['4', 52],\r\n  ['5', 53],\r\n  ['6', 54],\r\n  ['7', 55],\r\n  ['8', 56],\r\n  ['9', 57],\r\n  ['Q', 81],\r\n  ['W', 87],\r\n  ['E', 69],\r\n  ['R', 82],\r\n  ['T', 84],\r\n  ['Y', 89],\r\n  ['U', 85],\r\n  ['I', 73],\r\n  ['O', 79],\r\n  ['P', 80],\r\n  ['A', 65],\r\n  ['S', 83],\r\n  ['D', 68],\r\n  ['F', 70],\r\n  ['G', 71],\r\n  ['H', 72],\r\n  ['J', 74],\r\n  ['K', 75],\r\n  ['L', 76],\r\n  ['Z', 90],\r\n  ['X', 88],\r\n  ['C', 67],\r\n  ['V', 86],\r\n  ['B', 66],\r\n  ['N', 78],\r\n  ['M', 77]\r\n];","import { castCodes, serviceBtns, resetBtn, confirmBtns, answersCodes } from './keycodes'\r\n\r\n// приведение клавиш доп.клавиатуры к кодам основной цифровой клавиатуры\r\nfunction cast(keyCode) {\r\n  if (castCodes[keyCode] !== undefined) return castCodes[keyCode];\r\n  return keyCode;\r\n}\r\n\r\nfunction checkAnswerSelected(keyCode) {\r\n  return answersCodes.includes(keyCode)\r\n}\r\n\r\nfunction checkResetBtn(keyCode) {\r\n  return resetBtn.includes(keyCode)\r\n\r\n}\r\n\r\nfunction checkConfirmBtn(keyCode) {\r\n  return confirmBtns.includes(keyCode)\r\n}\r\n\r\nfunction checkServiceBtn(keyCode) {\r\n  return serviceBtns.includes(keyCode)\r\n}\r\n\r\nconst defineSelectedAnswer = (keyCode) => {\r\n  if (checkAnswerSelected(keyCode)) {\r\n    return {\r\n      do: 1,\r\n      trueCode: cast(keyCode)\r\n    }\r\n  }\r\n  if (checkServiceBtn(keyCode)) {\r\n    return {\r\n      do: 4\r\n    }\r\n  }\r\n  if (checkResetBtn(keyCode)) {\r\n    return {\r\n      do: 2\r\n    }\r\n  }\r\n  if (checkConfirmBtn(keyCode)) {\r\n    return {\r\n      do: 3\r\n    }\r\n  }\r\n  return {\r\n    do: 4\r\n  }\r\n}\r\n\r\nexport default defineSelectedAnswer","import { keycodes } from './keycodes'\r\n\r\n// формирует вопрос, на основании логики и ранее сохраненных результатов\r\nconst questionFormation = (poll, count, result, logic, setResults) => {\r\n  const question = poll.questions[count]\r\n  let keyCodesPool = []\r\n  let codesPool = []\r\n\r\n  // проверка на видимость ответа в перечне (ВНЕШНЯЯ ЛОГИКА - видимость)\r\n  const visibleAnswers = logic.invisible ? question.answers.filter(obj => !logic.invisible.includes(obj.code))\r\n    : question.answers\r\n\r\n  // если вопрос пропущен\r\n\r\n  const exclude = logic.criticalExclude ? logic.criticalExclude : false\r\n  let uniqueIn = false\r\n  let selectedIn = false\r\n  let uniqueSelected = false\r\n  const newAnswers = visibleAnswers.map((answer, i) => {\r\n    // надстройка для объекта - ответ\r\n    let suffix = {\r\n      freeAnswer: false,\r\n      showFreeAnswer: false,\r\n      freeAnswerText: '',\r\n      focus: false,\r\n      selected: false,\r\n      disabled: false,\r\n      exclude: [],\r\n      excludeM: ''\r\n    }\r\n    codesPool.push(answer.code)\r\n    // устанавливаем исключения\r\n    if (exclude) {\r\n      // заполняем поле exclude, в котором указаны все коды, которые будут исключены при выборе данного ответа\r\n      for (let code in exclude) {\r\n        if (code === answer.code) {\r\n          suffix = {\r\n            ...suffix,\r\n            exclude: [...suffix.exclude, ...exclude[code]]\r\n          }\r\n        }\r\n        if (exclude[code].includes(answer.code)) {\r\n          suffix = {\r\n            ...suffix,\r\n            exclude: [...suffix.exclude, code]\r\n          }\r\n        }\r\n      }\r\n      // проверяем не исключен ли данный ответ кодами, которые указаны в поле exclude\r\n      suffix.exclude.map(code => {\r\n        if (result.pool.includes(code)) {\r\n          suffix = {\r\n            ...suffix,\r\n            disabled: true,\r\n            excludeM: `противоречит коду ${code}`\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    if (visibleAnswers.length > keycodes.length) {\r\n      keyCodesPool[i] = [i, i + 1]\r\n    } else {\r\n      keyCodesPool[i] = keycodes[i][1]\r\n      suffix = {\r\n        ...suffix,\r\n        showIndex: keycodes[i][0],\r\n        keyCode: keycodes[i][1],\r\n      }\r\n    }\r\n    // восстанавливаем ответы !\r\n    if (result.pool.includes(answer.code)) {\r\n      selectedIn = true\r\n      suffix = {\r\n        ...suffix,\r\n        selected: true\r\n      }\r\n    }\r\n    // проверка на блокировку ответа (ВНЕШНЯЯ ЛОГИКА - уникальность)\r\n    if (logic.unique.includes(answer.code)) {\r\n      uniqueIn = true\r\n      suffix = {\r\n        ...suffix,\r\n        unique: true\r\n      }\r\n    }\r\n    if (logic.unique.includes(answer.code) & result.pool.includes(answer.code)) uniqueSelected = true\r\n\r\n    // проверка на свободный ответ (ВНЕШНЯЯ ЛОГИКА - свободный ответ)\r\n    if (logic.freeAnswers.includes(answer.code)) {\r\n      suffix = {\r\n        ...suffix,\r\n        freeAnswer: true,\r\n        focus: true\r\n      }\r\n    }\r\n    if (result[question.id]) {\r\n      let data = result[question.id].data\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (answer.code === data[i].answerCode && data[i].freeAnswerText !== '') {\r\n          suffix = {\r\n            ...suffix,\r\n            freeAnswer: true,\r\n            showFreeAnswer: true,\r\n            freeAnswerText: data[i].freeAnswerText,\r\n            focus: false\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const resultQ = { ...answer, ...suffix }\r\n    return resultQ\r\n  })\r\n\r\n  // надстройка для объекта - вопрос\r\n  let qSuffix = {\r\n    mega: false,\r\n    megaMltp: false,\r\n    multiple: false                                      // много возможных ответов\r\n  }\r\n\r\n  if (question.limit > 1) {\r\n    qSuffix = {\r\n      ...qSuffix,\r\n      multiple: true\r\n    }\r\n  }\r\n\r\n  // проверка сколько всего ответов в вопросе -> если много, то формируем multiple select\r\n  if (visibleAnswers.length > keycodes.length) {\r\n    qSuffix = {\r\n      ...qSuffix,\r\n      mega: true,\r\n      megaMltp: question.limit\r\n    }\r\n  } else {\r\n    qSuffix = {\r\n      ...qSuffix,\r\n      keyCodesPool\r\n    }\r\n  }\r\n\r\n  const countSkipAnswers = newAnswers.reduce((acum, answer) => {\r\n    return acum + answer.disabled\r\n  }, 0)\r\n\r\n  if (countSkipAnswers === newAnswers.length) {\r\n    setResults(prevState => ({\r\n      ...prevState,\r\n      [question.id]: {\r\n        data: [],\r\n        codesPool,\r\n        count\r\n      }\r\n    }))\r\n    return {\r\n      next: true\r\n    }\r\n  }\r\n\r\n  if (result[question.id] === undefined) {\r\n    setResults(prevState => ({\r\n      ...prevState,\r\n      [question.id]: {\r\n        data: [],\r\n        codesPool,\r\n        count\r\n      }\r\n    }))\r\n  }\r\n\r\n  // определение выбранных ответов и их уникальность для вопроса при восстановлении результатов\r\n  const mAnswers = newAnswers.map((answer, index) => {\r\n    if (selectedIn) {\r\n      if (uniqueIn) {\r\n        if (uniqueSelected) {\r\n          return answer.unique & answer.selected ? answer : { ...answer, disabled: true }\r\n        } else {\r\n          return answer.unique ? { ...answer, disabled: true } : answer\r\n        }\r\n      }\r\n    }\r\n    return answer\r\n  }).map(answer => {\r\n    if (exclude) {\r\n      for (let code in exclude) {\r\n        if (result.pool.includes(code)) {\r\n          if (exclude[code].includes(answer.code)) {\r\n            return { ...answer, disabled: true }\r\n          }\r\n          return answer\r\n        }\r\n      }\r\n\r\n    }\r\n    return answer\r\n  })\r\n\r\n  const data = {\r\n    ...question,\r\n    ...qSuffix,\r\n    answers: mAnswers\r\n  }\r\n\r\n  return {\r\n    next: false,\r\n    data\r\n  }\r\n}\r\n\r\nexport default questionFormation","const beep = (config) => {\r\n  let audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\n  config = Object.assign({\r\n    volume: 25 / 100,\r\n    frequency: 3020,\r\n    duration: 150,\r\n    type: 'sine'\r\n  }, config);\r\n\r\n  let oscillator = audioCtx.createOscillator();\r\n  let gainNode = audioCtx.createGain();\r\n  oscillator.connect(gainNode);\r\n  gainNode.connect(audioCtx.destination);\r\n  gainNode.gain.value = config.volume;\r\n  oscillator.frequency.value = config.frequency;\r\n  oscillator.type = config.type;\r\n  oscillator.start();\r\n  setTimeout(\r\n    function () {\r\n      oscillator.stop();\r\n    },\r\n    config.duration\r\n  );\r\n}\r\nexport default beep","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst FinishDialog = ({ open, handleClose, finishAll, confirm }) => {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Данная анкета завершена.\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Кажется данная анкета закончена. Перейти к другой анкете?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={finishAll} color=\"primary\">\r\n            Закончить\r\n          </Button>\r\n          <Button onClick={confirm} color=\"primary\" autoFocus>\r\n            Следующая\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FinishDialog","import React, { Fragment, useEffect, useState } from 'react'\r\nimport Question from './components/Question'\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { Grid } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport defineSelectedAnswer from './lib/defineSelectedAnswer'\r\nimport questionFormation from './lib/questionFormation'\r\nimport beep from './lib/beep'\r\nimport FinishDialog from './components/FinishDialog';\r\n\r\nconst KEY_TYPE = 'keyup'\r\nconst STEP_DELAY = 100\r\nconst MOVE_DELAY = 0\r\n\r\nconst ANSWER_SELECTED = 1\r\nconst RESET_RESULTS = 2\r\nconst CONFIRM_QUESTION = 3\r\nconst SKIP = 4\r\n\r\nconst PollDrive = ({ poll, logics, setCurrentQuestion, saveAndGoBack, saveWorksheet }) => {\r\n  const questionsLimit = poll.questions.length\r\n  const [question, setQuestion] = useState(null)\r\n  const [userSettings, setUserSettings] = useState({\r\n    codesShow: true\r\n  })\r\n  const [direction, setDirection] = useState(1)\r\n  const [logic] = useState(logics)\r\n  const [count, setCount] = useState(0)\r\n  const [results, setResults] = useState(\r\n    {\r\n      pool: []\r\n    }\r\n  )\r\n  const [finish, setFinish] = useState(false)\r\n  const [finishDialog, setFinishDialog] = useState(false)\r\n  const [inlineMessage, setInlineMessage] = useState('')\r\n  const keyUpHandler = ({ target, keyCode }) => {\r\n    if (target.nodeName == 'BODY') {\r\n      const nextStep = defineSelectedAnswer(keyCode)\r\n      switch (nextStep.do) {\r\n        case ANSWER_SELECTED: {\r\n          mainLogic(nextStep.trueCode)\r\n          return\r\n        }\r\n        case CONFIRM_QUESTION: {\r\n          confirmResults()\r\n          return\r\n        }\r\n        case RESET_RESULTS: {\r\n          resetAnswers()\r\n          return\r\n        }\r\n        case SKIP: {\r\n          return                                                    // нажата системная клавиша, не относящаяся к опросу\r\n        }\r\n      }\r\n    }\r\n  }\r\n  const confirmResults = () => {\r\n    if (finish) {\r\n      finishRespondent()\r\n    } else {\r\n      if (results[question.id].data.length) {\r\n        goToNext()\r\n        return\r\n      }\r\n      beep()\r\n    }\r\n  }\r\n\r\n  const goToNext = () => {\r\n    setDirection(1)\r\n    if (count < questionsLimit - 1) {\r\n      setCount(count + 1)\r\n    } else {\r\n      setCount(0)\r\n    }\r\n  }\r\n\r\n  const goToPrevious = () => {\r\n    setDirection(0)\r\n    if (count === 0) {\r\n      setCount(questionsLimit - 1)\r\n    } else {\r\n      setCount(count - 1)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(KEY_TYPE, keyUpHandler)\r\n    return () => {\r\n      document.removeEventListener(KEY_TYPE, keyUpHandler)\r\n    };\r\n  })\r\n\r\n  // Кнопка с треброванием выдать ID и сохранить !!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n  useEffect(() => {\r\n    // первичная инициализация, наложение логики и сохранение в стор следующего вопроса + восстановление промежуточных итогов\r\n    const newQuestion = questionFormation(poll, count, results, logic, setResults);\r\n    if (!newQuestion) return\r\n    if (newQuestion.next) {\r\n      if (direction) {\r\n        setCount(count + 1)\r\n      } else {\r\n        setCount(count - 1)\r\n      }\r\n      return\r\n    }\r\n    setQuestion(newQuestion.data)\r\n    setCurrentQuestion(newQuestion.data)\r\n  }, [count])\r\n\r\n  const clickHandler = (target) => {\r\n    const code = target.dataset.code\r\n    const selectedAnswer = question.answers.filter(obj => obj.keyCode === +code)[0]\r\n    // проверка, если поле со свободным ответом необходимо отредактировать\r\n    if (selectedAnswer.freeAnswer && selectedAnswer.selected) {\r\n      return\r\n    }\r\n    mainLogic(code)\r\n  }\r\n\r\n  const codesShow = (e) => {\r\n    setUserSettings(prevState => ({\r\n      ...prevState,\r\n      codesShow: !prevState.codesShow\r\n    }))\r\n  }\r\n\r\n  const checkRespondentFinish = (newResults) => {\r\n    let count = 0\r\n    for (let key in newResults) {\r\n      if (key !== 'pool') {\r\n        count++\r\n      }\r\n    }\r\n    // проверка - если не дошли до конца анкета, нет смысла анализировать концовку\r\n    if (count < poll.questions.length) {\r\n      return false\r\n    }\r\n    for (let key in newResults) {\r\n      if (key !== 'pool') {\r\n        const result = newResults[key]\r\n        if (!result.data.length) {\r\n          // необходимо проверить - пропущен был вопрос или нет\r\n          if (logic.criticalExclude) {\r\n            const resPool = newResults.pool                // уже сохраненные ответы\r\n            const codesPool = result.codesPool\r\n            const criticalExclude = logic.criticalExclude\r\n            const r = codesPool.filter((code, index) => {\r\n              for (let eCode in criticalExclude) {\r\n                if (resPool.includes(eCode)) {\r\n                  if (criticalExclude[eCode].includes(code)) return false\r\n                }\r\n              }\r\n              return true\r\n            })\r\n            if (r.length) {\r\n              setInlineMessage(`Пропущен ${result.count + 1}й вопрос`)\r\n              setFinish(false)\r\n              return false\r\n            }\r\n          } else {\r\n            // пула критичных ответов нет -> запрещенных вопросов нет -> какой-то вопрос пропущен\r\n            // ОПРЕДЕЛИТЬ какой номер вопроса\r\n            setInlineMessage(`Пропущен ${result.count + 1}й вопрос`)\r\n            setFinish(false)\r\n            return false\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setInlineMessage('')\r\n    setFinish(true)\r\n    return true\r\n  }\r\n\r\n  const finishRespondent = () => {\r\n    setFinishDialog(true)\r\n  }\r\n\r\n  // ОСНОВНЫЙ обработчик сброса ответов\r\n  const resetAnswers = () => {\r\n    const savedCodes = results[question.id].data.reduce((acum, val) => [...acum, val.answerCode], [])\r\n    // Сделано так, чтобы не ждать обновления СТЕЙТА с результатами\r\n    let newResults = {}\r\n    for (let key in results) {\r\n      if (key === question.id) {\r\n        newResults[question.id] = {\r\n          ...newResults[question.id],\r\n          data: []\r\n        }\r\n      } else {\r\n        if (key !== 'pool') {\r\n          newResults = {\r\n            ...newResults,\r\n            [key]: results[key]\r\n          }\r\n        } else {\r\n          newResults = {\r\n            ...newResults,\r\n            pool: results.pool.filter(code => {\r\n              return savedCodes.includes(code) ? false : true\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setResults(newResults)\r\n    setQuestion(prevState => ({\r\n      ...prevState,\r\n      answers: prevState.answers.map(\r\n        answer => true ? { ...answer, selected: false, showFreeAnswer: false, disabled: false } : answer\r\n      ).map(\r\n        answer => {\r\n          let excludePool = []\r\n          // формирование пула кодов которые запрещены в результатах\r\n          for (let code in logic.criticalExclude) {\r\n            if (code === answer.code) {\r\n              excludePool = [\r\n                ...excludePool,\r\n                ...logic.criticalExclude[code]\r\n              ]\r\n            }\r\n            if (logic.criticalExclude[code].includes(answer.code)) {\r\n              excludePool = [\r\n                ...excludePool,\r\n                code\r\n              ]\r\n            }\r\n          }\r\n          for (let i = 0; i < excludePool.length; i++) {\r\n            if (newResults.pool.includes(excludePool[i])) {\r\n              return {\r\n                ...answer,\r\n                disabled: true,\r\n                excludeM: `противоречит коду ${excludePool[i]}`\r\n              }\r\n            }\r\n          }\r\n          return {\r\n            ...answer,\r\n            disabled: false,\r\n            excludeM: ''\r\n          }\r\n        }\r\n      )\r\n    }))\r\n    const arrayOfCodes = question.answers.reduce((acum, val) => [...acum, val.code], [])\r\n    // если ответы сброшены, значит и финишировать мы не можем\r\n    setFinish(false)\r\n    // обновить логику и проверить запрещенные ответы для данного вопроса для их перерисовки!!!!!!\r\n  }\r\n\r\n  // ОСНОВНОЙ обработчик логики\r\n  const mainLogic = (code) => {\r\n    const trueCode = +code\r\n    const keyCodesPool = question.keyCodesPool\r\n    const selectedAnswer = question.answers.filter(obj => obj.keyCode === trueCode)[0]\r\n    // движение по опросу\r\n    if (trueCode === 39) {\r\n      setTimeout(() => {\r\n        goToNext()\r\n      }, MOVE_DELAY)\r\n      return\r\n    } else if (trueCode === 37) {\r\n      setTimeout(() => {\r\n        goToPrevious()\r\n      }, MOVE_DELAY)\r\n      return\r\n    }\r\n    // входит ли код клавиатуры в перечень ответов\r\n    if (keyCodesPool.includes(trueCode)) {\r\n      // промежуточные результаты уже содержат выбранный код => удаляем промежуточный результат => обновляем текущий вью\r\n      if (results.pool.includes(selectedAnswer.code)) {\r\n        let newResults = {}\r\n        for (let key in results) {\r\n          if (key === question.id) {\r\n            newResults = {\r\n              ...newResults,\r\n              [question.id]: {\r\n                ...results[question.id],\r\n                data: results[question.id].data.filter(el => el.answerCode !== selectedAnswer.code)\r\n              }\r\n            }\r\n          } else {\r\n            if (key !== 'pool') {\r\n              newResults = {\r\n                ...newResults,\r\n                [key]: results[key]\r\n              }\r\n            } else {\r\n              newResults = {\r\n                ...newResults,\r\n                pool: results.pool.filter(el => el !== selectedAnswer.code)\r\n              }\r\n            }\r\n          }\r\n        }\r\n        setResults(newResults)\r\n        setQuestion(prevState => ({\r\n          ...prevState,\r\n          answers: prevState.answers.map(\r\n            answer => answer.code === selectedAnswer.code ? { ...answer, selected: false, showFreeAnswer: false } : answer\r\n          ).map(\r\n            answer => newResults[question.id].data.length ? answer : ({ ...answer, disabled: false })\r\n          ).map(\r\n            answer => {\r\n              let excludePool = []\r\n              // формирование пула кодов которые запрещены в результатах \r\n              for (let code in logic.criticalExclude) {\r\n                if (code === answer.code) {\r\n                  excludePool = [\r\n                    ...excludePool,\r\n                    ...logic.criticalExclude[code]\r\n                  ]\r\n                }\r\n                if (logic.criticalExclude[code].includes(answer.code)) {\r\n                  excludePool = [\r\n                    ...excludePool,\r\n                    code\r\n                  ]\r\n                }\r\n              }\r\n              for (let i = 0; i < excludePool.length; i++) {\r\n                if (newResults.pool.includes(excludePool[i])) {\r\n                  return {\r\n                    ...answer,\r\n                    disabled: true,\r\n                    excludeM: `противоречит коду ${excludePool[i]}`\r\n                  }\r\n                }\r\n              }\r\n              return {\r\n                ...answer,\r\n                disabled: false,\r\n                excludeM: ''\r\n              }\r\n            }\r\n          ).map(answer => {\r\n            // проверка на уникальность\r\n            if (newResults[question.id].data.length) {\r\n              return answer.unique ? { ...answer, disabled: true } : answer\r\n            }\r\n            return answer\r\n          })\r\n        }))\r\n        checkRespondentFinish(newResults)\r\n        return\r\n      }\r\n      // проверка на уникальность ответа и выбраннного до этого противоречивого ответа (ВНЕШНЯЯ ЛОГИКА - уникальность)\r\n      if (logic.unique.includes(selectedAnswer.code)) {\r\n        if (results[question.id].data.length) {\r\n          beep()\r\n          return\r\n        }\r\n      }\r\n      // проверка на активность ответа и ограничение по количеству ответов\r\n      if (selectedAnswer.disabled || results[question.id].data.length >= question.limit) {\r\n        beep()\r\n        return\r\n      }\r\n      // проверка на свободный ответ\r\n      if (selectedAnswer.freeAnswer) {\r\n        setQuestion(prevState => ({\r\n          ...prevState,\r\n          answers: prevState.answers.map(\r\n            answer => answer.keyCode === selectedAnswer.keyCode ? { ...answer, selected: true, showFreeAnswer: true } : answer\r\n          )\r\n        }))\r\n        return\r\n      }\r\n      const result = {\r\n        answerCode: selectedAnswer.code,\r\n        freeAnswer: false,\r\n        freeAnswerText: ''\r\n      }\r\n      // проверка на исключаемость (ВНЕШНЯЯ ЛОГИКА - КРИТИЧНАЯ исключаемость) -> запретить ответы, которые указаны в конфиг файле\r\n      for (let code in logic.criticalExclude) {\r\n        // если в выбранных ответах присутствует код, который исключает другие ответы\r\n        if (results.pool.includes(code)) {\r\n          if (logic.criticalExclude[code].includes(selectedAnswer.code)) {\r\n            beep()\r\n            return\r\n          }\r\n        }\r\n      }\r\n      // проверка на исключаемость (ВНЕШНЯЯ ЛОГИКА - НЕКРИТИЧНАЯ исключаемость) -> ОПОВЕСТИТЬ при ответе, которые указаны в конфиг файле\r\n      for (let code in logic.nonCriticalExclude) {\r\n        // если в выбранных ответах присутствует код, который исключает другие ответы\r\n        if (results.pool.includes(code)) {\r\n          if (logic.nonCriticalExclude[code].includes(selectedAnswer.code)) {\r\n            console.log('Ответ не совсем корректен');\r\n          }\r\n        }\r\n      }\r\n\r\n      let newResultState = Object.assign({}, results);\r\n      newResultState[question.id].data.push(result)\r\n      newResultState.pool.push(selectedAnswer.code)\r\n      setResults(newResultState)\r\n      setQuestion(prevState => ({\r\n        ...prevState,\r\n        answers: prevState.answers.map(\r\n          answer => answer.keyCode === trueCode ? { ...answer, selected: true } : answer\r\n        ).map(\r\n          answer => logic.unique.includes(answer.code) & answer.keyCode !== trueCode ? { ...answer, disabled: true } : answer\r\n        ).map(\r\n          answer => selectedAnswer.exclude.includes(answer.code) ? {\r\n            ...answer,\r\n            disabled: true,\r\n            excludeM: `противоречит коду ${selectedAnswer.code}`\r\n          } : answer\r\n        )\r\n      }))\r\n      // проверить на уникальность (ВНЕШНЯЯ ЛОГИКА - уникальность) -> запретить другие ответы\r\n      if (logic.unique.includes(selectedAnswer.code)) {\r\n        setQuestion(prevState => ({\r\n          ...prevState,\r\n          answers: prevState.answers.map(\r\n            answer => answer.keyCode === trueCode ? answer : { ...answer, disabled: true }\r\n          )\r\n        }))\r\n      }\r\n\r\n      // ПРОВЕРКА на окончание ввода\r\n      if (checkRespondentFinish(newResultState)) {\r\n        return\r\n      } else {\r\n        // проверка на ЛИМИТ (для автоматического перехода к следующему вопросу)\r\n        if (results[question.id].data.length >= question.limit) {\r\n          // переходим дальше\r\n          setTimeout(() => {\r\n            goToNext()\r\n          }, STEP_DELAY)\r\n          return\r\n        }\r\n      }\r\n    } else {\r\n      beep()\r\n    }\r\n  }\r\n\r\n  // ОСНОВНОЙ обработчик свободного ответа\r\n  const blurHandler = (e) => {\r\n    const value = e.currentTarget.value\r\n    const selectedCode = e.currentTarget.dataset.code\r\n    const selectedKeyCode = e.currentTarget.dataset.keycode\r\n    const selectedAnswer = question.answers.filter(obj => obj.keyCode === +selectedKeyCode)[0]\r\n    if (value === '') {\r\n      // пустое поле не позволительно -> стираем из промежуточного результата и обновляем вью\r\n      let newResults = {}\r\n      for (let key in results) {\r\n        if (key === question.id) {\r\n          newResults = {\r\n            ...newResults,\r\n            [question.id]: {\r\n              ...results[question.id],\r\n              data: results[question.id].data.filter(el => el.answerCode !== selectedCode)\r\n            }\r\n          }\r\n        } else {\r\n          if (key !== 'pool') {\r\n            newResults = {\r\n              ...newResults,\r\n              [key]: results[key]\r\n            }\r\n          } else {\r\n            newResults = {\r\n              ...newResults,\r\n              pool: results.pool.filter(el => el !== selectedCode)\r\n            }\r\n          }\r\n        }\r\n      }\r\n      setResults(newResults)\r\n      setQuestion(prevState => ({\r\n        ...prevState,\r\n        answers: prevState.answers.map(\r\n          answer => answer.code === selectedCode ? { ...answer, selected: false, showFreeAnswer: false } : answer\r\n        ).map(\r\n          answer => newResults[question.id].data.length ? answer : ({ ...answer, disabled: false })\r\n        ).map(\r\n          answer => {\r\n            let excludePool = []\r\n            // формирование пула кодов которые запрещены в результатах \r\n            for (let code in logic.criticalExclude) {\r\n              if (code === answer.code) {\r\n                excludePool = [\r\n                  ...excludePool,\r\n                  ...logic.criticalExclude[code]\r\n                ]\r\n              }\r\n              if (logic.criticalExclude[code].includes(answer.code)) {\r\n                excludePool = [\r\n                  ...excludePool,\r\n                  code\r\n                ]\r\n              }\r\n            }\r\n            for (let i = 0; i < excludePool.length; i++) {\r\n              if (newResults.pool.includes(excludePool[i])) {\r\n                return {\r\n                  ...answer,\r\n                  disabled: true,\r\n                  excludeM: `противоречит коду ${excludePool[i]}`\r\n                }\r\n              }\r\n            }\r\n            return {\r\n              ...answer,\r\n              disabled: false,\r\n              excludeM: ''\r\n            }\r\n          }\r\n        ).map(answer => {\r\n          // проверка на уникальность\r\n          if (newResults[question.id].data.length) {\r\n            return answer.unique ? { ...answer, disabled: true } : answer\r\n          }\r\n          return answer\r\n        })\r\n      }))\r\n      checkRespondentFinish(newResults)\r\n      return\r\n    }\r\n    // поле не пустое -> сохраняем результат\r\n    const result = {\r\n      answerCode: selectedCode,\r\n      freeAnswer: false,\r\n      freeAnswerText: value\r\n    }\r\n\r\n    /// опять новый СТЕЙТ результата!!!!!!!!!!!\r\n\r\n    let newResultState = {}\r\n    if (results.pool.includes(selectedCode)) {\r\n      newResultState = Object.assign({}, results);\r\n      newResultState[question.id] = {\r\n        ...newResultState[question.id],\r\n        data: results[question.id].data.map(\r\n          answer => answer.answerCode === selectedCode ? { ...answer, freeAnswerText: value } : answer\r\n        )\r\n      }\r\n    } else {\r\n      newResultState = Object.assign({}, results);\r\n      newResultState[question.id].data.push(result)\r\n      newResultState.pool.push(selectedCode)\r\n    }\r\n    setResults(newResultState)\r\n\r\n    // проверить на уникальность (ВНЕШНЯЯ ЛОГИКА - уникальность) -> запретить другие ответы\r\n    if (logic.unique.includes(selectedCode)) {\r\n      setQuestion(prevState => ({\r\n        ...prevState,\r\n        answers: prevState.answers.map(\r\n          answer => answer.keyCode === +selectedKeyCode ? answer : { ...answer, disabled: true }\r\n        )\r\n      }))\r\n    }\r\n    setQuestion(prevState => ({\r\n      ...prevState,\r\n      answers: prevState.answers.map(\r\n        answer => answer.keyCode === selectedCode ? { ...answer, selected: true } : answer\r\n      ).map(\r\n        answer => logic.unique.includes(answer.code) & answer.keyCode !== selectedCode ? { ...answer, disabled: true } : answer\r\n      ).map(\r\n        answer => selectedAnswer.exclude.includes(answer.code) ? {\r\n          ...answer,\r\n          disabled: true,\r\n          excludeM: `противоречит коду ${selectedAnswer.code}`\r\n        } : answer\r\n      )\r\n    }))\r\n\r\n    // \r\n    if (checkRespondentFinish(newResultState)) {\r\n      return\r\n    } else {\r\n      if (results[question.id].data.length >= question.limit - 1) {         // -1 т.к. не успевает обновится стейт\r\n        setTimeout(() => {\r\n          goToNext()\r\n        }, STEP_DELAY)\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  // !!!!!!!!!!!!!!!!!!!!Обработчик SELECTa - не доделана логика выбора!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n  const multipleHandler = (value, codes) => {\r\n    if (value.length) {\r\n      const codesPool = value.map(val => val.code)\r\n      const resultsPool = value.map(val => {\r\n        return {\r\n          answerCode: val.code,\r\n          // keyCode: val.keyCode,\r\n          freeAnswer: false,\r\n          freeAnswerText: ''\r\n        }\r\n      })\r\n      const clearPool = results.pool.filter(val => !codes.includes(val))\r\n      setResults(prevState => ({\r\n        ...prevState,\r\n        [question.id]: {\r\n          ...prevState[question.id],\r\n          data: [\r\n            ...resultsPool\r\n          ]\r\n        },\r\n        pool: [\r\n          ...clearPool,\r\n          ...codesPool\r\n        ]\r\n      }))\r\n      if (value.length) {\r\n        setTimeout(() => {\r\n          goToNext()\r\n        }, STEP_DELAY)\r\n      }\r\n      return\r\n    }\r\n    setResults(prevState => ({\r\n      ...prevState,\r\n      [question.id]: {\r\n        ...prevState[question.id],\r\n        data: []\r\n      },\r\n      pool: prevState.pool.filter(obj => !codes.includes(obj))\r\n    }))\r\n  }\r\n\r\n  const cancelFinish = () => {\r\n    // просто возврат к анкете, чтобы что-то поправить\r\n    setFinishDialog(false)\r\n  }\r\n\r\n  const confirmFinish = () => {\r\n    // закончить данную анкету и начать новую, сбросив все данные\r\n    saveWorksheet(results)\r\n    setResults({\r\n      pool: []\r\n    })\r\n    setCount(0)\r\n    setFinish(false)\r\n    setFinishDialog(false)\r\n  }\r\n\r\n  const finishThisPoll = () => {\r\n    // закончить данный опрос и перейти на главную страницу\r\n    setFinish(false)\r\n    setFinishDialog(false)\r\n    saveAndGoBack(results)\r\n  }\r\n\r\n  const InlineInformer = () => {\r\n    return (\r\n      <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n        {inlineMessage}\r\n      </Typography>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <FinishDialog open={finishDialog} handleClose={cancelFinish} finishAll={finishThisPoll} confirm={confirmFinish} />\r\n      <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n        <Grid container xs={6} md={3} justify=\"flex-start\">\r\n          <FormControlLabel\r\n            value=\"end\"\r\n            control={<Checkbox color=\"primary\" onChange={codesShow} defaultChecked={userSettings.codesShow} />}\r\n            label=\"Коды ответов\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Hidden only={['sm', 'xs']}>\r\n          <Grid container md={6} justify=\"center\">\r\n            <InlineInformer />\r\n          </Grid>\r\n        </Hidden>\r\n        <Grid container xs={6} md={3} justify=\"flex-end\">\r\n          <p>Всего: <span><strong>{questionsLimit}</strong></span></p>\r\n        </Grid>\r\n        <Hidden mdUp>\r\n          <Grid container xs={12} justify=\"center\">\r\n            <InlineInformer />\r\n          </Grid>\r\n        </Hidden>\r\n\r\n      </Grid>\r\n      {question &&\r\n        <Question\r\n          count={count}\r\n          question={question}\r\n          settings={userSettings}\r\n          clickHandler={clickHandler}\r\n          blurHandler={blurHandler}\r\n          multipleHandler={multipleHandler}\r\n        />\r\n      }\r\n      <Button onClick={goToPrevious} variant=\"contained\" className=\"control-button\">Назад</Button>\r\n      <Button onClick={goToNext} variant=\"contained\" className=\"control-button\">Вперед</Button>\r\n      {finish &&\r\n        <Button onClick={finishRespondent} variant=\"contained\" className=\"control-button\">Финиш</Button>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PollDrive","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nexport default function CityDialog({ open, handleClose, save, cities }) {\r\n  const [state, setState] = useState(\"\")\r\n  const handleChange = (e) => {\r\n    const { options, selectedIndex, value } = e.target;\r\n    const id = value\r\n    const title = options[selectedIndex].innerHTML\r\n    setState({\r\n      id,\r\n      title\r\n    })\r\n  }\r\n\r\n  const handleSave = () => {\r\n    save(state)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">ГОРОД</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Выберите город в котором проводился опрос\r\n          </DialogContentText>\r\n          <Select\r\n            fullWidth\r\n            native\r\n            value={state.id}\r\n            onChange={e => handleChange(e)}\r\n          >\r\n            <option aria-label=\"None\" disabled selected value=\"\" />\r\n            {cities.map((city, i) =>\r\n              <option key={i} value={city.id}>{city.title}</option>\r\n            )}\r\n          </Select>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={handleSave} disabled={!Boolean(state)} color=\"primary\">\r\n            Сохранить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const pollDataQuery = gql`\r\n  query pollsQuery($id: ID!) {\r\n    poll(id: $id) {\r\n      id\r\n      questions{\r\n        id\r\n        title\r\n        limit\r\n        answers {\r\n          id\r\n          code\r\n          title\r\n        }\r\n      }\r\n      logic {\r\n        path\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const citiesQuery = gql`\r\n  query citiesQ {\r\n    cities {\r\n      id\r\n      title\r\n    }\r\n  }\r\n`","import { gql } from '@apollo/client'\r\n\r\nexport const saveNewResult = gql`\r\nmutation saveResult($poll: String!, $city: String!, $user: String!, $pool: [String], $data: [ResultData]) {\r\n  saveResult(\r\n    poll: $poll,\r\n    city: $city,\r\n    user: $user,\r\n    pool: $pool,\r\n    data: $data\r\n  )\r\n}\r\n`","export const parseIni = (area) => {\r\n  let configData = area;\r\n  // let configData = area.value;\r\n  let regex = {\r\n    section: /^\\s*\\[\\s*([^\\]]*)\\s*\\]\\s*$/,\r\n    param: /^\\s*([^=]+?)\\s*=\\s*(.*?)\\s*$/,\r\n    comment: /^\\s*#.*$/\r\n  };\r\n  let config = {};\r\n  let lines = configData.split(/[\\r\\n]+/);\r\n  let section = null;\r\n  lines.forEach(function (line) {\r\n    if (regex.comment.test(line)) {\r\n      return;\r\n    } else if (regex.param.test(line)) {\r\n      let match = line.match(regex.param);\r\n      if (section) {\r\n        config[section][match[1]] = parseParams(match[2]);\r\n      } else {\r\n        config[match[1]] = parseParams(match[2]);\r\n      }\r\n    } else if (regex.section.test(line)) {\r\n      let match = line.match(regex.section);\r\n      config[match[1]] = {};\r\n      section = match[1];\r\n    } else if (line.length == 0 && section) {\r\n      section = null;\r\n    }\r\n  });\r\n  // console.log(config);\r\n  return concatLogic(config);\r\n}\r\n\r\nfunction concatLogic(config) {\r\n  let regex = /([0-9]{1,})/gm;\r\n  let result = {};\r\n  let property = null;\r\n  for (let key in config) {\r\n    property = key.match(/[a-zA-Z]*/gm)[0];\r\n    result[property] = {};\r\n  }\r\n  for (let key in config) {\r\n    property = key.match(/[a-zA-Z]*/gm)[0];\r\n    let suffix = key.match(regex);\r\n    if (suffix !== null) {\r\n      result[property][suffix] = config[key];\r\n    } else {\r\n      result[property][1] = config[key];\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction parseParams(data) {\r\n  // избавляемся от пробелов\r\n  let trimData = data.replace(/\\s*/g, '');\r\n  let regex = {\r\n    // range : /\\[(.+?)\\]/gm,\r\n    // single: /([0-9]{1,3})/gm,\r\n    srange: /([0-9]{1,3})|\\[(.+?)\\]/gm\r\n  };\r\n\r\n  let output = [];\r\n  let temp;\r\n  do {\r\n    temp = regex.srange.exec(trimData);\r\n    if (temp) {\r\n      // одиночные\r\n      if (temp[1] !== undefined) {\r\n        output.push(temp[1]);\r\n      }\r\n      // диапазон\r\n      if (temp[2] !== undefined) {\r\n        let range = temp[2];\r\n        output = output.concat(rangeToArray(range));\r\n      }\r\n    }\r\n  } while (temp);\r\n  return output;\r\n}\r\n\r\nfunction rangeToArray(data) {\r\n  let regex = /(\\d{1,3})\\s*-\\s*(\\d{1,3})/gm;\r\n  let result = (data.replace(regex, (...match) => {\r\n    let temp = [];\r\n    let start = match[1];\r\n    let end = match[2];\r\n    // если перепутаны места\r\n    if (start > end) {\r\n      start = match[2];\r\n      end = match[1];\r\n    }\r\n    let length = (end - start) + 1;\r\n    while (length) {\r\n      start = start + '';\r\n      temp.push(start.padStart(3, '0'));\r\n      start++\r\n      length--;\r\n    }\r\n    return temp;\r\n  }));\r\n  return result.split(',');\r\n}\r\n\r\nexport const normalizeLogic = (logic) => {\r\n  let normalizedLogic = {}\r\n  console.log(logic);\r\n  for (let key in logic) {\r\n    switch (key) {\r\n      case 'difficult':\r\n        normalizedLogic = {\r\n          ...normalizedLogic,\r\n          difficult: logic[key][1].answers\r\n        }\r\n        break\r\n      case 'freeAnswers':\r\n        normalizedLogic = {\r\n          ...normalizedLogic,\r\n          freeAnswers: logic[key][1].answers\r\n        }\r\n        break\r\n      case 'exclude':\r\n        const exclude = logic[key]\r\n        let criticalExclude = {}\r\n        let nonCriticalExclude = {}\r\n        for (let i in exclude) {\r\n          if (exclude[i].critical[0] === '1') {\r\n            exclude[i].answers.map((answer) => {\r\n              criticalExclude[answer] = exclude[i].exclude\r\n            })\r\n          }\r\n          if (exclude[i].critical[0] === '0') {\r\n            exclude[i].answers.map((answer) => {\r\n              nonCriticalExclude[answer] = exclude[i].exclude\r\n            })\r\n          }\r\n        }\r\n        normalizedLogic = {\r\n          ...normalizedLogic,\r\n          criticalExclude,\r\n          nonCriticalExclude\r\n        }\r\n        break\r\n      case 'unique':\r\n        normalizedLogic = {\r\n          ...normalizedLogic,\r\n          unique: logic[key][1].answers\r\n        }\r\n        break\r\n      case 'invisible':\r\n        const invisible = logic[key]\r\n        let invisiblePool = []\r\n        for (let i in invisible) {\r\n          invisiblePool = [\r\n            ...invisiblePool,\r\n            ...invisible[i].answers\r\n          ]\r\n        }\r\n        normalizedLogic = {\r\n          ...normalizedLogic,\r\n          invisible: invisiblePool\r\n        }\r\n        break\r\n    }\r\n  }\r\n  console.log(normalizedLogic);\r\n  return normalizedLogic\r\n}","import React, { Fragment, useState, useRef, useEffect } from 'react'\r\n\r\nimport { mainUrl } from \"../../mainconfig\";\r\nimport Container from '@material-ui/core/Container'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport PollDrive from \"../../modules/PollDrive\";\r\nimport CityDialog from '../../components/CityDialog';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { pollDataQuery, citiesQuery } from \"./queries\"\r\nimport { saveNewResult, saveResult } from './mutaions'\r\nimport { parseIni, normalizeLogic } from './lib/utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst DriveWrap = ({ id }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [poll, setPoll] = useState(null)\r\n  const [backOpen, setBackOpen] = useState(false)\r\n  const [poolOfCities, setPoolOfCities] = useState(null)\r\n  const [openCityDialog, setOpenCityDialog] = useState(true);\r\n  const [logic, setPollLogic] = useState(null)\r\n  const [currentCity, setCurrentCity] = useState(null)\r\n  const [currentQuestion, setCurrentQuestion] = useState({\r\n    'multiple': false\r\n  })\r\n  const { pollLoading, error, data } = useQuery(pollDataQuery, {\r\n    variables: { id },\r\n    onCompleted: (data) => {\r\n      handleConfigFile(data.poll.logic.path)\r\n    }\r\n  })\r\n  const handleConfigFile = (filePath) => {\r\n    fetch(mainUrl + filePath)\r\n      .then((r) => r.text())\r\n      .then(text => {\r\n        const logic = parseIni(text)\r\n        // Нормализация ЛОГИКИ - здесь формируется ЛОГИКА опроса, на основании конфиг файла !!!\r\n        const normLogic = normalizeLogic(logic)\r\n        setPollLogic(normLogic)\r\n      })\r\n  }\r\n  const [saveResult] = useMutation(saveNewResult)\r\n\r\n  useEffect(() => {\r\n    // исключение вопросов, ответы которых полностью исключены полем [invisible] ВНЕШНЕЙ ЛОГИКИ\r\n    if (logic) {\r\n      if (logic.invisible) {\r\n        const invisiblePool = logic.invisible\r\n        const visibleQuestions = data.poll.questions.filter((question) => {\r\n          const answers = question.answers\r\n          const lAnswers = answers.length\r\n          let count = 0\r\n          for (let i = 0; i < lAnswers; i++) {\r\n            if (invisiblePool.includes(answers[i].code)) {\r\n              count++\r\n            }\r\n          }\r\n          if (count !== lAnswers) {\r\n            return true\r\n          }\r\n        })\r\n        setPoll({\r\n          id: data.poll.id,\r\n          questions: visibleQuestions\r\n        })\r\n      } else {\r\n        setPoll({\r\n          id: data.poll.id,\r\n          questions: data.poll.questions\r\n        })\r\n      }\r\n    }\r\n  }, [logic])\r\n\r\n  const { citiesLoading, cError, cData } = useQuery(citiesQuery, {\r\n    onCompleted: (cData) => {\r\n      setPoolOfCities(cData.cities)\r\n    }\r\n  })\r\n\r\n  if (!poll || !poolOfCities || !logic) return (\r\n    <Fragment>\r\n      <CircularProgress />\r\n      <p>Загрузка. Подождите пожалуйста</p>\r\n    </Fragment>\r\n  )\r\n\r\n  if (error || cError) return <p>Error :(</p>;\r\n\r\n  const saveCity = (city) => {\r\n    setCurrentCity(city)\r\n    setOpenCityDialog(false)\r\n  }\r\n\r\n  const closeDialog = () => {\r\n    setOpenCityDialog(false)\r\n    history.push(\"/\")\r\n  }\r\n\r\n  const prepareResultData = (data) => {\r\n    let result = []\r\n    for (let key in data) {\r\n      if (key !== 'pool') {\r\n        result.push({\r\n          id: key,\r\n          data: data[key].data.map(answer => {\r\n            return {\r\n              code: answer.answerCode,\r\n              text: answer.freeAnswerText\r\n            }\r\n          })\r\n        })\r\n      }\r\n    }\r\n    return result\r\n  }\r\n\r\n  const saveAndGoBack = (data) => {\r\n    setBackOpen(true)\r\n    const result = prepareResultData(data)\r\n    saveResult({\r\n      variables: {\r\n        poll: poll.id,\r\n        city: currentCity.id,\r\n        user: '5f73207d34750a3be7865de7',\r\n        pool: data.pool,\r\n        data: result\r\n      }\r\n    })\r\n    setBackOpen(false)\r\n    // return setBackOpen(0)\r\n    // history.push(\"/\")\r\n  }\r\n\r\n  const saveWorksheet = (data) => {\r\n    setBackOpen(true)\r\n    const result = prepareResultData(data)\r\n    saveResult({\r\n      variables: {\r\n        poll: poll.id,\r\n        city: currentCity.id,\r\n        user: '5f73207d34750a3be7865de7',\r\n        pool: data.pool,\r\n        data: result\r\n      }\r\n    })\r\n    setBackOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Backdrop className={classes.backdrop} open={backOpen}>\r\n        <CircularProgress color=\"inherit\" />\r\n        <p>Подождите, сохранение результатов</p>\r\n      </Backdrop>\r\n      <div style={{ backgroundColor: currentQuestion.multiple ? 'rgb(208 226 252)' : '#fff' }}>\r\n        <Container maxWidth=\"md\">\r\n          <CityDialog open={openCityDialog} cities={poolOfCities} save={saveCity} handleClose={closeDialog} />\r\n          <PollDrive poll={poll} logics={logic} setCurrentQuestion={setCurrentQuestion} saveAndGoBack={saveAndGoBack} saveWorksheet={saveWorksheet} />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default DriveWrap","import React, { Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport SettingBar from '../components/SettingBar'\r\nimport DriveWrap from \"../containers/DriveWrap\";\r\n\r\nconst DrivePage = () => {\r\n  let { id, code } = useParams();\r\n\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title={`Опрос ` + code + ` - вбивание`} />\r\n      <DriveWrap id={id}/>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default DrivePage","import { gql } from '@apollo/client'\r\n\r\nexport const GET_POLL_DATA = gql`\r\n  query pollQuery($id: ID!) {\r\n    poll(id: $id) {\r\n      id\r\n      title\r\n      code\r\n      liter\r\n      questionsCount\r\n      answersCount\r\n      questions {\r\n        id\r\n        title\r\n        limit\r\n        order\r\n        answers {\r\n          id\r\n          title\r\n          order\r\n          code\r\n        }\r\n      }\r\n      logic {\r\n        path\r\n      }\r\n    }\r\n  }\r\n`","import React, { Fragment, useState, useEffect } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { parseIni, normalizeLogic } from '../../../containers/DriveWrap/lib/utils'\r\nimport { useQuery } from '@apollo/client'\r\n\r\nimport { GET_POLL_DATA } from \"./queries\"\r\n\r\n\r\nconst Generation = ({ id }) => {\r\n  const [poll, setPoll] = useState(null)\r\n  const [questions, setQuestions] = useState(null)\r\n  const [logic, setLogic] = useState(null)\r\n  const [count, setCount] = useState(null)\r\n  const { loading, error, data } = useQuery(GET_POLL_DATA, {\r\n    variables: { id },\r\n    onCompleted: () => {\r\n      setPoll({\r\n        id: data.poll.id,\r\n        title: data.poll.title,\r\n        questionsCount: data.poll.questionsCount,\r\n        answersCount: data.poll.answersCount\r\n      })\r\n      handleConfigFile(data.poll.logic.path)\r\n    }\r\n  })\r\n\r\n  const handleConfigFile = (filePath) => {\r\n    fetch(`http://localhost:4000${filePath}`)\r\n      .then((r) => r.text())\r\n      .then(text => {\r\n        const logic = parseIni(text)\r\n        // Нормализация ЛОГИКИ - здесь формируется ЛОГИКА опроса, на основании конфиг файла !!!\r\n        const mainLogic = normalizeLogic(logic)\r\n        setLogic(mainLogic)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (logic) {\r\n      let visibleQuestions = []\r\n      if (logic.invisible) {\r\n        const invisiblePool = logic.invisible\r\n        visibleQuestions = data.poll.questions.filter((question) => {\r\n          const answers = question.answers\r\n          const lAnswers = answers.length\r\n          let count = 0\r\n          for (let i = 0; i < lAnswers; i++) {\r\n            if (invisiblePool.includes(answers[i].code)) {\r\n              count++\r\n            }\r\n          }\r\n          if (count !== lAnswers) {\r\n            return true\r\n          }\r\n        })\r\n      } else {\r\n        visibleQuestions = data.poll.questions\r\n      }\r\n      const modQuestions = visibleQuestions.map((question, index) => {\r\n        const newAnswers = question.answers.map((answer, index) => {\r\n          let suffix = {}\r\n          if (logic.invisible) {\r\n            if (logic.invisible.includes(answer.code)) {\r\n              suffix = {\r\n                ...suffix,\r\n                disabled: true\r\n              }\r\n            }\r\n          }\r\n          if (logic.freeAnswers) {\r\n            if (logic.freeAnswers.includes(answer.code)) {\r\n              suffix = {\r\n                ...suffix,\r\n                freeAnswer: true\r\n              }\r\n            }\r\n          }\r\n          if (logic.unique) {\r\n            if (logic.unique.includes(answer.code)) {\r\n              suffix = {\r\n                ...suffix,\r\n                unique: true\r\n              }\r\n            }\r\n          }\r\n          if (logic.difficult) {\r\n            if (logic.difficult.includes(answer.code)) {\r\n              suffix = {\r\n                ...suffix,\r\n                difficult: true\r\n              }\r\n            }\r\n          }\r\n          const newAnswer = {\r\n            ...answer,\r\n            ...suffix\r\n          }\r\n          return newAnswer\r\n        })\r\n        const newQuestion = {\r\n          ...question,\r\n          answers: newAnswers\r\n        }\r\n        return newQuestion\r\n      })\r\n      setQuestions(modQuestions)\r\n    }\r\n  }, [logic])\r\n\r\n\r\n  if (loading || !logic || !questions) return (\r\n    <Fragment>\r\n      <CircularProgress />\r\n      <p>Загрузка. Подождите пожалуйста</p>\r\n    </Fragment>\r\n  )\r\n\r\n  const testPoolChange = (e) => {\r\n    const val = e.currentTarget.value\r\n    if (val < 0) {\r\n      return\r\n    }\r\n    setCount(val)\r\n  }\r\n\r\n  const generateTestPool = () => {\r\n    const worksheetsCount = count\r\n    console.log(questions);\r\n    // freeAnswer\r\n    // freeAnswersPool\r\n    // unique\r\n    // criticalExclude\r\n    // difficult\r\n    for (let i = 0; i < worksheetsCount; i++) {\r\n      questions.map((question, index) => {\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container>\r\n        <h3>{poll.title}</h3>\r\n        <TextField\r\n          id=\"outlined-number\"\r\n          label=\"Number\"\r\n          type=\"number\"\r\n          value={count}\r\n          onChange={testPoolChange}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          variant=\"outlined\"\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" disabled={count ? false : true} onClick={generateTestPool}>\r\n          Генерировать\r\n        </Button>\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Generation","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Generation from './Generation'\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nconst PollResults = ({ id }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tabs\r\n        orientation=\"vertical\"\r\n        variant=\"scrollable\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        className={classes.tabs}\r\n      >\r\n        <Tab label=\"Общие\" {...a11yProps(0)} />\r\n        <Tab label=\"По Н.П.\" {...a11yProps(1)} />\r\n        <Tab label=\"Линейка\" {...a11yProps(2)} />\r\n        <Tab label=\"Сравнения\" {...a11yProps(3)} />\r\n        <Tab label=\"Графики\" {...a11yProps(4)} />\r\n        <Tab label=\"Пакетный\" {...a11yProps(5)} />\r\n        <Tab label=\"Тестирование\" {...a11yProps(6)} />\r\n      </Tabs>\r\n      <TabPanel value={value} index={0}>\r\n        Результаты опроса ID - {id}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        Распределение по населенным пунктам\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        Линейное распределение ответов\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        Сравнения с аналогичными опросами\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        Графики\r\n      </TabPanel>\r\n      <TabPanel value={value} index={5}>\r\n        Пакетный ВВод данных\r\n      </TabPanel>\r\n      <TabPanel value={value} index={6}>\r\n        <Generation id={id}/>\r\n      </TabPanel>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PollResults","import React, { Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport SettingBar from '../components/SettingBar'\r\nimport PollResults from '../modules/PollResults'\r\n\r\nconst Results = () => {\r\n  let { id, code } = useParams();\r\n\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title={`Результаты ` + code} />\r\n      <div style={{ paddingTop: '10px' }}>\r\n        <Container maxWidth=\"xl\">\r\n          <PollResults id={id} />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Results","function testXml(xmlString) {\r\n  var parser = new DOMParser();\r\n  var docError = parser.parseFromString('INVALID', 'text/xml');\r\n  var parsererrorNS = docError.getElementsByTagName(\"parsererror\")[0].namespaceURI;\r\n  var doc = parser.parseFromString(xmlString, 'text/xml');\r\n  if (doc.getElementsByTagNameNS(parsererrorNS, 'parsererror').length > 0) {\r\n    return false\r\n  }\r\n  return doc;\r\n}\r\n\r\nconst xmlparser = (xmlString) => {\r\n  const xml = testXml(xmlString)\r\n  if (xml) {\r\n    const results = xml.getElementsByTagName('a')\r\n    const lResults = results.length\r\n    let outData = []\r\n    for (let i = 0; i < lResults; i++) {\r\n      let resultData = {\r\n        unit: results[i].getAttribute('usr_intrv'),\r\n        date: results[i].getAttribute('date_intrv'),\r\n        lan: results[i].getAttribute('start-lan'),\r\n        lon: results[i].getAttribute('start-lon'),\r\n      }\r\n      const questions = results[i].getElementsByTagName('v')\r\n      const lQuestions = questions.length\r\n      let answersPool = []\r\n      for (let i = 0; i < lQuestions; i++) {\r\n        const answers = questions[i].getElementsByTagName('o')\r\n        const lAnswers = answers.length\r\n        for (let i = 0; i < lAnswers; i++) {\r\n          const code = answers[i].getAttribute('c').padStart(3, \"0\")\r\n          answersPool.push(code)\r\n        }\r\n        resultData.answers = answersPool\r\n      }\r\n      outData.push(resultData)\r\n    }\r\n    return outData\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nexport default xmlparser","import React, { Fragment, useState } from 'react'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport xmlparser from '../../lib/xmlparser'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst ParchaXmlAnalyzer = () => {\r\n  const [parchaData, setParchaData] = useState(null)\r\n  const [processing, setProcessing] = useState(false)\r\n  const classes = useStyles();\r\n\r\n  const handleInput = (e) => {\r\n    e.preventDefault()\r\n    setProcessing(true)\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    if (file) {\r\n      reader.onloadend = () => {\r\n        const xmlText = reader.result\r\n        const xml = xmlparser(xmlText)\r\n        if (xml) {\r\n          setParchaData(xml)\r\n          setProcessing(false)\r\n          return\r\n        } else {\r\n          setProcessing(false)\r\n          console.log('Неправильный формат XML');\r\n          return\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  const UnitInfo = ({ data }) => {\r\n    console.log(data);\r\n    if (data.lan !== '' || data.lon !== '') {\r\n      return data.answers.toString() + ',999'\r\n    } else {\r\n      return data.answers.toString() + ',999' + '-'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Backdrop className={classes.backdrop} open={processing} >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <input\r\n        type=\"file\"\r\n        onInput={handleInput}\r\n      />\r\n      <div className=\"parcha-results\">\r\n        {parchaData ?\r\n          parchaData.map((result, i) => (\r\n            <div>\r\n              { <UnitInfo data={result} />}\r\n            </div>\r\n          )) : <p>Подгрузите данные</p>\r\n        }\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ParchaXmlAnalyzer","import React, { Fragment } from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nconst WarShow = ({ data }) => {\r\n  return (\r\n    <Fragment>\r\n      <Grid container spacing={3}>\r\n        {data.map(({ person, places }, index) => {\r\n          const placesOfWork = places.map(({ title, workDays }) => {\r\n            const workD = workDays.map(d => <span><span>{d}</span><br /></span>)\r\n            return (\r\n              <span>\r\n                <span className=\"work-title\">{title}</span><br />\r\n                <span>{workD}</span>\r\n              </span>\r\n            )\r\n          })\r\n          return (\r\n            <Grid item xs={6} sm={6} md={4}>\r\n              <Paper>\r\n                <span>№ п.п. {index + 1}</span><br />\r\n                <span>№ по списку {person[0]}</span><br />\r\n                <span>{person[1]}</span><span className=\"person-name\">{`${person[2]} ${person[3]} ${person[4].slice(0, -1)} `}</span><br />\r\n                <span>{`${person[2]} ${person[3].substring(0, 1)}.${person[4].substring(0, 1)}. `}</span><br />\r\n                <span>Дата рождения: {person[5]}</span><br />\r\n                <span>Дата увольнения:</span><span className=\"person-out\"> {person[6]}</span>\r\n                <Divider />\r\n                <span className=\"work-header\"><em>Места работы:</em></span><br />\r\n                <span>{placesOfWork}</span>\r\n              </Paper>\r\n            </Grid>\r\n          )\r\n        })}\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default WarShow","export const pensParser = (text) => {\r\n  let empty = []\r\n  let need = []\r\n  let persons = []\r\n  const rr = text.split('\\n\\r')\r\n  const regEx = /нет сведен.., составляющ.. пенсионн.. прав.?/\r\n  for (let i = 0; i < rr.length; i++) {\r\n    if (regEx.test(rr[i])) {\r\n      let person = []\r\n      const splited = rr[i].split(' ')\r\n      person.push(splited[7], splited[8], splited[9], splited[10])\r\n      empty.push({\r\n        person,\r\n        data: null\r\n      })\r\n    } else {\r\n      let person = []\r\n      const splited = rr[i].split(' ')\r\n      person.push(splited[7], splited[8], splited[9], splited[10])\r\n      const full = rr[i]\r\n      need.push({\r\n        person,\r\n        data: full\r\n      })\r\n    }\r\n  }\r\n  const result = {\r\n    empty,\r\n    need\r\n  }\r\n  return result\r\n}\r\n\r\nexport const warior = (text) => {\r\n  let empty = []\r\n  let need = []\r\n  let persons = []\r\n  const rr = text.split('\\n')\r\n  for (let i = 0; i < rr.length; i++) {\r\n    let person = []\r\n    const splited = rr[i].split(';')\r\n    person.push(splited[0], splited[1], splited[2], splited[3], splited[4])\r\n    persons.push(person)\r\n  }\r\n  return persons\r\n}\r\n\r\nconst compareLists = (war, pens) => {\r\n  let doesNotMatch = []\r\n  let warMatchPool = []\r\n  // подсчет всех - просто промежуточные данные\r\n  const pensData = [...pens.empty, ...pens.need]\r\n  for (let i = 0; i < war.length; i++) {\r\n    const warPersonName = war[i][2]\r\n    const warPersonBorn = war[i][3]\r\n    const warPersonDismissal = war[i][4]\r\n    const warPersonSurname = warPersonName.split(' ')[0].toLowerCase()\r\n    let comp = 0\r\n    for (let j = 0; j < pensData.length; j++) {\r\n      const pensPersonSurname = pensData[j].person[0].toLowerCase()\r\n      const pensPersonBorn = pensData[j].person[3]\r\n      if (warPersonSurname === pensPersonSurname & warPersonBorn === pensPersonBorn) {\r\n        comp++\r\n      }\r\n    }\r\n    if (comp) {\r\n      warMatchPool.push(war[i])\r\n    } else {\r\n      doesNotMatch.push(war[i])\r\n    }\r\n  }\r\n  // вычисление и склеивание только нужных персон\r\n  const pensNeedData = [...pens.need]\r\n  let resulNeedData = []\r\n  let resultNotNeedData = []\r\n  for (let i = 0; i < warMatchPool.length; i++) {\r\n    const warPersonNum = warMatchPool[i][0]\r\n    const warPersonRank = warMatchPool[i][1]\r\n    const warPersonName = warMatchPool[i][2]\r\n    const warPersonBorn = warMatchPool[i][3]\r\n    const warPersonDismissal = warMatchPool[i][4]\r\n    const warPersonSurname = warPersonName.split(' ')[0].toLowerCase()\r\n    let comp = 0\r\n    for (let j = 0; j < pensNeedData.length; j++) {\r\n      const pensPersonSurname = pensNeedData[j].person[0].toLowerCase()\r\n      const pensPersonBorn = pensNeedData[j].person[3]\r\n      if (warPersonSurname === pensPersonSurname & warPersonBorn === pensPersonBorn) {\r\n        const persD = [warPersonNum, warPersonRank, ...pensNeedData[j].person, warPersonDismissal]\r\n        resulNeedData.push({\r\n          person: persD,\r\n          data: pensNeedData[j].data\r\n        })\r\n        comp++\r\n      }\r\n    }\r\n    if (!comp) {\r\n      // В/сл по которым нет сведения в пенсионном фонде\r\n      const person = [warPersonNum, warPersonRank, warPersonName, warPersonBorn, warPersonDismissal]\r\n      resultNotNeedData.push(\r\n        person\r\n      )\r\n    }\r\n  }\r\n  return resulNeedData\r\n}\r\n\r\nexport const processLists = (war, pens) => {\r\n  const resulNeedData = compareLists(war, pens)\r\n  let aLength = resulNeedData.length\r\n  // let aLength = 4\r\n  const regEx = /Факт работы \\(с 2017/;\r\n  let normalize = []\r\n  let sheeet = []\r\n  let finalResult = []\r\n  for (let i = 0; i < aLength; i++) {\r\n    const personData = resulNeedData[i]\r\n    const person = personData.person\r\n    const places = personData.data\r\n    const splited = places.split('\\n').slice(3)\r\n    // if (!regEx.test(splited[0])) {\r\n    //   console.log(person);\r\n    // }\r\n    finalResult.push({\r\n      person,\r\n      places: [...glueNormData(splited.slice(1))]\r\n    })\r\n  }\r\n  return finalResult\r\n}\r\n\r\nexport const compareDates = (data) => {\r\n  const intrestPersons = data.map((obj, index) => {\r\n    const dateReg = /^(\\d{2}).(\\d{2}).(\\d{4})/\r\n    const dateOfDismissal = Date.parse(obj.person[6].replace(dateReg, '01.$2.$3'))\r\n    const dateMatch = obj.person[6].match(dateReg)\r\n    const maxNeedDate = Date.parse('01.' + dateMatch[2] + '.' + (parseInt(dateMatch[3], 10) + + 2))\r\n    const places = obj.places\r\n    let placesOfWork = []\r\n    for (let i = 0; i < places.length; i++) {\r\n      const workDate = places[i].work\r\n      let workArray = []\r\n      for (let j = 0; j < workDate.length; j++) {\r\n        const dateInWork = Date.parse(getDateFromString(workDate[j]))\r\n        if (dateInWork >= dateOfDismissal & dateInWork <= maxNeedDate) {\r\n          workArray.push(workDate[j])\r\n        }\r\n      }\r\n      if (workArray.length) {\r\n        placesOfWork.push({\r\n          title: places[i].title,\r\n          workDays: workArray\r\n        })\r\n      }\r\n    }\r\n    if (placesOfWork.length) {\r\n      return { ...obj, places: placesOfWork }\r\n    } else {\r\n      return false\r\n    }\r\n  }).filter(person => person)\r\n  return intrestPersons\r\n}\r\n\r\nconst getDateFromString = (dString) => {\r\n  const reg = /([а-яА-Я]+)\\s(\\d{4})/\r\n  const dd = dString.match(reg)\r\n  const month = dd[1]\r\n  const year = dd[2]\r\n  switch (month) {\r\n    case 'январь':\r\n      return '01.01.' + year\r\n    case 'февраль':\r\n      return '01.02.' + year\r\n    case 'март':\r\n      return '01.03.' + year\r\n    case 'апрель':\r\n      return '01.04.' + year\r\n    case 'май':\r\n      return '01.05.' + year\r\n    case 'июнь':\r\n      return '01.06.' + year\r\n    case 'июль':\r\n      return '01.07.' + year\r\n    case 'август':\r\n      return '01.08.' + year\r\n    case 'сентябрь':\r\n      return '01.09.' + year\r\n    case 'октябрь':\r\n      return '01.10.' + year\r\n    case 'ноябрь':\r\n      return '01.11.' + year\r\n    case 'декабрь':\r\n      return '01.12.' + year\r\n  }\r\n}\r\n\r\nconst glueNormData = (placesRaw) => {\r\n  let places = []\r\n  let dates = 1\r\n  let title = ''\r\n  let work = []\r\n  const dataReg = /^(\\S+) (\\d{4})\\s/\r\n  // обработка данных от ПФР\r\n  for (let k = 0; k < placesRaw.length; k++) {\r\n    if (!dataReg.test(placesRaw[k])) {\r\n      if (dates) {\r\n        places = [...places, { title, work }]\r\n        title = placesRaw[k]\r\n        work = []\r\n      } else {\r\n        title += \" \" + placesRaw[k]\r\n      }\r\n      dates = 0\r\n    } else {\r\n      work.push(placesRaw[k])\r\n      if (k === placesRaw.length - 1) {\r\n        places = [...places, { title, work }]\r\n      }\r\n      dates = 1\r\n    }\r\n  }\r\n  return places.slice(1)\r\n}\r\n\r\n\r\n// уже не надо\r\nconst glueSheetData = (placesRaw) => {\r\n  let places = []\r\n  let dates = 1\r\n  let title = ''\r\n  let work = []\r\n  const dataReg = /\\d{2}.\\d{2}.\\d{4}-\\d{2}.\\d{2}.\\d{4}/\r\n  const dataRegEx = /^(\\S+) (\\d{4})\\s/\r\n  // обработка данных от ПФР\r\n  for (let k = 0; k < placesRaw.length; k++) {\r\n    if (!dataReg.test(placesRaw[k]) & !dataRegEx.test(placesRaw[k])) {\r\n      if (dates) {\r\n        places = [...places, { title, work }]\r\n        title = placesRaw[k]\r\n        work = []\r\n      } else {\r\n        title += \" \" + placesRaw[k]\r\n      }\r\n      dates = 0\r\n    } else {\r\n      work.push(placesRaw[k])\r\n      if (k === placesRaw.length - 1) {\r\n        places = [...places, { title, work }]\r\n      }\r\n      dates = 1\r\n    }\r\n  }\r\n\r\n  // нормализовать даты\r\n  const workDates = places.map(obj => {\r\n    const workArray = obj.work\r\n    for (let i = 0; i < workArray.length; i++) {\r\n      if (dataReg.test(workArray[i])) {\r\n        console.log(workArray[i]);\r\n      }\r\n    }\r\n    return obj\r\n  })\r\n\r\n  return places.slice(1)\r\n}","import React, { Fragment, useState } from 'react'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport WarShow from '../WarShow'\r\nimport CsvShow from '../CsvShow'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { pensParser, warior, processLists, compareDates } from '../../lib/txtparser'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst WordAnalyzer = () => {\r\n  const [pensData, setPensData] = useState(null)\r\n  const [warData, setWarData] = useState(null)\r\n  const [processing, setProcessing] = useState(false)\r\n  const [errorMessage, setMessage] = useState(null)\r\n  const [ready, setReady] = useState(null)\r\n  const [processedData, setProcessedData] = useState(null)\r\n  const [finalData, setFinalData] = useState(null)\r\n  const classes = useStyles();\r\n\r\n  const handleInput = (e) => {\r\n    e.preventDefault()\r\n    setMessage(null)\r\n    setProcessing(true)\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    if (file) {\r\n      reader.onloadend = () => {\r\n        const wordText = reader.result\r\n        const data = pensParser(wordText)\r\n        setPensData(data)\r\n        setProcessing(false)\r\n      }\r\n    }\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  const handleWarInput = (e) => {\r\n    e.preventDefault()\r\n    setMessage(null)\r\n    setProcessing(true)\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    if (file) {\r\n      reader.onloadend = () => {\r\n        const wordText = reader.result\r\n        const data = warior(wordText)\r\n        setWarData(data)\r\n        setProcessing(false)\r\n      }\r\n    }\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  const process = () => {\r\n    if (pensData && warData) {\r\n      setMessage(null)\r\n      const pData = processLists(warData, pensData)\r\n      setProcessedData(pData)\r\n      setReady(true)\r\n    } else {\r\n      setMessage('Не все данные подгружены')\r\n    }\r\n  }\r\n\r\n  const processEx = () => {\r\n    if (ready) {\r\n      const itrestPerson = compareDates(processedData)\r\n      console.log(itrestPerson);\r\n      setFinalData(itrestPerson)\r\n    } else {\r\n      if (pensData && warData) {\r\n        setMessage('Сперва нужно обработать')\r\n      } else {\r\n        setMessage('Не все данные подгружены')\r\n      }\r\n    }\r\n  }\r\n\r\n  const UnitInfo = ({ data }) => {\r\n    console.log(data);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Backdrop className={classes.backdrop} open={processing} >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs>\r\n          <Box>\r\n            <label>Список военных</label>\r\n            <br />\r\n            <input\r\n              type=\"file\"\r\n              onInput={handleWarInput}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Box>\r\n            <label>Список песионного фонда</label>\r\n            <br />\r\n            <input\r\n              type=\"file\"\r\n              onInput={handleInput}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={3}>\r\n        <Grid item>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={process}>\r\n            Обработать\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={processEx}>\r\n            Сравнить даты\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <p></p>\r\n      {errorMessage ?\r\n        <Alert severity=\"error\">{errorMessage}</Alert>\r\n        :\r\n        <p></p>\r\n      }\r\n      <div className=\"parcha-results\">\r\n        {finalData ?\r\n          <WarShow data={finalData} />\r\n          : <p></p>\r\n        }\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default WordAnalyzer","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport ParchaXmlAnalyzer from './components/ParchaXmlAnalyzer'\r\nimport WordAnalyzer from './components/WordAnalyzer'\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      className=\"right-pannel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction allProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n    overflow: 'visible'\r\n  },\r\n}));\r\n\r\n\r\nconst PollSettings = ({ id, code }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tabs\r\n        orientation=\"vertical\"\r\n        variant=\"scrollable\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        className={classes.tabs}\r\n      >\r\n        <Tab label=\"Парча\" {...allProps(0)} />\r\n        <Tab label=\"Word\" {...allProps(1)} />\r\n      </Tabs>\r\n      <TabPanel value={value} index={0}>\r\n        <ParchaXmlAnalyzer />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <WordAnalyzer />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PollSettings","import React, { Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport SettingBar from '../components/SettingBar'\r\nimport DataAnalyzer from '../modules/DataAnalyzer'\r\n\r\nconst Analyze = () => {\r\n  let { id } = useParams();\r\n\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title={`Анализатор данных`} />\r\n      <div style={{ paddingTop: '10px' }}>\r\n        <Container maxWidth=\"xl\">\r\n          <DataAnalyzer />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Analyze","import React, { Fragment, useState, useEffect } from 'react'\r\nimport DevTools from 'mobx-react-devtools'\r\nimport { observable } from 'mobx'\r\nimport { observer } from 'mobx-react'\r\n\r\nconst Test = observer(() => {\r\n  const [timerData] = useState(() =>\r\n    observable({\r\n      secondsPassed: 0,\r\n    })\r\n  )\r\n  useEffect(() => {\r\n    const handle = setInterval(() => {\r\n      timerData.secondsPassed++\r\n    }, 1000)\r\n    return () => {\r\n      clearTimeout(handle)\r\n    }\r\n  }, [])\r\n\r\n\r\n  const Border = ({ children, color }) => {\r\n    return (\r\n      <div className={\"test-nested-\" + color}>{children}</div>\r\n    )\r\n\r\n  }\r\n\r\n  return (\r\n    <Border color=\"green\">\r\n      <span>Seconds passed: {timerData.secondsPassed} </span>\r\n    </Border>\r\n  )\r\n})\r\n\r\nexport default Test","import React, { Fragment } from 'react'\r\nimport Container from '@material-ui/core/Container';\r\nimport { observer } from 'mobx-react'\r\n\r\nimport SettingBar from '../components/SettingBar'\r\nimport Test from '../containers/Test'\r\n\r\n// const Tester = observer(\r\nconst Tester = () => {\r\n\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title='Тестирование инерфейса' />\r\n      <Container maxWidth=\"lg\">\r\n        <Test />\r\n      </Container>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Tester","import { gql } from '@apollo/client'\r\n\r\nexport const GET_POLL_DATA = gql`\r\n  query pollQuery($id: ID!) {\r\n    poll(id: $id) {\r\n      id\r\n      title\r\n      code\r\n      liter\r\n      questionsCount\r\n      answersCount\r\n      questions {\r\n        id\r\n        title\r\n        limit\r\n        order\r\n        answers {\r\n          id\r\n          title\r\n          order\r\n          code\r\n        }\r\n      }\r\n      logic {\r\n        path\r\n      }\r\n    }\r\n  }\r\n`","import React, { Fragment, useState, useEffect } from 'react'\r\nimport {mainUrl} from '../../../../mainconfig'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\r\n\r\nimport { parseIni, normalizeLogic } from '../../../../containers/DriveWrap/lib/utils'\r\nimport { useQuery } from '@apollo/client'\r\n\r\nimport { GET_POLL_DATA } from \"./queries\"\r\n\r\nconst ServiceIcons = ({ answer }) => {\r\n  const edit = (\r\n    <Tooltip title=\"Свободный ответ\">\r\n      <EditIcon />\r\n    </Tooltip>\r\n  )\r\n  const difficult = (\r\n    <Tooltip title=\"Затрудняюсь ответить\">\r\n      <EmojiPeopleIcon />\r\n    </Tooltip>\r\n  )\r\n  const unique = (\r\n    <Tooltip title=\"Уникальный ответ\">\r\n      <FlashOnIcon />\r\n    </Tooltip>\r\n  )\r\n  let r = []\r\n  if (answer.difficult) {\r\n    r.push(difficult)\r\n  }\r\n  if (answer.freeAnswer) {\r\n    r.push(edit)\r\n  }\r\n  if (answer.unique) {\r\n    r.push(unique)\r\n  }\r\n  return r\r\n}\r\n\r\nconst AnswerCard = ({ answer, index }) => {\r\n  return (\r\n    <div className={answer.disabled ? \"answer-card invisible\" : \"answer-card\"}>\r\n      <span className=\"answer-number\">{index + 1}.</span>\r\n      <span className=\"devider\"> </span>\r\n      <span className=\"answer-code\">{answer.code}</span>\r\n      <span className=\"devider\"> - </span>\r\n      <span className=\"answer-title\">{answer.title}</span>\r\n      <span className=\"answer-extend\">\r\n        <ServiceIcons answer={answer} />\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst QuestionCard = ({ question, index }) => {\r\n\r\n  return (\r\n    <Card className=\"question-card\">\r\n      <CardContent>\r\n        <div className=\"question-header\">\r\n          <Tooltip title=\"Макс. кол-во ответов\">\r\n            <span className=\"question-limit\">{question.limit}</span>\r\n          </Tooltip>\r\n          <span className=\"question-number\">{index + 1}. </span>\r\n          <span className=\"question-title\" color=\"textSecondary\" gutterBottom>\r\n            {question.title}\r\n          </span>\r\n        </div>\r\n        {question.answers.map((answer, index) => (\r\n          <AnswerCard key={index} answer={answer} index={index} />\r\n        ))}\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst CommonSetting = ({ id }) => {\r\n  const [poll, setPoll] = useState(null)\r\n  const [questions, setQuestions] = useState(null)\r\n  const [logic, setLogic] = useState(null)\r\n  const { loading, error, data } = useQuery(GET_POLL_DATA, {\r\n    variables: { id },\r\n    onCompleted: () => {\r\n      setPoll({\r\n        id: data.poll.id,\r\n        title: data.poll.title,\r\n        questionsCount: data.poll.questionsCount,\r\n        answersCount: data.poll.answersCount\r\n      })\r\n      handleConfigFile(data.poll.logic.path)\r\n    }\r\n  })\r\n\r\n  const handleConfigFile = (filePath) => {\r\n    fetch(mainUrl + filePath)\r\n      .then((r) => r.text())\r\n      .then(text => {\r\n        const logic = parseIni(text)\r\n        // Нормализация ЛОГИКИ - здесь формируется ЛОГИКА опроса, на основании конфиг файла !!!\r\n        const mainLogic = normalizeLogic(logic)\r\n        setLogic(mainLogic)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (logic) {\r\n      const modQuestions = data.poll.questions.map((question, index) => {\r\n        const newAnswers = question.answers.map((answer, index) => {\r\n          let suffix = {}\r\n          if (logic.invisible) {\r\n            if (logic.invisible.includes(answer.code)) {\r\n              suffix = {\r\n                ...suffix,\r\n                disabled: true\r\n              }\r\n            }\r\n          }\r\n          if (logic.freeAnswers) {\r\n            if (logic.freeAnswers.includes(answer.code)) {\r\n              suffix = {\r\n                ...suffix,\r\n                freeAnswer: true\r\n              }\r\n            }\r\n          }\r\n          if (logic.unique) {\r\n            if (logic.unique.includes(answer.code)) {\r\n              suffix = {\r\n                ...suffix,\r\n                unique: true\r\n              }\r\n            }\r\n          }\r\n          if (logic.difficult) {\r\n            if (logic.difficult.includes(answer.code)) {\r\n              suffix = {\r\n                ...suffix,\r\n                difficult: true\r\n              }\r\n            }\r\n          }\r\n          const newAnswer = {\r\n            ...answer,\r\n            ...suffix\r\n          }\r\n          return newAnswer\r\n        })\r\n        const newQuestion = {\r\n          ...question,\r\n          answers: newAnswers\r\n        }\r\n        return newQuestion\r\n      })\r\n      setQuestions(modQuestions)\r\n    }\r\n  }, [logic])\r\n\r\n\r\n  if (loading || !logic || !questions) return (\r\n    <Fragment>\r\n      <CircularProgress />\r\n      <p>Загрузка. Подождите пожалуйста</p>\r\n    </Fragment>\r\n  )\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container>\r\n        <h3>{poll.title}</h3>\r\n        <Grid\r\n          className=\"poll-info\"\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Box m={1}>\r\n            <div> Вопросов: {poll.questionsCount}</div>\r\n          </Box>\r\n          <Box m={1}>\r\n            <div> Ответов: {poll.answersCount}</div>\r\n          </Box>\r\n        </Grid>\r\n        {questions.map((question, index) => (\r\n          <QuestionCard question={question} key={index} index={index} />\r\n        ))}\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default CommonSetting","import { gql } from '@apollo/client'\r\n\r\nexport const logicQuery = gql`\r\n  query logicQuery($id: ID!) {\r\n    pollLogic(id: $id) {\r\n      id\r\n      path\r\n    }\r\n  }\r\n`\r\n\r\nexport const saveConfigChanges = gql`\r\nmutation saveConfigChanges($path: String!, $text: String!) {\r\n  saveConfig(path: $path, text: $text)\r\n}\r\n`","import React, { Fragment, useState, useRef } from 'react'\r\nimport { mainUrl } from '../../../../mainconfig'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { useQuery } from '@apollo/client'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { logicQuery, saveConfigChanges } from \"./queries\"\r\n\r\n\r\nconst ConfigEditor = ({ id }) => {\r\n  const [config, setConfig] = useState(null)\r\n  const [filePath, setFilePath] = useState(null)\r\n  const textRef = useRef()\r\n  const { loading, error, data, refetch } = useQuery(logicQuery, {\r\n    variables: { id },\r\n    onCompleted: () => {\r\n      handleConfigFile(data.pollLogic.path)\r\n    }\r\n  })\r\n\r\n  const [saveConfig] = useMutation(saveConfigChanges, {\r\n  })\r\n\r\n  const handleConfigFile = (filePath) => {\r\n    setFilePath(filePath)\r\n    fetch(mainUrl + filePath)\r\n      .then((r) => r.text())\r\n      .then(text => {\r\n        setConfig(text)\r\n      })\r\n  }\r\n\r\n  const handleSave = (e) => {\r\n    saveConfig({\r\n      variables: {\r\n        path: filePath,\r\n        text: textRef.current.value\r\n      }\r\n    })\r\n  }\r\n\r\n  if (loading || !config) return (\r\n    <Fragment>\r\n      <CircularProgress />\r\n      <p>Загрузка. Подождите пожалуйста</p>\r\n    </Fragment>\r\n  )\r\n\r\n  if (error) return <p>Ошибка. Что-то пошло не так! :(</p>;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={12} sm container>\r\n        <Grid container>\r\n          <Grid item xs container direction=\"column\" spacing={2} alignItems=\"flex-start\">\r\n            <Grid item xs={12}>\r\n              Отображение и настройка конфигурационного файла\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs container direction=\"column\" spacing={1} alignItems=\"flex-end\">\r\n            <Grid item xs={12}>\r\n              <Tooltip title=\"Сохранить\">\r\n                <SaveIcon className=\"save-config\" onClick={handleSave} />\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <textarea\r\n              ref={textRef}\r\n              defaultValue={config}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ConfigEditor","import React, { useState } from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst QuestionCard = ({ question, handleLimitInput }) => {\r\n  const [val, setVal] = useState(question.limit)\r\n\r\n  const handleKeyUp = (e) => {\r\n    if (e.keyCode === 13) e.currentTarget.blur()\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const currentValue = e.currentTarget.value\r\n    console.log(e);\r\n    if (currentValue < 1) {\r\n      setVal(1)\r\n    } else if (currentValue > 99) {\r\n      setVal(99)\r\n    } else {\r\n      setVal(currentValue)\r\n    }\r\n  }\r\n\r\n  const handleBlur = (e) => {\r\n    handleLimitInput({\r\n      id: question.id,\r\n      limit: val\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6} lg={3} xl={2}>\r\n      <Paper className=\"question-item\" elevation={2}>\r\n        <Grid item xs={12} sm container>\r\n          <Grid item xs container direction=\"column\" spacing={2} alignItems=\"flex-start\">\r\n            <Grid item xs>\r\n              <Tooltip title=\"Очередность отображения\" aria-label=\"add\">\r\n                <Typography variant=\"body2\" color=\"primary\">\r\n                  {question.order}\r\n                </Typography>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs container direction=\"column\" spacing={3} alignItems=\"flex-end\" >\r\n            <Grid item xs alignItems=\"center\" style={{ cursor: 'pointer' }}>\r\n              <Tooltip title=\"Меню. В разработке\" aria-label=\"add\">\r\n                <MoreVertIcon />\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Tooltip title=\"Лимит ответов\" aria-label=\"add\">\r\n              <input\r\n                type=\"number\"\r\n                className=\"question-limit-input\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                onKeyUp={handleKeyUp}\r\n                value={val}\r\n              />\r\n            </Tooltip>\r\n          </Grid>\r\n        </Grid>\r\n        <Typography className=\"question-title\">{question.title}</Typography>\r\n\r\n      </Paper>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default QuestionCard","import { gql } from '@apollo/client'\r\n\r\nexport const pollQuery = gql`\r\n  query pollQuery($id: ID!) {\r\n    poll(id: $id) {\r\n      id\r\n      title\r\n      code\r\n      liter\r\n      questions {\r\n        id\r\n        title\r\n        limit\r\n        order\r\n        answers {\r\n          id\r\n          title\r\n          order\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const saveNewLimit = gql`\r\nmutation saveNewLimit($id: ID!, $limit: Int!) {\r\n  newLimit(id: $id, limit: $limit)\r\n}\r\n`\r\n\r\nexport const saveNewOrder = gql`\r\nmutation saveNewOrder($questions: [ReorderedArray]) {\r\n  newOrder(neworder: $questions)\r\n}\r\n`","import React, { Fragment, useState } from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useQuery } from '@apollo/client'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\r\nimport arrayMove from \"array-move\";\r\n\r\nimport QuestionCard from '../QuestionCard'\r\nimport { pollQuery, saveNewLimit, saveNewOrder } from \"./queries\"\r\n\r\n\r\nconst ReoderEditor = ({ id }) => {\r\n  const [questions, setQuestions] = useState(null)\r\n  const [prevOrder, setPrevOrder] = useState(null)\r\n  const { loading, error, data, refetch } = useQuery(pollQuery, {\r\n    variables: { id },\r\n    onCompleted: () => setQuestions(data.poll.questions)\r\n  })\r\n  const [saveLimit] = useMutation(saveNewLimit, {\r\n    // TODO: refetchQueries -> Обновить PollDrive cache!!!\r\n\r\n    // onCompleted: (answer) => console.log(answer)\r\n    // TODO: \"При ОШИБКЕ -> оповещения и восстановления!\"\r\n  })\r\n  const [saveOrder] = useMutation(saveNewOrder, {\r\n    // TODO: refetchQueries -> Обновить PollDrive cache!!!\r\n\r\n    // onCompleted: (answer) => console.log(answer)\r\n    // TODO: \"При ОШИБКЕ -> оповещения и восстановления!\"\r\n  })\r\n\r\n  if (loading || !questions) return (\r\n    <Fragment>\r\n      <CircularProgress />\r\n      <p>Загрузка. Подождите пожалуйста</p>\r\n    </Fragment>\r\n  )\r\n\r\n  if (error) return <p>Ошибка. Что-то пошло не так! :(</p>;\r\n\r\n  const handleLimitInput = (inputData) => {\r\n    const id = inputData.id\r\n    const limit = +inputData.limit\r\n    setQuestions(questions.map(question => question.id === id ? { ...question, limit: limit } : question))\r\n    saveLimit({\r\n      variables: {\r\n        id,\r\n        limit\r\n      }\r\n    })\r\n  }\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    setPrevOrder({ ...questions })\r\n    const newArray = arrayMove(questions, oldIndex, newIndex)\r\n    let deltaArray = []\r\n    const newOrder = newArray.reduce((acum, val, index) => {\r\n      if (val.order === index + 1) {\r\n        acum.push(val)\r\n      } else {\r\n        deltaArray.push({\r\n          id: val.id,\r\n          order: index + 1\r\n        })\r\n        acum.push({ ...val, order: index + 1 })\r\n      }\r\n      return acum\r\n    }, [])\r\n    saveOrder({\r\n      variables: {\r\n        questions: deltaArray\r\n      }\r\n    })\r\n    setQuestions(newOrder)\r\n  };\r\n\r\n  const SortableItem = SortableElement(({ question }) =>\r\n    <QuestionCard question={question} handleLimitInput={handleLimitInput} />\r\n  );\r\n\r\n  const SortableList = SortableContainer(({ questions }) => {\r\n    return (\r\n      <Grid container item xs={12} spacing={2}>\r\n        {questions.map((question, index) => (\r\n          <SortableItem key={`item-${question.id}`} index={index} question={question} />\r\n        ))}\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <SortableList\r\n        questions={questions}\r\n        onSortEnd={onSortEnd}\r\n        axis=\"xy\"\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ReoderEditor","import { gql } from '@apollo/client'\r\n\r\nexport const deletePoll = gql`\r\n  mutation deletePoll($id: ID!) {\r\n    deletePoll(id: $id) {\r\n      title\r\n    }\r\n  }\r\n`","import React, { Fragment, useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { pollsQuery } from '../../../../containers/HomeWrap/queries'\r\nimport { deletePoll } from './mutations'\r\n\r\nconst DeletePoll = ({ id, code }) => {\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false)\r\n  const [incorrect, setIncorrect] = useState(true)\r\n  const [delPoll, { poll }] = useMutation(deletePoll, {\r\n    onCompleted: () => {\r\n      history.push(\"/\")\r\n    }\r\n  })\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handlePollDel = (id) => {\r\n    delPoll({\r\n      variables: {\r\n        id\r\n      },\r\n      refetchQueries: [{ query: pollsQuery }]\r\n    })\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const text = e.currentTarget.value.toUpperCase()\r\n    e.currentTarget.value = text\r\n    if (text.toUpperCase() === code) {\r\n      setIncorrect(false)\r\n    } else {\r\n      setIncorrect(true)\r\n    }\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    handlePollDel(id)\r\n  }\r\n\r\n  const deleteQuery = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Удаление</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Это действие не может быть отменено.\r\n              Оно приведет к безвозвратному удалению ВСЕХ данных опроса.\r\n            </Typography>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              Пожалуйста, введите КОД опроса.\r\n            </Typography>\r\n          </DialogContentText>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Код опроса\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={handleChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={handleDelete} color=\"primary\" disabled={incorrect}>\r\n            Удалить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Grid item container xs={12}>\r\n        <Grid >\r\n          <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n            удаление опроса\r\n        </Typography>\r\n          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n            После удаления ОПРОСА пути назад уже не будет. Пожалуйста, будьте внимательны.\r\n          </Typography>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={deleteQuery}>\r\n            Удалить опрос\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default DeletePoll","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport CommonSetting from './components/Common'\r\nimport ConfigEditor from './components/ConfigEditor'\r\nimport ReoderEditor from './components/ReoderEditor';\r\nimport DeletePoll from './components/DeletePoll'\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      className=\"right-pannel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction allProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n    overflow: 'visible'\r\n  },\r\n}));\r\n\r\n\r\nconst PollSettings = ({ id, code }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tabs\r\n        orientation=\"vertical\"\r\n        variant=\"scrollable\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        className={classes.tabs}\r\n      >\r\n        <Tab label=\"Общие\" {...allProps(0)} />\r\n        <Tab label=\"Порядок отображения\" {...allProps(1)} />\r\n        <Tab label=\"Конфиг\" {...allProps(2)} />\r\n        <Tab label=\"Удаление\" {...allProps(3)} />\r\n      </Tabs>\r\n      <TabPanel value={value} index={0}>\r\n        <CommonSetting id={id} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <ReoderEditor id={id} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <ConfigEditor id={id} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <DeletePoll id={id} code={code} />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PollSettings","import React, { Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container';\r\nimport SettingBar from '../components/SettingBar'\r\nimport PollSettings from '../modules/PollSettings'\r\n\r\nconst Settings = () => {\r\n  let { id, code } = useParams();\r\n\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title={`Настройки опроса ` + code} />\r\n      <div style={{ paddingTop: '10px' }}>\r\n        <Container maxWidth=\"xl\">\r\n          <PollSettings id={id} code={code} />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Settings","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nconst PollFiles = ({ id }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tabs\r\n        orientation=\"vertical\"\r\n        variant=\"scrollable\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        className={classes.tabs}\r\n      >\r\n        <Tab label=\"Файлы\" {...a11yProps(0)} />\r\n      </Tabs>\r\n      <TabPanel value={value} index={0}>\r\n        Файлы опроса - {id}\r\n        <p>В РАЗРАБОТКЕ</p>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PollFiles","import React, { Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport SettingBar from '../components/SettingBar'\r\nimport PollFiles from '../modules/PollFiles'\r\n\r\nconst Attachment = () => {\r\n  let { id, code } = useParams();\r\n\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title={`Файлы ` + code} />\r\n      <div style={{ paddingTop: '10px' }}>\r\n        <Container maxWidth=\"xl\">\r\n          <PollFiles id={id} />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Attachment","import React, { Fragment } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst PollWiki = () => {\r\n  return (\r\n    <Fragment>\r\n      <Grid container item>\r\n        WIKI\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PollWiki","import React, { Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport SettingBar from '../components/SettingBar'\r\nimport PollWiki from '../modules/PollWiki'\r\n\r\nconst Wiki = () => {\r\n  let { id, code } = useParams();\r\n\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title={`Wiki ` + code} />\r\n      <Container maxWidth=\"lg\">\r\n        <PollWiki />\r\n      </Container>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Wiki","import { gql } from '@apollo/client'\r\n\r\nexport const GET_ALL_CITIES = gql`\r\n  query citiesQuery{\r\n    cities{\r\n      id\r\n      title\r\n    }\r\n  }\r\n`","import React, { Fragment, useState } from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { useQuery } from '@apollo/client'\r\n\r\nimport { GET_ALL_CITIES } from './quesries'\r\n\r\nconst Cities = () => {\r\n  const { loading, error, data } = useQuery(GET_ALL_CITIES)\r\n  const [cityAdd, setCityAdd] = useState(false)\r\n\r\n  const CityCard = ({ city }) => {\r\n    return (\r\n      <p>{city.title}</p>\r\n    )\r\n  }\r\n\r\n  const CityAdd = ({ save, close }) => {\r\n    const saveData = () => {\r\n      save()\r\n    }\r\n\r\n    const citiesCategoris = [\r\n      {\r\n        value: 'c001',\r\n        label: 'город с численностью более 1 млн чел.'\r\n      },\r\n      {\r\n        value: 'c002',\r\n        label: 'город с численностью от 500 тыс. чел. до 1 млн чел.'\r\n      },\r\n      {\r\n        value: 'c003',\r\n        label: 'город с численностью от 100 до 500 тыс. чел.'\r\n      },\r\n      {\r\n        value: 'c004',\r\n        label: 'город с численностью от 50 до 100 тыс. чел.'\r\n      },\r\n      {\r\n        value: 'c005',\r\n        label: 'город с численностью до 50 тыс. чел., посёлок городского типа'\r\n      },\r\n      {\r\n        value: 'c006',\r\n        label: 'сельский населённый пункт'\r\n      }\r\n    ]\r\n\r\n    return (\r\n      <Fragment>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <TextField required label=\"Название\" />\r\n          <TextField\r\n            label=\"Численность населения\"\r\n            type=\"number\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            select\r\n            label=\"Native select\"\r\n            SelectProps={{\r\n              native: true,\r\n            }}\r\n            helperText=\"Please select your currency\"\r\n          >\r\n            {citiesCategoris.map((option) => (\r\n              <option key={option.value} value={option.value}>\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <button onClick={close}>Close</button>\r\n        <button onClick={saveData}>Save</button>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  const handleAdd = () => {\r\n    setCityAdd(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setCityAdd(false)\r\n  }\r\n\r\n  const handleSave = (data) => {\r\n    console.log('Города - ', data);\r\n    setCityAdd(false)\r\n  }\r\n\r\n  if (loading || !data) return (\r\n    <Fragment>\r\n      <CircularProgress />\r\n      <p>Загрузка. Подождите пожалуйста</p>\r\n    </Fragment>\r\n  )\r\n\r\n  return (\r\n    <span>\r\n      <p>Города проведения опросов</p>\r\n      {!cityAdd &&\r\n        <button onClick={handleAdd}>Add</button>\r\n      }\r\n      <span>\r\n        {cityAdd &&\r\n          <CityAdd save={handleSave} close={handleClose} />\r\n        }\r\n        {data.cities.map((city, index) => (\r\n          <CityCard city={city} key={index} />\r\n        ))}\r\n      </span>\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default Cities","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Cities from './components/Cities'\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      className=\"right-pannel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction allProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n    overflow: 'visible'\r\n  },\r\n}));\r\n\r\n\r\nconst PollAppSettings = () => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tabs\r\n        orientation=\"vertical\"\r\n        variant=\"scrollable\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        className={classes.tabs}\r\n      >\r\n        <Tab label=\"Города\" {...allProps(0)} />\r\n      </Tabs>\r\n      <TabPanel value={value} index={0}>\r\n        <Cities />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PollAppSettings","import React, { Fragment } from 'react'\r\nimport Container from '@material-ui/core/Container';\r\nimport SettingBar from '../components/SettingBar'\r\nimport PollAppSettings from '../modules/PollAppSettings'\r\n\r\nconst PollAppSettingsPage = () => {\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title={`Настройки подсистемы`} />\r\n      <div style={{ paddingTop: '10px' }}>\r\n        <Container maxWidth=\"xl\">\r\n          <PollAppSettings />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PollAppSettingsPage","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\n\r\nimport {\r\n  HomePage, DrivePage, ResultsPage, AnalyzePage, SettingsPage, \r\n  TesterPage, AttachmentPage, WikiPage, PollAppSettingsPage\r\n} from '../../pages'\r\n\r\nconst Router = () => {\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path={\"/\"} exact component={HomePage} />\r\n        <Route path={\"/results/:id/:code\"} component={ResultsPage} />\r\n        <Route path={\"/poll-settings/:id/:code\"} component={SettingsPage} />\r\n        <Route path={\"/drive/:id/:code\"} component={DrivePage} />\r\n        <Route path={\"/analyze\"} component={AnalyzePage} />\r\n        <Route path={\"/attachment/:id/:code\"} component={AttachmentPage} />\r\n        <Route path={\"/poll-wiki/:id/:code\"} component={WikiPage} />\r\n        <Route path={\"/pollappsetting\"} component={PollAppSettingsPage} />\r\n        <Route path={\"/tester\"} component={TesterPage} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default Router","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      {'РИАЦi51' + ' '}\r\n      {new Date().getFullYear()}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  forget: {\r\n    cursor: 'pointer'\r\n  }\r\n}));\r\n\r\nconst SignIn = ({ onLogin, userError, passwordError }) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const classes = useStyles();\r\n\r\n  const handleName = (e) => {\r\n    setUsername(e.target.value)\r\n  }\r\n\r\n  const handlePassword = (e) => {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (username || password)\r\n      onLogin({\r\n        username,\r\n        password\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Войдите в систему\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            error={!!userError}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"login\"\r\n            label=\"Логин\"\r\n            name=\"login\"\r\n            autoComplete=\"login\"\r\n            autoFocus\r\n            onChange={handleName}\r\n            helperText={userError}\r\n\r\n          />\r\n          <TextField\r\n            error={passwordError}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Пароль\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handlePassword}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Запомнить меня\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleSubmit}\r\n          >\r\n            Войти\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box >\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\nexport default SignIn","import { gql } from '@apollo/client';\r\n\r\nexport const SIGNIN_MUTATION = gql`\r\n  mutation signin(\r\n    $username: String!,\r\n    $password: String!\r\n  ) {\r\n    signin(\r\n      username: $username,\r\n      password: $password\r\n    ) {\r\n      user {\r\n        id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SIGNUP_MUTATION = gql`\r\n  mutation signup(\r\n    $username: String!,\r\n    $password: String!\r\n  ) {\r\n    signup(\r\n      username: $username,\r\n      password: $password\r\n    ) {\r\n      user {\r\n        id\r\n        username\r\n      }\r\n    }\r\n  }\r\n\r\n`","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { useMutation } from '@apollo/react-hooks';\r\n\r\nimport SignInForm from '../../components/SignInForm'\r\nimport { SIGNIN_MUTATION } from './mutations';\r\nimport { CURRENT_USER_QUERY } from '../App/queries'\r\n\r\nconst SignInWrap = () => {\r\n  const [userError, setUserError] = useState(null)\r\n  const [passwordError, setPasswordError] = useState(null)\r\n  const [user, setUser] = useState(null)\r\n  const [signin, { data, loading, error }] = useMutation(\r\n    SIGNIN_MUTATION,\r\n    {\r\n      onError: (e) => {\r\n        setUserError('Неправильный логин или пароль')\r\n        setPasswordError(true)\r\n      },\r\n      update: (cache, { data: { signin } }) => cache.writeQuery({\r\n        query: CURRENT_USER_QUERY,\r\n        data: { currentUser: signin.user },\r\n      }),\r\n\r\n    }\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      signin({ variables: user })\r\n    }\r\n  }, [user])\r\n\r\n  const handleLogin = (data) => {\r\n    setUser(data)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <SignInForm onLogin={handleLogin} userError={userError} passwordError={passwordError} />\r\n      {/* { mutationLoading && <p>Loading...</p>} */}\r\n      {/* { mutationError && <p>Error :( Please try again</p>} */}\r\n    </Fragment>\r\n  )\r\n\r\n}\r\n\r\nexport default SignInWrap","import React, { Fragment } from 'react';\nimport './App.scss';\nimport Router from '../Router'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Container from '@material-ui/core/Container';\n\nimport { useQuery } from '@apollo/react-hooks';\nimport SignInWrap from '../SignInWrap'\n\nimport { CURRENT_USER_QUERY } from './queries';\nimport { userVar } from '../../cache'\n\nconst App = () => {\n  const { loading, error, data } = useQuery(CURRENT_USER_QUERY, {\n    onCompleted: (data) => userVar(data.currentUser)\n  });\n\n  if (loading) return (\n    <Fragment>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className=\"loading-circle\">\n          <CircularProgress />\n          <p>Загрузка. Подождите пожалуйста</p>\n        </div>\n      </Container>\n    </Fragment>\n  )\n\n  if (error) return <div>Error: {JSON.stringify(error)}</div>;\n\n  if (!!data.currentUser) {\n\n    return (\n      <Fragment>\n        <div className=\"App\">\n          <Router user={data.currentUser} />\n        </div>\n      </Fragment>\n    );\n  }\n  return <div>\n    <SignInWrap />\n  </div>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloClient } from '@apollo/client'\nimport { ApolloProvider } from '@apollo/client';\nimport * as serviceWorker from './serviceWorker';\nimport { cache } from './cache'\n\nimport App from './containers/App/App';\n\nconst client = new ApolloClient({\n  uri: 'http://192.168.31.83:4000/graphql',\n  cache,\n  credentials: 'include'\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}