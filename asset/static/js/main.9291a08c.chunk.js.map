{"version":3,"sources":["components/HomeBar/index.js","components/ActiveAvatar/index.js","components/PassiveAvatar/index.js","components/PollCard/index.js","containers/ListOfPolls/index.js","lib/xmlparser.js","components/XmlInput/index.js","lib/selects.js","containers/AddPollDialog/index.js","containers/AddPollWrap/queries.js","components/AddFab/index.js","containers/AddPollWrap/index.js","containers/HomeWrap/queries.js","containers/HomeWrap/index.js","pages/Home.js","components/SettingBar/index.js","modules/PollDrive/components/FreeAnswer/index.js","modules/PollDrive/components/Answer/index.js","modules/PollDrive/components/MultipleAnswers/index.js","modules/PollDrive/components/Question/index.js","lib/keycodes.js","lib/defineSelectedAnswer.js","lib/questionFormation.js","lib/beep.js","modules/PollDrive/index.js","components/CityDialog/index.js","containers/DriveWrap/queries.js","containers/DriveWrap/utils.js","containers/DriveWrap/index.js","pages/Drive.js","modules/PollResults/index.js","pages/Results.js","pages/Analyze.js","containers/Test/index.js","pages/Tester.js","modules/PollSettings/components/Common/index.js","modules/PollSettings/components/ConfigEditor/queries.js","modules/PollSettings/components/ConfigEditor/index.js","modules/PollSettings/components/ReoderEditor/queries.js","modules/PollSettings/components/QuestionCard/index.js","modules/PollSettings/components/ReoderEditor/index.js","modules/PollSettings/components/DeletePoll/mutations.js","modules/PollSettings/components/DeletePoll/index.js","modules/PollSettings/index.js","pages/Settings.js","modules/PollFiles/index.js","pages/Attachment.js","modules/PollWiki/index.js","pages/Wiki.js","containers/Router/index.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","inputRoot","color","sectionDesktop","sectionMobile","link","textDecoration","HomeBar","classes","React","useState","anchorEl","setAnchorEl","appAnchorEl","setAppAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","isAppMenuOpen","handleProfileMenuOpen","event","currentTarget","handleAppsMenuOpen","handleMobileMenuClose","handleMenuClose","handleAppMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderAppsMenu","renderMobileMenu","to","IconButton","Badge","badgeContent","aria-label","aria-controls","aria-haspopup","className","AppBar","position","Toolbar","edge","Typography","variant","noWrap","StyledBadge","withStyles","badge","backgroundColor","boxShadow","palette","background","paper","top","left","width","height","borderRadius","animation","border","content","transform","opacity","root","avatar","props","ActiveAvatar","overlap","liter","PassiveAvatar","maxWidth","margin","header","padding","flex","media","expand","marginLeft","transition","transitions","create","duration","shortest","expandOpen","PollCard","data","Avatar","active","type","Results","Tooltip","code","Drive","Attachment","Settings","Wiki","Card","CardHeader","action","subheader","startDate","endDate","CardContent","Grid","container","item","xs","sm","gutterBottom","way","questionsCount","answersCount","sample","complete","CardActions","disableSpacing","justify","ListOfPolls","polls","map","poll","i","key","xmlparser","xmlString","xml","parser","DOMParser","parsererrorNS","parseFromString","getElementsByTagName","namespaceURI","doc","getElementsByTagNameNS","length","testXml","element","getAttribute","start","end","structure","backdrop","zIndex","drawer","XmlImport","field","errorMessage","setFieldValue","touched","name","onBlur","value","onChange","processing","setProcessing","undefined","count","setCount","fileUpload","useRef","Fragment","Backdrop","CircularProgress","style","e","preventDefault","reader","FileReader","file","target","files","onloadend","xmlText","result","dateRegex","replace","console","log","readAsText","Button","startIcon","current","click","pollTypes","pollWays","TextInputComponent","label","TextField","fullWidth","error","helperText","InputLabelProps","shrink","SelectInputComponent","array","select","option","AddPollDialog","closeHndl","saveHndl","SUPPORTED_FORMATS","validationSchema","yup","shape","required","startdate","enddate","matches","min","ensure","xmlfile","test","size","includes","Dialog","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","aria-describedby","DialogTitle","DialogContent","initialValues","comment","validateOnBlur","onSubmit","values","setSubmitting","errors","isSubmitting","dirty","handleSubmit","handleReset","handleChange","handleBlur","component","XmlInput","DialogActions","disabled","addNewPoll","gql","small","bottom","right","AddFub","Fab","AddPollWrap","refetch","openDialog","setOpenDialog","useMutation","onCompleted","addPoll","xmlParse","newPoll","questions","logic","topic","Promise","resolve","reject","questionsLen","questionData","limit","order","answers","questionAnswers","answersLen","answerData","padStart","defaultLogic","logicLen","logicData","restrict","topics","topicsLen","topicData","basicLogicFormation","basicLogic","reduce","acum","val","exclude","unique","extLogic","filter","obj","difficult","freeAnswers","AddFab","xmlFile","then","basicData","pollInfo","variables","shortTitle","poolOfQuestions","pollsQuery","HomeWrap","client","useQuery","loading","Container","arrow","SettingBar","FreeAnswer","answer","focusHandler","blurHandler","textInput","useEffect","focus","freeAnswerText","showFreeAnswer","ref","data-code","data-keycode","keyCode","placeholder","onKeyUp","blur","onFocus","Answer","clickHandler","settings","answerRef","answerCls","answerTitle","selected","push","join","showIndex","codesShow","freeAnswer","fontSize","marginTop","errorText","Tags","multipleHandler","setAnswers","codes","setCodes","state","text","setError","defVal","codesOfAnswers","Autocomplete","multiple","options","reason","getOptionLabel","getOptionDisabled","renderOption","renderTags","getTagProps","index","Chip","renderInput","params","Question","question","mega","serviceBtns","resetBtn","confirmBtns","castCodes","97","98","99","100","101","102","103","104","105","answersCodes","keycodes","cast","defineSelectedAnswer","checkAnswerSelected","do","trueCode","checkServiceBtn","checkResetBtn","checkConfirmBtn","questionFormation","setResults","keyCodesPool","visibleAnswers","invisible","arrayOfBlockedCodes","newAnswers","suffix","pool","answerCode","qSuffix","megaMltp","prevState","skip","next","beep","config","audioCtx","window","AudioContext","webkitAudioContext","Object","assign","volume","frequency","oscillator","createOscillator","gainNode","createGain","connect","destination","gain","setTimeout","stop","PollDrive","logics","setCurrentQuestion","mainDiv","questionsLimit","setQuestion","userSettings","setUserSettings","setLogic","results","keyUpHandler","nodeName","nextStep","mainLogic","confirmResults","resetAnswers","savedCodes","arrayOfCodes","arrayToCheck","criticalExclude","explPool","goToNext","selectedAnswer","el","newResultState","poolOfExcludedCodes","goToPrevious","document","addEventListener","removeEventListener","newQuestion","defaultChecked","dataset","selectedCode","selectedKeyCode","keycode","codesPool","resultsPool","clearPool","CityDialog","handleClose","save","cities","setState","DialogContentText","Select","native","selectedIndex","innerHTML","city","pollDataQuery","citiesQuery","parseParams","temp","trimData","regex","srange","output","exec","range","concat","rangeToArray","split","DriveWrap","history","useHistory","setPoll","poolOfCities","setPoolOfCities","openCityDialog","setOpenCityDialog","setPollLogic","setCurrentCity","currentQuestion","handleConfigFile","path","pollLoading","filePath","fetch","r","ttt","normalizedLogic","critical","noncriticalExclude","normalizeLogic","area","section","param","lines","forEach","line","match","property","concatLogic","parseIni","cData","cError","citiesLoading","useParams","TabPanel","children","other","role","hidden","Box","p","a11yProps","tabs","borderRight","divider","PollResults","setValue","Tabs","orientation","newValue","Tab","paddingTop","Analyze","Test","observer","observable","secondsPassed","timerData","handle","setInterval","clearTimeout","Tester","CommonSetting","logicQuery","saveConfigChanges","ConfigEditor","setConfig","setFilePath","textRef","pollLogic","saveConfig","direction","alignItems","defaultValue","pollQuery","saveNewLimit","saveNewOrder","QuestionCard","handleLimitInput","setVal","lg","xl","Paper","elevation","cursor","currentValue","ReoderEditor","setQuestions","setPrevOrder","saveLimit","saveOrder","inputData","SortableItem","SortableElement","SortableList","SortableContainer","onSortEnd","oldIndex","newIndex","newArray","arrayMove","deltaArray","newOrder","axis","deletePoll","DeletePoll","setOpen","incorrect","setIncorrect","delPoll","toUpperCase","refetchQueries","query","handlePollDel","allProps","overflow","PollSettings","Common","PollFiles","PollWiki","Router","exact","Home","ApolloClient","uri","cache","InMemoryCache","App","ApolloProvider","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9291a08c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport PieChartIcon from '@material-ui/icons/PieChart';\r\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('xs')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  link: {\r\n    color: 'white',\r\n    textDecoration: 'none'\r\n  }\r\n}));\r\n\r\nconst HomeBar = ({ title }) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [appAnchorEl, setAppAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n  const isAppMenuOpen = Boolean(appAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleAppsMenuOpen = (event) => {\r\n    setAppAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleAppMenuClose = () => {\r\n    setAppAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  }\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-account-menu';\r\n  const appsMenuId = 'primary-apps-menu';\r\n\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Профиль</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>Выход</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const renderAppsMenu = (\r\n    <Menu\r\n      anchorEl={appAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={appsMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isAppMenuOpen}\r\n      onClose={handleAppMenuClose}\r\n    >\r\n      <MenuItem onClick={handleAppMenuClose}>ПУСТО_1</MenuItem>\r\n      <MenuItem onClick={handleAppMenuClose}>ПУСТО_2</MenuItem>\r\n    </Menu>\r\n  )\r\n\r\n  const mobileMenuId = 'primary-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <NavLink to=\"analyze\">\r\n        <MenuItem>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={0} color=\"secondary\">\r\n              <PieChartIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <p>XML</p>\r\n        </MenuItem>\r\n      </NavLink>\r\n      <MenuItem>\r\n        <IconButton color=\"inherit\">\r\n          <Badge badgeContent={0} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Сообщения</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton color=\"inherit\">\r\n          <Badge badgeContent={0} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Уведомления</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleAppsMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"more apps\"\r\n          aria-controls=\"primary-apps-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\">\r\n          <AppsIcon />\r\n        </IconButton>\r\n        <p>Приложения</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            {title}\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <NavLink to=\"tester\">\r\n              <IconButton color=\"inherit\">\r\n                <Badge badgeContent={0} color=\"secondary\">\r\n                  <AlarmOnIcon className={classes.link} />\r\n                </Badge>\r\n              </IconButton>\r\n            </NavLink>\r\n            <NavLink to=\"analyze\">\r\n              <IconButton color=\"inherit\">\r\n                <Badge badgeContent={0} color=\"secondary\">\r\n                  <PieChartIcon className={classes.link} />\r\n                </Badge>\r\n              </IconButton>\r\n            </NavLink>\r\n            <IconButton color=\"inherit\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton color=\"inherit\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              aria-label=\"apps\"\r\n              aria-controls={appsMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleAppsMenuOpen}\r\n              color=\"inherit\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <AppsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <AccountCircle />\r\n              </Badge>\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n      {renderAppsMenu}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeBar","import React from 'react';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: '#44b700',\r\n    color: '#44b700',\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    '&::after': {\r\n      position: 'absolute',\r\n      top: '-1px',\r\n      left: '-1px',\r\n      width: '100%',\r\n      height: '100%',\r\n      borderRadius: '50%',\r\n      animation: '$ripple 1.2s infinite ease-in-out',\r\n      border: '1px solid currentColor',\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  '@keyframes ripple': {\r\n    '0%': {\r\n      transform: 'scale(.8)',\r\n      opacity: 1,\r\n    },\r\n    '100%': {\r\n      transform: 'scale(2.4)',\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    backgroundColor: props => props.color\r\n  }\r\n}));\r\n\r\nconst ActiveAvatar = (props) => {\r\n  const classes = useStyles(props);\r\n  return (\r\n    <div className={classes.root}>\r\n      <StyledBadge\r\n        overlap=\"circle\"\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        variant=\"dot\"\r\n      >\r\n        <Avatar className={classes.avatar}>\r\n          {props.liter}\r\n        </Avatar>\r\n      </StyledBadge>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActiveAvatar","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    backgroundColor: props => props.color\r\n  }\r\n}));\r\n\r\nconst PassiveAvatar = (props) => {\r\n  const classes = useStyles(props);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Avatar className={classes.avatar}>\r\n        {props.liter}\r\n      </Avatar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PassiveAvatar","import React, { useState, Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { NavLink } from 'react-router-dom'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PollIcon from '@material-ui/icons/Poll';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ActiveAvatar from '../../components/ActiveAvatar'\r\nimport PassiveAvatar from '../../components/PassiveAvatar/'\r\nimport DelConfirm from '../DelConfirm'\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: '100%',\r\n    margin: '10px 0'\r\n  },\r\n  header: {\r\n    padding: '16px 16px 0 16px'\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    padding: '10px 16px 0 16px'\r\n  },\r\n  media: {\r\n    height: 0,\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  }\r\n}));\r\n\r\nconst PollCard = ({ data }) => {\r\n  const classes = useStyles();\r\n  const [pollId] = useState(data.id)\r\n  const [anchorEl, setAnchorEl] = useState(false);\r\n\r\n  const isPollMenuOpen = Boolean(anchorEl);\r\n\r\n  const Avatar = () => {\r\n    if (data.active) {\r\n      return (\r\n        <ActiveAvatar type={data.type} color={data.color}>\r\n          {data.type}\r\n        </ActiveAvatar>\r\n      )\r\n    } else {\r\n      return (\r\n        <PassiveAvatar type={data.type} color={data.color}>\r\n          {data.type}\r\n        </PassiveAvatar>\r\n      )\r\n    }\r\n  }\r\n\r\n  const Results = () => {\r\n    return (\r\n      <Tooltip title=\"Результаты\">\r\n        <NavLink to={`/results/${data.id}/${data.code}`}>\r\n          <IconButton>\r\n            <PollIcon />\r\n          </IconButton>\r\n        </NavLink>\r\n      </Tooltip>\r\n    )\r\n  }\r\n  const Drive = () => {\r\n    return (\r\n      <Tooltip title=\"Ввод результатов\">\r\n        <NavLink to={`/drive/${data.id}/${data.code}`}>\r\n          <IconButton >\r\n            <AssignmentTurnedInIcon />\r\n          </IconButton>\r\n        </NavLink>\r\n      </Tooltip>\r\n    )\r\n  }\r\n  const Attachment = () => {\r\n    return (\r\n      <Tooltip title=\"Файлы\">\r\n        <NavLink to={`/attachment/${data.id}/${data.code}`}>\r\n          <IconButton>\r\n            <AttachFileIcon />\r\n          </IconButton>\r\n        </NavLink>\r\n      </Tooltip>\r\n    )\r\n  }\r\n\r\n  const Settings = () => {\r\n    return (\r\n      <Tooltip title=\"Настройки\">\r\n        <NavLink to={`/poll-settings/${data.id}/${data.code}`}>\r\n          <IconButton>\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </NavLink>\r\n      </Tooltip>\r\n    )\r\n  }\r\n\r\n  const Wiki = () => {\r\n    return (\r\n      <Tooltip title=\"Заметки\">\r\n        <NavLink to={`/poll-wiki/${data.id}/${data.code}`}>\r\n          <IconButton>\r\n            <LibraryBooksIcon />\r\n          </IconButton>\r\n        </NavLink>\r\n      </Tooltip>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className={classes.root}>\r\n        <CardHeader className={classes.header}\r\n          avatar={\r\n            <Avatar />\r\n          }\r\n          action={\r\n            <Settings />\r\n          }\r\n          title={data.code + ': ' + data.title}\r\n          subheader={data.startDate + ' - ' + data.endDate}\r\n        />\r\n        <CardContent className={classes.content}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                Метод проведения: {data.way}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                Вопросов/ответов: {data.questionsCount + '/' + data.answersCount}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n                Респондентов: {data.sample}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n                Результатов: {data.complete}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n          <Grid container item xs={12}>\r\n            <Results />\r\n            <Drive />\r\n          </Grid>\r\n          <Grid container item xs={12} justify=\"flex-end\">\r\n            <Attachment />\r\n            <Wiki />\r\n          </Grid>\r\n        </CardActions>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default PollCard","import React, { Fragment } from 'react'\r\nimport PollCard from '../../components/PollCard'\r\n\r\nconst ListOfPolls = ({ data }) => {\r\n\r\n  return data.polls.map((poll, i) => (\r\n    <PollCard key={i} data={poll} />\r\n  ))\r\n}\r\n\r\nexport default ListOfPolls","function testXml(xmlString) {\r\n  var parser = new DOMParser();\r\n  var docError = parser.parseFromString('INVALID', 'text/xml');\r\n  var parsererrorNS = docError.getElementsByTagName(\"parsererror\")[0].namespaceURI;\r\n  var doc = parser.parseFromString(xmlString, 'text/xml');\r\n  if (doc.getElementsByTagNameNS(parsererrorNS, 'parsererror').length > 0) {\r\n    return false\r\n  }\r\n  return doc;\r\n}\r\n\r\nconst xmlparser = (xmlString) => {\r\n  const xml = testXml(xmlString)\r\n  if (xml) {\r\n    let data = {}\r\n    const element = xml.getElementsByTagName(\"opros\")[0]\r\n    data.title = element.getAttribute('name')\r\n    data.code = element.getAttribute('cod')\r\n    data.start = element.getAttribute('start_date')\r\n    data.end = element.getAttribute('end_date')\r\n    data.structure = {\r\n      data: ''\r\n    }\r\n    return data\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nexport default xmlparser","import React, { useRef, useEffect, useState } from 'react'\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Button from '@material-ui/core/Button';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport xmlparser from '../../lib/xmlparser'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst XmlImport = ({ field, ...props }) => {\r\n  const { errorMessage, touched, setFieldValue } = props;\r\n  const { name, value, onChange, onBlur } = field;\r\n  const [processing, setProcessing] = useState(false)\r\n  const [file, setFile] = useState(undefined)\r\n  const [count, setCount] = useState(0)\r\n  const classes = useStyles();\r\n  const fileUpload = useRef();\r\n  let fileReader\r\n\r\n  const upload = () => {\r\n    if (fileUpload) {\r\n      fileUpload.current.click();\r\n    }\r\n  }\r\n\r\n  const handleChg = (e) => {\r\n    e.preventDefault()\r\n    setProcessing(true)\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    if (file) {\r\n      reader.onloadend = () => {\r\n        const xmlText = reader.result\r\n        const xml = xmlparser(xmlText)\r\n        if (xml) {\r\n          const dateRegex = /^(\\d{2}).(\\d{2}).(\\d{4})$/\r\n          const startDate = xml.start.replace(dateRegex, '$3-$2-$1')\r\n          const endDate = xml.end.replace(dateRegex, '$3-$2-$1')\r\n          setFieldValue('title', xml.title)\r\n          setFieldValue('code', xml.code)\r\n          setFieldValue('startdate', startDate)\r\n          setFieldValue('enddate', endDate)\r\n          setCount(1)\r\n          setProcessing(false)\r\n          return\r\n        } else {\r\n          console.log('Неправильный формат XML');\r\n          setFieldValue('mainconfig', '')\r\n          return\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n      props.setFieldValue(name, file);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Backdrop className={classes.backdrop} open={processing} >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      <input\r\n        style={{ display: 'none' }}\r\n        id={name}\r\n        name={name}\r\n        type=\"file\"\r\n        id={name}\r\n        ref={fileUpload}\r\n        onBlur={onBlur}\r\n        // onChange={handleChange}\r\n        onInput={handleChg}\r\n      />\r\n      <Badge\r\n        color=\"secondary\"\r\n        badgeContent={count}\r\n        style={{ top: '5px' }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n          startIcon={<PublishIcon />}\r\n          onClick={upload}\r\n        >\r\n          XML\r\n        </Button>\r\n      </Badge>\r\n      {errorMessage ? (\r\n        <Typography variant=\"caption\" color=\"error\">\r\n          {errorMessage}\r\n        </Typography>\r\n      ) : null}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default XmlImport","export const pollTypes = [\r\n  'Экспертный',\r\n  'Всероссийский'\r\n]\r\n\r\nexport const pollWays = [\r\n  'Интервьюирование',\r\n  'Анкетирование',\r\n  'Телефонный',\r\n  'Web-опрос'\r\n]\r\n","import React, { Component, useState } from \"react\";\r\nimport { Formik, Field } from \"formik\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport XmlInput from \"../../components/XmlInput\";\r\nimport { pollTypes, pollWays } from '../../lib/selects'\r\n\r\nimport * as yup from \"yup\";\r\n\r\nconst TextInputComponent = ({ field, ...props }) => {\r\n  const { errorMessage, label, type, touched } = props;\r\n  const { name, value, onChange, onBlur } = field;\r\n  return (\r\n    <div>\r\n      <TextField\r\n        fullWidth\r\n        type={type}\r\n        name={name}\r\n        label={label}\r\n        value={value}\r\n        error={touched && errorMessage ? true : false}\r\n        helperText={touched && errorMessage ? errorMessage : undefined}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        InputLabelProps={{\r\n          shrink: true\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SelectInputComponent = ({ field, ...props }) => {\r\n  const { errorMessage, label, touched, array } = props;\r\n  const { name, value, onChange, onBlur } = field;\r\n  return (\r\n    <div>\r\n      <TextField\r\n        select\r\n        fullWidth\r\n        name={name}\r\n        label={label}\r\n        value={value}\r\n        error={touched && errorMessage ? true : false}\r\n        helperText={touched && errorMessage ? errorMessage : undefined}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        InputLabelProps={{\r\n          shrink: true\r\n        }}\r\n      >\r\n        {array.map((option, i) => (\r\n          <MenuItem key={i} value={i}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst AddPollDialog = ({ open, closeHndl, saveHndl }) => {\r\n  const FILE_SIZE = 1024 * 1024;                              // 1 mb\r\n  const codeRegExp = /^[A-Za-z]{3}[0-9]{2}-[0-9]{2}?$/\r\n  const SUPPORTED_FORMATS = [\r\n    \"text/xml\"\r\n  ];\r\n  const validationSchema = yup.object().shape({\r\n    title: yup.string().required(\"Обязательное поле\"),\r\n    startdate: yup.date().required('Обязательное поле'),\r\n    enddate: yup.date().required('Обязательное поле'),\r\n    code: yup.string().matches(codeRegExp, 'Формат не валидный').required('Обязательное поле'),\r\n    sample: yup.number().min(1, 'Не меньше одного').required('Обязательное поле'),\r\n    type: yup.string().ensure().required('Обязательное поле'),\r\n    way: yup.string().ensure().required('Обязательное поле'),\r\n    xmlfile: yup\r\n      .mixed()\r\n      .required(\"Обязательное поле формы\")\r\n      .test(\r\n        \"fileSize\",\r\n        \"Слишком большой файл\",\r\n        value => value && value.size <= FILE_SIZE\r\n      )\r\n      .test(\r\n        \"fileFormat\",\r\n        \"Неподдерживаемый формат\",\r\n        value => value && SUPPORTED_FORMATS.includes(value.type)\r\n      )\r\n  });\r\n  const submitHandling = (values, { setSubmitting }) => {\r\n    saveHndl(values)\r\n    closeHndl()\r\n    setSubmitting(true);\r\n  }\r\n  return (\r\n    <Dialog\r\n      className=\"add-poll-dialog\"\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      open={open}\r\n      maxWidth={'sm'}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">Добавить опрос</DialogTitle>\r\n      <DialogContent>\r\n        <Formik\r\n          initialValues={{\r\n            xmlfile: undefined,\r\n            title: undefined,\r\n            startdate: undefined,\r\n            enddate: undefined,\r\n            code: undefined,\r\n            sample: 10,\r\n            type: 1,\r\n            way: 1,\r\n            comment: undefined\r\n          }}\r\n          validationSchema={validationSchema}\r\n          validateOnBlur={true}\r\n          onSubmit={submitHandling}\r\n        >\r\n          {\r\n            ({\r\n              saveHndl,\r\n              values,\r\n              errors,\r\n              touched,\r\n              dirty,\r\n              isSubmitting,\r\n              handleReset,\r\n              handleSubmit,\r\n              handleChange,\r\n              handleBlur,\r\n              setFieldValue\r\n            }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={6} sm={6}>\r\n                      <Field\r\n                        name=\"xmlfile\"\r\n                        component={XmlInput}\r\n                        setFieldValue={setFieldValue}\r\n                        errorMessage={errors[\"xmlfile\"] ? errors[\"xmlfile\"] : undefined}\r\n                        touched={touched[\"xmlfile\"]}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <Field\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        label=\"Наименование\"\r\n                        setFieldValue={setFieldValue}\r\n                        component={TextInputComponent}\r\n                        errorMessage={errors[\"title\"]}\r\n                        touched={touched[\"title\"]}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Field\r\n                        name=\"startdate\"\r\n                        type=\"date\"\r\n                        label=\"Дата начала\"\r\n                        setFieldValue={setFieldValue}\r\n                        component={TextInputComponent}\r\n                        errorMessage={errors[\"startdate\"]}\r\n                        touched={touched[\"startdate\"]}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Field\r\n                        name=\"enddate\"\r\n                        type=\"date\"\r\n                        label=\"Дата окончания\"\r\n                        setFieldValue={setFieldValue}\r\n                        component={TextInputComponent}\r\n                        errorMessage={errors[\"enddate\"]}\r\n                        touched={touched[\"enddate\"]}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Field\r\n                        name=\"code\"\r\n                        label=\"Код опроса\"\r\n                        type=\"text\"\r\n                        setFieldValue={setFieldValue}\r\n                        component={TextInputComponent}\r\n                        errorMessage={errors[\"code\"]}\r\n                        touched={touched[\"code\"]}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Field\r\n                        name=\"sample\"\r\n                        type=\"number\"\r\n                        label=\"Выборка\"\r\n                        setFieldValue={setFieldValue}\r\n                        component={TextInputComponent}\r\n                        errorMessage={errors[\"sample\"]}\r\n                        touched={touched[\"sample\"]}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Field\r\n                        name=\"type\"\r\n                        label=\"Тип опроса\"\r\n                        array={pollTypes}\r\n                        setFieldValue={setFieldValue}\r\n                        component={SelectInputComponent}\r\n                        errorMessage={errors[\"type\"]}\r\n                        touched={touched[\"type\"]}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Field\r\n                        name=\"way\"\r\n                        label=\"Способ проведения\"\r\n                        array={pollWays}\r\n                        component={SelectInputComponent}\r\n                        errorMessage={errors[\"way\"]}\r\n                        touched={touched[\"way\"]}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Field\r\n                        name=\"comment\"\r\n                        label=\"Комментарии\"\r\n                        component={TextInputComponent}\r\n                        errorMessage={errors[\"comment\"]}\r\n                        touched={touched[\"comment\"]}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <DialogActions>\r\n                    <Button onClick={closeHndl} color=\"primary\">\r\n                      Отмена\r\n                    </Button>\r\n                    <Button type=\"submit\" disabled={isSubmitting}>\r\n                      Сохранить\r\n                    </Button>\r\n                  </DialogActions>\r\n                </form>\r\n              )\r\n          }\r\n        </Formik>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\nexport default AddPollDialog;","import { gql } from '@apollo/client'\r\n\r\nexport const addNewPoll = gql`\r\n  mutation addNewPoll($newPoll: PollWithConfig!, $poolOfQuestions: [QuestionInput], $logic: LogicInput, $topic: [TopicInput]) {\r\n    addPoll(poll: $newPoll, questions: $poolOfQuestions, logic: $logic, topic: $topic) {\r\n      title\r\n    }\r\n  }\r\n`\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    top: '10px',\r\n    left: '-55px'\r\n  },\r\n  small: {\r\n    position: 'fixed',\r\n    bottom: '30px',\r\n    right: '30px'\r\n  }\r\n}));\r\n\r\nconst AddFub = ({ onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.small}>\r\n      <Fab color=\"secondary\" aria-label=\"add\" onClick={onClick}>\r\n        <AddIcon />\r\n      </Fab>\r\n    </div>\r\n  );\r\n}\r\nexport default AddFub","import React, { Fragment, useState } from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AddPollDialog from '../AddPollDialog';\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { addNewPoll } from \"./queries\"\r\nimport AddFab from \"../../components/AddFab\";\r\n\r\nconst AddPollWrap = ({ refetch }) => {\r\n  const [openDialog, setOpenDialog] = useState(false)\r\n  const [addPoll, { newPoll }] = useMutation(addNewPoll, {\r\n    onCompleted: () => refetch()\r\n  })\r\n  const openPollDialog = () => {\r\n    setOpenDialog(true)\r\n  }\r\n  const closeDialog = () => {\r\n    setOpenDialog(false)\r\n  }\r\n  const saveNewPoll = (data) => {\r\n    const xmlFile = data.xmlfile\r\n    if (xmlFile.size) {\r\n      let promise = new Promise((resolve, reject) => {\r\n        resolve(xmlParse(xmlFile))\r\n      })\r\n      promise.then(result => {\r\n        const basicData = basicLogicFormation(result)\r\n        const pollInfo = {\r\n          title: data.title,\r\n          startDate: data.startdate,\r\n          endDate: data.enddate,\r\n          code: data.code,\r\n          sample: data.sample,\r\n          type: data.type,\r\n          way: data.way,\r\n          comment: data.comment\r\n        }\r\n        const xmlFile = data.xmlfile\r\n        addPoll({\r\n          variables: {\r\n            newPoll: {\r\n              ...pollInfo,\r\n              comment: pollInfo.comment ? pollInfo.comment : \"\",\r\n              shortTitle: '',\r\n              active: true\r\n            },\r\n            poolOfQuestions: basicData.questions,\r\n            logic: {\r\n              ...basicData.logic\r\n            },\r\n            topic: basicData.topic\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  const xmlParse = (file) => {\r\n    let result = {\r\n      questions: [],\r\n      logic: [],\r\n      topic: []\r\n    }\r\n    let reader = new FileReader();\r\n    return new Promise((resolve, reject) => {\r\n      reader.onloadend = () => {\r\n        const xmlText = reader.result\r\n        const parser = new DOMParser();\r\n        const doc = parser.parseFromString(xmlText, 'text/xml');\r\n        const questions = doc.getElementsByTagName('vopros')\r\n        const questionsLen = questions.length\r\n        for (let i = 0; i < questionsLen; i++) {\r\n          let questionData = {\r\n            title: questions[i].getAttribute('text'),\r\n            topic: +questions[i].getAttribute('tema_id'),\r\n            limit: +questions[i].getAttribute('limit'),\r\n            type: +questions[i].getAttribute('type_id'),\r\n            order: +questions[i].getAttribute('sort'),\r\n            answers: []\r\n          }\r\n          const questionAnswers = questions[i].getElementsByTagName('otvet')\r\n          const answersLen = questionAnswers.length\r\n          for (let i = 0; i < answersLen; i++) {\r\n            const answerData = {\r\n              title: questionAnswers[i].getAttribute('otvet_text'),\r\n              code: questionAnswers[i].getAttribute('otvet_cod').padStart(3, \"0\"),\r\n              type: +questionAnswers[i].getAttribute('otvet_type'),\r\n              order: +questionAnswers[i].getAttribute('otvet_sort')\r\n            }\r\n            questionData.answers[i] = answerData\r\n          }\r\n          result.questions[i] = questionData\r\n        }\r\n        const defaultLogic = doc.getElementsByTagName('restrict')\r\n        const logicLen = defaultLogic.length\r\n        if (logicLen) {\r\n          let logicData = []\r\n          for (let i = 0; i < logicLen; i++) {\r\n            const logic = {\r\n              code: defaultLogic[i].getAttribute('otvet_cod').padStart(3, \"0\"),\r\n              restrict: defaultLogic[i].getAttribute('restrict_cod').padStart(3, \"0\"),\r\n              type: defaultLogic[i].getAttribute('restrict_type')\r\n            }\r\n            logicData[i] = logic\r\n          }\r\n          result.logic = logicData\r\n        }\r\n        const topics = doc.getElementsByTagName('tema')\r\n        const topicsLen = topics.length\r\n        if (topicsLen) {\r\n          for (let i = 0; i < topicsLen; i++) {\r\n            const topicData = {\r\n              id: topics[i].getAttribute('id'),\r\n              title: topics[i].getAttribute('name')\r\n            }\r\n            result.topic[i] = topicData\r\n          }\r\n        }\r\n        resolve(result)\r\n      }\r\n      reader.readAsText(file);\r\n    })\r\n  }\r\n\r\n  const basicLogicFormation = (data) => {\r\n    const basicLogic = data.logic.reduce((acum, val, i) => {\r\n      if (val.type === '3') {\r\n        if (!acum.exclude[val.code]) {\r\n          acum.exclude[val.code] = { restrict: [val.restrict] }\r\n        } else {\r\n          acum.exclude[val.code] = {\r\n            restrict: [\r\n              ...acum.exclude[val.code].restrict,\r\n              val.restrict\r\n            ]\r\n          }\r\n        }\r\n      } else if (val.type === '5') {\r\n        acum.unique = [...acum.unique, val.code]\r\n      }\r\n      return acum\r\n    }, {\r\n      unique: [],\r\n      exclude: {}\r\n    })\r\n    const extLogic = data.questions.reduce((acum, val) => {\r\n      if (val.limit > 1) {\r\n        // если вопрос с множество ответов -> ответ 'Затрудняюсь ответить' (type = 3) - УНИКАЛЬНЫЙ\r\n        basicLogic.unique = [\r\n          ...basicLogic.unique,\r\n          ...val.answers.filter(obj => obj.type === 3).map(obj => obj.code)\r\n        ]\r\n      }\r\n      acum.difficult = [\r\n        ...acum.difficult,\r\n        ...val.answers.filter(obj => obj.type === 3).map(obj => obj.code)\r\n      ]\r\n      acum.freeAnswers = [\r\n        ...acum.freeAnswers,\r\n        ...val.answers.filter(obj => obj.type === 2).map(obj => obj.code)\r\n      ]\r\n      return acum\r\n    }, {\r\n      difficult: [],\r\n      freeAnswers: []\r\n    })\r\n    data.logic = {\r\n      ...basicLogic,\r\n      ...extLogic\r\n    }\r\n    console.log(data.logic);\r\n    return data\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <AddFab onClick={openPollDialog} />\r\n      <AddPollDialog open={openDialog} saveHndl={saveNewPoll} closeHndl={closeDialog} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AddPollWrap","import { gql } from '@apollo/client'\r\n\r\nexport const pollsQuery = gql`\r\n  query pollsQuery {\r\n    polls {\r\n      id\r\n      title\r\n      code\r\n      liter\r\n      color\r\n      startDate\r\n      endDate\r\n      sample\r\n      way\r\n      type\r\n      complete\r\n      questionsCount\r\n      answersCount\r\n      active\r\n    }\r\n  }\r\n`\r\nexport const addNewPoll = gql`\r\n  mutation addNewPoll($newPoll: PollWithConfig!, $poolOfQuestions: [QuestionInput], $logic: LogicInput, $topic: [TopicInput]) {\r\n    addPoll(poll: $newPoll, questions: $poolOfQuestions, logic: $logic, topic: $topic) {\r\n      title\r\n    }\r\n  }\r\n`\r\n\r\nexport const deletePoll = gql`\r\n  mutation deletePoll($id: ID!) {\r\n    deletePoll(id: $id) {\r\n      title\r\n    }\r\n  }\r\n`","import React, { Fragment, useState } from 'react'\r\nimport Container from '@material-ui/core/Container'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport ListOfPolls from '../ListOfPolls'\r\nimport AddPollWrap from '../AddPollWrap'\r\n\r\nimport { useQuery } from '@apollo/client'\r\nimport { pollsQuery } from \"./queries\"\r\n\r\nconst HomeWrap = (props, client) => {\r\n  const { loading, error, data, refetch } = useQuery(pollsQuery)\r\n\r\n  console.log(props);\r\n\r\n  if (loading) return (\r\n    <Fragment>\r\n      <CircularProgress />\r\n      <p>Загрузка. Подождите пожалуйста</p>\r\n    </Fragment>\r\n  )\r\n\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container maxWidth=\"md\">\r\n        <ListOfPolls data={data} />\r\n      </Container>\r\n      <AddPollWrap refetch={refetch} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default HomeWrap","import React, { Fragment } from 'react'\r\n\r\nimport HomeBar from '../components/HomeBar'\r\nimport HomeWrap from '../containers/HomeWrap'\r\n\r\nconst Drive = () => {\r\n\r\n  return (\r\n    <Fragment>\r\n      <HomeBar title={\"Опросы\"} />\r\n      <HomeWrap />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Drive","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    textDecoration: 'none'\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('xs')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  sectionDesktop: {\r\n    display: 'flex'\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  arrow: {\r\n    color: 'white',\r\n    textDecoration: 'none'\r\n  }\r\n}));\r\n\r\nconst SettingBar = ({ title }) => {\r\n  const classes = useStyles();\r\n  const [appAnchorEl, setAppAnchorEl] = React.useState(null);\r\n  const isAppMenuOpen = Boolean(appAnchorEl);\r\n\r\n  const handleAppsMenuOpen = (event) => {\r\n    setAppAnchorEl(event.currentTarget);\r\n  };\r\n  const handleAppMenuClose = () => {\r\n    setAppAnchorEl(null);\r\n  }\r\n\r\n  const appsMenuId = 'primary-apps-menu';\r\n\r\n  const renderAppsMenu = (\r\n    <Menu\r\n      anchorEl={appAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={appsMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isAppMenuOpen}\r\n      onClose={handleAppMenuClose}\r\n    >\r\n      <MenuItem onClick={handleAppMenuClose}>ПУСТО_1</MenuItem>\r\n      <MenuItem onClick={handleAppMenuClose}>ПУСТО_2</MenuItem>\r\n    </Menu>\r\n  )\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <NavLink to=\"/\">\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n            >\r\n              <ArrowBackIcon className={classes.arrow} />\r\n            </IconButton>\r\n          </NavLink>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            {title}\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"apps\"\r\n              aria-controls={appsMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleAppsMenuOpen}\r\n              color=\"inherit\">\r\n              <AppsIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderAppsMenu}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingBar","import React, { useRef, useEffect } from 'react'\r\n\r\nconst FreeAnswer = ({ answer, focusHandler, blurHandler }) => {\r\n  const textInput = useRef(null);\r\n  useEffect(() => {\r\n    if (answer.focus) {\r\n      textInput.current.focus()\r\n    }\r\n    if (answer.freeAnswerText !== '') {\r\n      textInput.current.value = answer.freeAnswerText\r\n    }\r\n  }, [])\r\n\r\n  const handlerInput = (e) => {\r\n    let keyCode = e.keyCode\r\n    if (keyCode === 13) {\r\n      e.currentTarget.blur()\r\n      return\r\n    } else if (keyCode === 27) {\r\n      if (textInput.current.value !== '') {\r\n        textInput.current.value = ''\r\n        return\r\n      }\r\n      e.currentTarget.blur()\r\n      return\r\n    }\r\n  }\r\n\r\n  if (answer.showFreeAnswer) {\r\n    return (\r\n      <input\r\n        className=\"free-answer\"\r\n        type=\"text\"\r\n        ref={textInput}\r\n        data-code={answer.code}\r\n        data-keycode={answer.keyCode}\r\n        placeholder=\"Введите свободный ответ\"\r\n        onKeyUp={handlerInput}\r\n        onFocus={focusHandler}\r\n        onBlur={blurHandler}\r\n      />\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport default FreeAnswer","import React, { Fragment, useRef } from 'react'\r\nimport FreeAnswer from '../FreeAnswer'\r\nimport FlashOnSharpIcon from '@material-ui/icons/FlashOnSharp';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst Answer = ({ answer, clickHandler, focusHandler, blurHandler, settings }) => {\r\n  const answerRef = useRef(null)\r\n\r\n  let answerCls = ['answer-wrap']\r\n  let answerTitle = ['answer-title']\r\n  if (answer.selected) {\r\n    answerCls.push('selected')\r\n  }\r\n  if (answer.disabled) {\r\n    answerTitle.push('disabled')\r\n  }\r\n\r\n  const click = () => {\r\n    clickHandler(answerRef.current)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div onClick={(e) => click(e)}\r\n        className={answerCls.join(' ')}\r\n        ref={answerRef}\r\n        data-code={answer.keyCode} >\r\n        <div className={\"answer-title\"}>\r\n          <span className={\"answer-key\"}>{answer.showIndex}</span>\r\n          <span> </span>\r\n          {settings.codesShow &&\r\n            <span className={\"answer-code\"} >{answer.code}</span>\r\n          }\r\n          <span> - </span>\r\n          <span className={answerTitle.join(' ')}>{answer.title}</span>\r\n          <span>{answer.freeAnswer ? <EditIcon fontSize=\"small\" /> : null}</span>\r\n        </div>\r\n        <div>\r\n          {answer.showFreeAnswer && (\r\n            <FreeAnswer\r\n              answer={answer}\r\n              focus={answer.focus}\r\n              focusHandler={focusHandler}\r\n              blurHandler={blurHandler}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Answer","import React, { useState, useEffect } from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 500,\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  errorText: {\r\n    color: 'red'\r\n  }\r\n}));\r\n\r\nexport default function Tags({ data, limit, settings, multipleHandler }) {\r\n  const classes = useStyles();\r\n  const [answers, setAnswers] = useState([])\r\n  const [codes, setCodes] = useState([])\r\n  const [error, setError] = useState({\r\n    state: false,\r\n    text: ''\r\n  })\r\n\r\n  useEffect(() => {\r\n    const defVal = data.filter(val => {\r\n      if (val.selected) return val\r\n    })\r\n    const codesOfAnswers = data.map(val => val.code)\r\n    setCodes(codesOfAnswers)\r\n    setAnswers(defVal)\r\n  }, [])\r\n\r\n  const handleAnswerSelect = (e, value, reason) => {\r\n    switch (reason) {\r\n      case 'select-option':\r\n        if (value.length > limit) {\r\n          setError({ state: true, text: 'Максимальное количество ответов' })\r\n          return\r\n        }\r\n        setAnswers(value)\r\n        setError({ ...error, state: false })\r\n        break\r\n      case 'remove-option':\r\n        setAnswers(value)\r\n        setError({ ...error, state: false })\r\n        break\r\n      case 'clear':\r\n        setAnswers([])\r\n        setError({ ...error, state: false })\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const blurHandler = (e) => {\r\n    setError({ ...error, state: false })\r\n    multipleHandler(answers, codes)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Autocomplete\r\n        multiple={limit > 1}\r\n        id=\"tags-standard\"\r\n        options={data}\r\n        onChange={handleAnswerSelect}\r\n        value={answers}\r\n        getOptionLabel={(option) => option.title}\r\n        getOptionDisabled={(option) => option.disabled}\r\n        renderOption={(option) => {\r\n          if (settings.codesShow) {\r\n            return <span><span style={{ fontSize: '10px' }}>{option.code}</span> - {option.title}</span>\r\n          }\r\n          return option.title\r\n        }}\r\n        onBlur={blurHandler}\r\n        renderTags={(value, getTagProps) =>\r\n          value.map((option, index) => (\r\n            <Chip\r\n              {...getTagProps({ index })}\r\n              variant=\"outlined\"\r\n              key={index}\r\n              label={settings.codesShow ?\r\n                <span><span style={{ fontSize: '10px' }}>{option.code}</span> - {option.title}</span> :\r\n                <span>{option.title}</span>\r\n              }\r\n            />\r\n          ))\r\n        }\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            error={error.state}\r\n            variant=\"standard\"\r\n            label=\"Выберите ответы\"\r\n            helperText={error.state ? error.text : ''}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { Fragment, useState } from 'react'\r\nimport Answer from \"../Answer\";\r\nimport Tags from '../MultipleAnswers'\r\n\r\nconst Question = ({ count, question, clickHandler, focusHandler, blurHandler, multipleHandler, settings }) => {\r\n  function FlatAnswer() {\r\n    return (\r\n      question.answers.map((answer, i) => (\r\n        <Answer key={i} answer={answer}\r\n          clickHandler={clickHandler}\r\n          focusHandler={focusHandler}\r\n          blurHandler={blurHandler}\r\n          settings={settings}\r\n        />\r\n      )))\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h3 className={\"question-title\"} >\r\n        <span className={\"question-number\"}>{count + 1}</span>\r\n        <span> - </span>\r\n        {question.title}</h3>\r\n      <div>{\r\n        !question.mega ?\r\n          question.answers.map((answer, i) => (\r\n            <Answer key={i} answer={answer}\r\n              clickHandler={clickHandler}\r\n              focusHandler={focusHandler}\r\n              blurHandler={blurHandler}\r\n              settings={settings}\r\n            />\r\n          )) : <Tags data={question.answers} limit={question.limit} settings={settings} multipleHandler={multipleHandler} />\r\n      }\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Question","export const serviceBtns = [\r\n  8, 9, 16, 17, 18, 19, 20, 32,\r\n  33, 34, 35, 36, 38, 40, 91, 106,\r\n  107, 109, 110, 112, 113, 114, 115,\r\n  116, 117, 118, 119, 120, 121, 122, 123, 144\r\n];\r\n\r\nexport const resetBtn = [\r\n  27\r\n]\r\n\r\nexport const confirmBtns = [\r\n  48,\r\n  96,\r\n  13\r\n];\r\n\r\nexport const castCodes = {\r\n  97: 49,\r\n  98: 50,\r\n  99: 51,\r\n  100: 52,\r\n  101: 53,\r\n  102: 54,\r\n  103: 55,\r\n  104: 56,\r\n  105: 57\r\n};\r\n\r\nexport const answersCodes = [\r\n  37,\r\n  39,\r\n  49,\r\n  50,\r\n  51,\r\n  52,\r\n  53,\r\n  54,\r\n  55,\r\n  56,\r\n  57,\r\n  81,\r\n  87,\r\n  69,\r\n  82,\r\n  84,\r\n  89,\r\n  85,\r\n  73,\r\n  79,\r\n  80,\r\n  65,\r\n  83,\r\n  68,\r\n  70,\r\n  71,\r\n  72,\r\n  74,\r\n  75,\r\n  76,\r\n  90,\r\n  88,\r\n  67,\r\n  97,\r\n  98,\r\n  99,\r\n  100,\r\n  101,\r\n  102,\r\n  103,\r\n  104,\r\n  105\r\n]\r\n\r\nexport const keycodes = [\r\n  ['1', 49],\r\n  ['2', 50],\r\n  ['3', 51],\r\n  ['4', 52],\r\n  ['5', 53],\r\n  ['6', 54],\r\n  ['7', 55],\r\n  ['8', 56],\r\n  ['9', 57],\r\n  ['Q', 81],\r\n  ['W', 87],\r\n  ['E', 69],\r\n  ['R', 82],\r\n  ['T', 84],\r\n  ['Y', 89],\r\n  ['U', 85],\r\n  ['I', 73],\r\n  ['O', 79],\r\n  ['P', 80],\r\n  ['A', 65],\r\n  ['S', 83],\r\n  ['D', 68],\r\n  ['F', 70],\r\n  ['G', 71],\r\n  ['H', 72],\r\n  ['J', 74],\r\n  ['K', 75],\r\n  ['L', 76],\r\n  ['Z', 90],\r\n  ['X', 88],\r\n  ['C', 67]\r\n];","import { castCodes, serviceBtns, resetBtn, confirmBtns, answersCodes } from './keycodes'\r\n\r\n// приведение клавиш доп.клавиатуры к кодам основной цифровой клавиатуры\r\nfunction cast(keyCode) {\r\n  if (castCodes[keyCode] !== undefined) return castCodes[keyCode];\r\n  return keyCode;\r\n}\r\n\r\nfunction checkAnswerSelected(keyCode) {\r\n  return answersCodes.includes(keyCode)\r\n}\r\n\r\nfunction checkResetBtn(keyCode) {\r\n  return resetBtn.includes(keyCode)\r\n\r\n}\r\n\r\nfunction checkConfirmBtn(keyCode) {\r\n  return confirmBtns.includes(keyCode)\r\n}\r\n\r\nfunction checkServiceBtn(keyCode) {\r\n  return serviceBtns.includes(keyCode)\r\n}\r\n\r\nconst defineSelectedAnswer = (keyCode) => {\r\n  if (checkAnswerSelected(keyCode)) {\r\n    return {\r\n      do: 1,\r\n      trueCode: cast(keyCode)\r\n    }\r\n  }\r\n  if (checkServiceBtn(keyCode)) {\r\n    return {\r\n      do: 4\r\n    }\r\n  }\r\n  if (checkResetBtn(keyCode)) {\r\n    return {\r\n      do: 2\r\n    }\r\n  }\r\n  if (checkConfirmBtn(keyCode)) {\r\n    return {\r\n      do: 3\r\n    }\r\n  }\r\n  return {\r\n    do: 4\r\n  }\r\n}\r\n\r\nexport default defineSelectedAnswer","import { keycodes } from './keycodes'\r\n\r\n// формирует вопрос, на основании логики и ранее сохраненных результатов\r\nconst questionFormation = (poll, count, result, logic, setResults) => {\r\n  const question = poll.questions[count]\r\n  let keyCodesPool = []\r\n\r\n  // проверка на видимость ответа в перечне (ВНЕШНЯЯ ЛОГИКА - видимость)\r\n  const visibleAnswers = logic.invisible ? question.answers.filter(obj => !logic.invisible.includes(obj.code))\r\n    : question.answers\r\n\r\n  // массив для проверrи на уникальность\r\n  const arrayOfBlockedCodes = []\r\n  // const arrayOfBlockedCodes = logic.criticalExclude.reduce((acum, val) => [...acum, ...val.explPool], [])\r\n\r\n  let newAnswers = visibleAnswers.map((obj, i) => {\r\n    // надстройка для объекта - ответ\r\n    let suffix = {\r\n      freeAnswer: false,\r\n      showFreeAnswer: false,\r\n      freeAnswerText: '',\r\n      focus: false,\r\n      selected: false,\r\n      disabled: false\r\n    }\r\n    if (visibleAnswers.length > keycodes.length) {\r\n      keyCodesPool[i] = [i, i + 1]\r\n    } else {\r\n      keyCodesPool[i] = keycodes[i][1]\r\n      suffix = {\r\n        ...suffix,\r\n        showIndex: keycodes[i][0],\r\n        keyCode: keycodes[i][1],\r\n      }\r\n    }\r\n    // восстанавливаем ответы !\r\n    if (result.pool.includes(obj.code)) {\r\n      suffix = {\r\n        ...suffix,\r\n        selected: true\r\n      }\r\n    }\r\n    // проверка на блокировку ответа (ВНЕШНЯЯ ЛОГИКА - уникальность)\r\n    if (arrayOfBlockedCodes.includes(obj.code)) {\r\n      suffix = {\r\n        ...suffix,\r\n        disabled: true\r\n      }\r\n    }\r\n    // проверка на свободный ответ (ВНЕШНЯЯ ЛОГИКА - свободный ответ)\r\n    if (logic.freeAnswers.includes(obj.code)) {\r\n      suffix = {\r\n        ...suffix,\r\n        freeAnswer: true,\r\n        focus: true\r\n      }\r\n    }\r\n    if (result[question.id]) {\r\n      let data = result[question.id].data\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (obj.code === data[i].answerCode && data[i].freeAnswerText !== '') {\r\n          suffix = {\r\n            ...suffix,\r\n            freeAnswer: true,\r\n            showFreeAnswer: true,\r\n            freeAnswerText: data[i].freeAnswerText,\r\n            focus: false\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const resultQ = { ...obj, ...suffix }\r\n    return resultQ\r\n  })\r\n\r\n  // надстройка для объекта - вопрос\r\n  let qSuffix = {\r\n    mega: false,\r\n    megaMltp: false,\r\n    multiple: false                                      // много возможных ответов\r\n  }\r\n\r\n  if (question.limit > 1) {\r\n    qSuffix = {\r\n      ...qSuffix,\r\n      multiple: true\r\n    }\r\n  }\r\n\r\n  // проверка сколько всего ответов в вопросе -> если много, то формируем multiple select\r\n  if (visibleAnswers.length > keycodes.length) {\r\n    qSuffix = {\r\n      ...qSuffix,\r\n      mega: true,\r\n      megaMltp: question.limit\r\n    }\r\n  } else {\r\n    qSuffix = {\r\n      ...qSuffix,\r\n      keyCodesPool\r\n    }\r\n  }\r\n\r\n  if (result[question.id] === undefined) {\r\n    setResults(prevState => ({\r\n      ...prevState,\r\n      [question.id]: {\r\n        data: [],\r\n        skip: false\r\n      }\r\n    }))\r\n  }\r\n  const data = {\r\n    ...question,\r\n    ...qSuffix,\r\n    answers: newAnswers,\r\n\r\n  }\r\n  // console.log(data);\r\n  return {\r\n    next: false,\r\n    data\r\n  }\r\n}\r\n\r\nexport default questionFormation","const beep = (config) => {\r\n  let audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\n  config = Object.assign({\r\n    volume: 25 / 100,\r\n    frequency: 3020,\r\n    duration: 150,\r\n    type: 'sine'\r\n  }, config);\r\n\r\n  let oscillator = audioCtx.createOscillator();\r\n  let gainNode = audioCtx.createGain();\r\n  oscillator.connect(gainNode);\r\n  gainNode.connect(audioCtx.destination);\r\n  gainNode.gain.value = config.volume;\r\n  oscillator.frequency.value = config.frequency;\r\n  oscillator.type = config.type;\r\n  oscillator.start();\r\n  setTimeout(\r\n    function () {\r\n      oscillator.stop();\r\n    },\r\n    config.duration\r\n  );\r\n}\r\nexport default beep","import React, { Fragment, useEffect, useState } from 'react'\r\nimport Question from './components/Question'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport defineSelectedAnswer from '../../lib/defineSelectedAnswer'\r\nimport questionFormation from '../../lib/questionFormation'\r\nimport beep from '../../lib/beep'\r\n// import { logics } from '../../lib/testLogic'\r\n// import mainLogic from '../../lib/mainLogic'\r\n\r\nconst KEY_TYPE = 'keyup'\r\nconst STEP_DELAY = 200\r\nconst MOVE_DELAY = 0\r\n\r\nconst ANSWER_SELECTED = 1\r\nconst RESET_RESULTS = 2\r\nconst CONFIRM_QUESTION = 3\r\nconst SKIP = 4\r\n\r\nconst PollDrive = ({ poll, logics, mainDiv, setCurrentQuestion }) => {\r\n  const questionsLimit = poll.questions.length\r\n  const [question, setQuestion] = useState(null)\r\n  const [userSettings, setUserSettings] = useState({\r\n    codesShow: true\r\n  })\r\n  const [logic, setLogic] = useState(logics)\r\n  const [count, setCount] = useState(0)\r\n  const [results, setResults] = useState(\r\n    {\r\n      pool: []\r\n    }\r\n  )\r\n  const keyUpHandler = ({ target, keyCode }) => {\r\n    if (target.nodeName == 'BODY') {\r\n      const nextStep = defineSelectedAnswer(keyCode)\r\n      switch (nextStep.do) {\r\n        case ANSWER_SELECTED: {\r\n          mainLogic(nextStep.trueCode)\r\n          return\r\n        }\r\n        case CONFIRM_QUESTION: {\r\n          confirmResults()\r\n          return\r\n        }\r\n        case RESET_RESULTS: {\r\n          resetAnswers()\r\n          return\r\n        }\r\n        case SKIP: {\r\n          return                                                    // нажата системная клавиша, не относящаяся к опросу\r\n        }\r\n      }\r\n    } else {\r\n      console.log('input');\r\n    }\r\n  }\r\n\r\n  const resetAnswers = () => {\r\n    const savedCodes = results[question.id].data.reduce((acum, val) => [...acum, val.answerCode], [])\r\n    setResults(prevState => ({\r\n      ...prevState,\r\n      [question.id]: {\r\n        ...prevState[question.id],\r\n        data: []\r\n      },\r\n      pool: prevState.pool.filter(obj => {\r\n        return savedCodes.includes(obj) ? false : true\r\n      })\r\n    }))\r\n    setQuestion(prevState => ({\r\n      ...prevState,\r\n      answers: prevState.answers.map(\r\n        answer => true ? { ...answer, selected: false, showFreeAnswer: false } : answer\r\n      )\r\n    }))\r\n    const arrayOfCodes = question.answers.reduce((acum, val) => [...acum, val.code], [])\r\n    // обновить логику и проверить запрещенные ответы для данного вопроса для их перерисовки!!!!!!\r\n    const arrayToCheck = logic.criticalExclude\r\n      .filter(obj => !arrayOfCodes.includes(obj.code))\r\n      .reduce((acum, val) => [...acum, ...val.explPool], [])\r\n    // если осталось что проверять\r\n    if (arrayToCheck.length) {\r\n      setQuestion(prevState => ({\r\n        ...prevState,\r\n        answers: prevState.answers.map(\r\n          answer => arrayToCheck.includes(answer.code) ? answer : { ...answer, disabled: false }\r\n        )\r\n      }))\r\n    } else {\r\n      // снимаем все ограничения с текущих ответов\r\n      setQuestion(prevState => ({\r\n        ...prevState,\r\n        answers: prevState.answers.map(\r\n          answer => ({ ...answer, disabled: false })\r\n        )\r\n      }))\r\n    }\r\n    // изменить!!!!!\r\n    setLogic(prevState => ({\r\n      ...prevState,\r\n      criticalExclude: prevState.criticalExclude.filter(obj => !arrayOfCodes.includes(obj.code))\r\n    }))\r\n  }\r\n\r\n  const confirmResults = () => {\r\n    if (results[question.id].data.length) {\r\n      goToNext()\r\n      return\r\n    }\r\n    beep()\r\n  }\r\n\r\n  const mainLogic = (code) => {\r\n    const trueCode = +code\r\n    const keyCodesPool = question.keyCodesPool\r\n    const selectedAnswer = question.answers.filter(obj => obj.keyCode === trueCode)[0]\r\n    // движение по опросу\r\n    if (trueCode === 39) {\r\n      setTimeout(() => {\r\n        goToNext()\r\n      }, MOVE_DELAY)\r\n      return\r\n    } else if (trueCode === 37) {\r\n      setTimeout(() => {\r\n        goToPrevious()\r\n      }, MOVE_DELAY)\r\n      return\r\n    }\r\n\r\n    if (keyCodesPool.includes(trueCode)) {                                  // входит ли код клавиатуры в перечень ответов\r\n      if (results.pool.includes(selectedAnswer.code)) {\r\n        // промежуточные результаты уже содержат выбранный код => удаляем промежуточный результат => обновляем текущий вью\r\n        setResults(prevState => ({\r\n          ...prevState,\r\n          [question.id]: {\r\n            ...prevState[question.id],\r\n            data: prevState[question.id].data.filter(el => el.answerCode !== selectedAnswer.code)\r\n          },\r\n          pool: prevState.pool.filter(el => el !== selectedAnswer.code)\r\n        }))\r\n        setQuestion(prevState => ({\r\n          ...prevState,\r\n          answers: prevState.answers.map(\r\n            answer => answer.code === selectedAnswer.code ? { ...answer, selected: false, showFreeAnswer: false } : answer\r\n          ),\r\n        }))\r\n        // обновить логику и проверить запрещенные ответы для данного вопроса для их перерисовки!!!!!!\r\n        const arrayToCheck = logic.criticalExclude\r\n          .filter(obj => obj.code !== selectedAnswer.code)\r\n          .reduce((acum, val) => [...acum, ...val.explPool], [])\r\n        // если осталось что проверять\r\n        if (arrayToCheck.length) {\r\n          setQuestion(prevState => ({\r\n            ...prevState,\r\n            answers: prevState.answers.map(\r\n              answer => arrayToCheck.includes(answer.code) ? answer : { ...answer, disabled: false }\r\n            )\r\n          }))\r\n        } else {\r\n          // снимаем все ограничения с текущих ответов\r\n          setQuestion(prevState => ({\r\n            ...prevState,\r\n            answers: prevState.answers.map(\r\n              answer => ({ ...answer, disabled: false })\r\n            )\r\n          }))\r\n        }\r\n        setLogic(prevState => ({\r\n          ...prevState,\r\n          criticalExclude: prevState.criticalExclude.filter(obj => obj.code !== selectedAnswer.code)\r\n        }))\r\n        return\r\n      }\r\n      // проверка на уникальность ответа и выбраннного до этого противоречивого ответа (ВНЕШНЯЯ ЛОГИКА - уникальность)\r\n      if (logic.unique.includes(selectedAnswer.code)) {\r\n        if (results[question.id].data.length) {\r\n          beep()\r\n          return\r\n        }\r\n      }\r\n      // проверка на активность ответа и ограничение по количеству ответов\r\n      if (selectedAnswer.disabled || results[question.id].data.length >= question.limit) {\r\n        beep()\r\n        return\r\n      }\r\n      // проверка на свободный ответ\r\n      if (selectedAnswer.freeAnswer) {\r\n        setQuestion(prevState => ({\r\n          ...prevState,\r\n          answers: prevState.answers.map(\r\n            answer => answer.keyCode === selectedAnswer.keyCode ? { ...answer, selected: true, showFreeAnswer: true } : answer\r\n          )\r\n        }))\r\n        return\r\n      }\r\n      const result = {\r\n        answerCode: selectedAnswer.code,\r\n        freeAnswer: false,\r\n        freeAnswerText: ''\r\n      }\r\n      let newResultState = Object.assign({}, results);\r\n      newResultState[question.id].data.push(result)\r\n      newResultState.pool.push(selectedAnswer.code)\r\n      setResults(newResultState)\r\n\r\n      setQuestion(prevState => ({\r\n        ...prevState,\r\n        answers: prevState.answers.map(\r\n          answer => answer.keyCode === trueCode ? { ...answer, selected: true } : answer\r\n        ),\r\n      }))\r\n      // проверить на уникальность (ВНЕШНЯЯ ЛОГИКА - уникальность) -> запретить другие ответы\r\n      if (logic.unique.includes(selectedAnswer.code)) {\r\n        setQuestion(prevState => ({\r\n          ...prevState,\r\n          answers: prevState.answers.map(\r\n            answer => answer.keyCode === trueCode ? answer : { ...answer, disabled: true }\r\n          )\r\n        }))\r\n        const poolOfExcludedCodes = question.answers.filter(answer => answer.code !== selectedAnswer.code).map(answer => answer.code)\r\n        setLogic(prevState => ({\r\n          ...prevState,\r\n          criticalExclude: [\r\n            ...prevState.criticalExclude,\r\n            { code: selectedAnswer.code, explPool: poolOfExcludedCodes }\r\n          ]\r\n        }))\r\n      }\r\n      // проверка на ЛИМИТ\r\n      if (results[question.id].data.length >= question.limit) {\r\n        // переходим дальше\r\n        setTimeout(() => {\r\n          goToNext()\r\n        }, STEP_DELAY)\r\n        return\r\n      }\r\n    } else {\r\n      beep()\r\n    }\r\n  }\r\n\r\n  const goToNext = () => {\r\n    if (count < questionsLimit - 1) {\r\n      setCount(count + 1)\r\n    } else {\r\n      setCount(0)\r\n    }\r\n  }\r\n\r\n  const goToPrevious = () => {\r\n    if (count === 0) return\r\n    setCount(count - 1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(KEY_TYPE, keyUpHandler)\r\n    return () => {\r\n      document.removeEventListener(KEY_TYPE, keyUpHandler)\r\n    };\r\n  })\r\n\r\n  // Кнопка с треброванием выдать ID и сохранить !!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n  useEffect(() => {\r\n    // первичная инициализация, наложение логики и сохранение в стор следующего вопроса + восстановление промежуточных итогов\r\n    const newQuestion = questionFormation(poll, count, results, logic, setResults);\r\n    if (!newQuestion) return\r\n    if (newQuestion.next) {\r\n      setResults(prevState => ({\r\n        ...prevState\r\n      }))\r\n      // все ответы забанены\r\n      // ???????????????????\r\n      setCount(count + 1)\r\n      return\r\n    }\r\n    setQuestion(newQuestion.data)\r\n    setCurrentQuestion(newQuestion.data)\r\n  }, [count])\r\n\r\n  const clickHandler = (target) => {\r\n    const code = target.dataset.code\r\n    const selectedAnswer = question.answers.filter(obj => obj.keyCode === +code)[0]\r\n    // проверка, если поле со свободным ответом необходимо отредактировать\r\n    if (selectedAnswer.freeAnswer && selectedAnswer.selected) {\r\n      return\r\n    }\r\n    mainLogic(code)\r\n  }\r\n\r\n  const blurHandler = (e) => {\r\n    const value = e.currentTarget.value\r\n    const selectedCode = e.currentTarget.dataset.code\r\n    const selectedKeyCode = e.currentTarget.dataset.keycode\r\n    if (value === '') {\r\n      // пустое поле не позволительно -> стираем из промежуточного результата и обновляем вью\r\n      setResults(prevState => ({\r\n        ...prevState,\r\n        [question.id]: {\r\n          ...prevState[question.id],\r\n          data: prevState[question.id].data.filter(el => el.answerCode !== selectedCode)\r\n        },\r\n        pool: prevState.pool.filter(el => el !== selectedCode)\r\n      }))\r\n      setQuestion(prevState => ({\r\n        ...prevState,\r\n        answers: prevState.answers.map(\r\n          answer => answer.code === selectedCode ? { ...answer, selected: false, showFreeAnswer: false } : answer\r\n        )\r\n      }))\r\n      const arrayToCheck = logic.criticalExclude\r\n        .filter(obj => obj.code !== selectedCode)\r\n        .reduce((acum, val) => [...acum, ...val.explPool], [])\r\n      // если осталось что проверять\r\n      if (arrayToCheck.length) {\r\n        setQuestion(prevState => ({\r\n          ...prevState,\r\n          answers: prevState.answers.map(\r\n            answer => arrayToCheck.includes(answer.code) ? answer : { ...answer, disabled: false }\r\n          )\r\n        }))\r\n      } else {\r\n        // снимаем все ограничения с текущих ответов\r\n        setQuestion(prevState => ({\r\n          ...prevState,\r\n          answers: prevState.answers.map(\r\n            answer => ({ ...answer, disabled: false })\r\n          )\r\n        }))\r\n      }\r\n      setLogic(prevState => ({\r\n        ...prevState,\r\n        criticalExclude: prevState.criticalExclude.filter(obj => obj.code !== selectedCode)\r\n      }))\r\n      return\r\n    }\r\n    // поле не пустое -> сохраняем результат\r\n    const result = {\r\n      answerCode: selectedCode,\r\n      freeAnswer: false,\r\n      freeAnswerText: value\r\n    }\r\n    if (results.pool.includes(selectedCode)) {\r\n      setResults(prevState => ({\r\n        ...prevState,\r\n        [question.id]: {\r\n          ...prevState[question.id],\r\n          data: prevState[question.id].data.map(\r\n            answer => answer.answerCode === selectedCode ? { ...answer, freeAnswerText: value } : answer\r\n          )\r\n        },\r\n        pool: [\r\n          ...prevState.pool,\r\n          selectedCode\r\n        ]\r\n      }))\r\n    } else {\r\n      setResults(prevState => ({\r\n        ...prevState,\r\n        [question.id]: {\r\n          ...prevState[question.id],\r\n          data: [\r\n            ...prevState[question.id].data,\r\n            result\r\n          ]\r\n        },\r\n        pool: [\r\n          ...prevState.pool,\r\n          selectedCode\r\n        ]\r\n      }))\r\n    }\r\n    // проверить на уникальность (ВНЕШНЯЯ ЛОГИКА - уникальность) -> запретить другие ответы\r\n    if (logic.unique.includes(selectedCode)) {\r\n      setQuestion(prevState => ({\r\n        ...prevState,\r\n        answers: prevState.answers.map(\r\n          answer => answer.keyCode === +selectedKeyCode ? answer : { ...answer, disabled: true }\r\n        )\r\n      }))\r\n      const poolOfExcludedCodes = question.answers.filter(answer => answer.code !== selectedCode).map(answer => answer.code)\r\n      setLogic(prevState => ({\r\n        ...prevState,\r\n        criticalExclude: [\r\n          ...prevState.criticalExclude,\r\n          { code: selectedCode, explPool: poolOfExcludedCodes }\r\n        ]\r\n      }))\r\n    }\r\n    if (results[question.id].data.length >= question.limit - 1) {         // -1 т.к. не успевает обновится стейт\r\n      setTimeout(() => {\r\n        goToNext()\r\n      }, STEP_DELAY)\r\n    }\r\n  }\r\n  const codesShow = (e) => {\r\n    setUserSettings(prevState => ({\r\n      ...prevState,\r\n      codesShow: !prevState.codesShow\r\n    }))\r\n  }\r\n  const multipleHandler = (value, codes) => {\r\n    console.log(value, codes);\r\n    if (value.length) {\r\n      const codesPool = value.map(val => val.code)\r\n      const resultsPool = value.map(val => {\r\n        return {\r\n          answerCode: val.code,\r\n          // keyCode: val.keyCode,\r\n          freeAnswer: false,\r\n          freeAnswerText: ''\r\n        }\r\n      })\r\n      const clearPool = results.pool.filter(val => !codes.includes(val))\r\n      setResults(prevState => ({\r\n        ...prevState,\r\n        [question.id]: {\r\n          ...prevState[question.id],\r\n          data: [\r\n            ...resultsPool\r\n          ]\r\n        },\r\n        pool: [\r\n          ...clearPool,\r\n          ...codesPool\r\n        ]\r\n      }))\r\n      if (value.length) {\r\n        setTimeout(() => {\r\n          goToNext()\r\n        }, STEP_DELAY)\r\n      }\r\n      return\r\n    }\r\n    setResults(prevState => ({\r\n      ...prevState,\r\n      [question.id]: {\r\n        ...prevState[question.id],\r\n        data: []\r\n      },\r\n      pool: prevState.pool.filter(obj => !codes.includes(obj))\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <label>\r\n        <input type=\"checkbox\" onChange={codesShow} defaultChecked={userSettings.codesShow} />\r\n        Показывать коды ответов\r\n      </label>\r\n      {question &&\r\n        <Question\r\n          count={count}\r\n          question={question}\r\n          settings={userSettings}\r\n          clickHandler={clickHandler}\r\n          blurHandler={blurHandler}\r\n          multipleHandler={multipleHandler}\r\n        />\r\n      }\r\n      <Button onClick={goToPrevious} variant=\"contained\" style={{ margin: '5px' }}>Назад</Button>\r\n      <Button onClick={goToNext} variant=\"contained\" style={{ margin: '5px' }}>Вперед</Button>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PollDrive","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nexport default function CityDialog({ open, handleClose, save, cities }) {\r\n  const [state, setState] = useState(\"\")\r\n  const handleChange = (e) => {\r\n    const { options, selectedIndex, value } = e.target;\r\n    const id = value\r\n    const title = options[selectedIndex].innerHTML\r\n    setState({\r\n      id,\r\n      title\r\n    })\r\n  }\r\n\r\n  const handleSave = () => {\r\n    save(state)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">ГОРОД</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Выберите город в котором проводился опрос\r\n          </DialogContentText>\r\n          <Select\r\n            fullWidth\r\n            native\r\n            value={state.id}\r\n            onChange={e => handleChange(e)}\r\n          >\r\n            <option aria-label=\"None\" disabled selected value=\"\" />\r\n            {cities.map((city, i) =>\r\n              <option key={i} value={city.id}>{city.title}</option>\r\n            )}\r\n          </Select>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={handleSave} disabled={!Boolean(state)} color=\"primary\">\r\n            Сохранить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const pollDataQuery = gql`\r\n  query pollsQuery($id: ID!) {\r\n    poll(id: $id) {\r\n      id\r\n      questions{\r\n        id\r\n        title\r\n        limit\r\n        answers {\r\n          id\r\n          code\r\n          title\r\n        }\r\n      }\r\n      logic {\r\n        path\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const citiesQuery = gql`\r\n  query citiesQ {\r\n    cities {\r\n      id\r\n      title\r\n    }\r\n  }\r\n`","export const parseIni = (area) => {\r\n  let configData = area;\r\n  // let configData = area.value;\r\n  let regex = {\r\n    section: /^\\s*\\[\\s*([^\\]]*)\\s*\\]\\s*$/,\r\n    param: /^\\s*([^=]+?)\\s*=\\s*(.*?)\\s*$/,\r\n    comment: /^\\s*#.*$/\r\n  };\r\n  let config = {};\r\n  let lines = configData.split(/[\\r\\n]+/);\r\n  let section = null;\r\n  lines.forEach(function (line) {\r\n    if (regex.comment.test(line)) {\r\n      return;\r\n    } else if (regex.param.test(line)) {\r\n      let match = line.match(regex.param);\r\n      if (section) {\r\n        config[section][match[1]] = parseParams(match[2]);\r\n      } else {\r\n        config[match[1]] = parseParams(match[2]);\r\n      }\r\n    } else if (regex.section.test(line)) {\r\n      let match = line.match(regex.section);\r\n      config[match[1]] = {};\r\n      section = match[1];\r\n    } else if (line.length == 0 && section) {\r\n      section = null;\r\n    }\r\n  });\r\n  // console.log(config);\r\n  return concatLogic(config);\r\n}\r\n\r\nfunction concatLogic(config) {\r\n  let regex = /([0-9]{1,})/gm;\r\n  let result = {};\r\n  let property = null;\r\n  for (let key in config) {\r\n    property = key.match(/[a-zA-Z]*/gm)[0];\r\n    result[property] = {};\r\n  }\r\n  for (let key in config) {\r\n    property = key.match(/[a-zA-Z]*/gm)[0];\r\n    let suffix = key.match(regex);\r\n    if (suffix !== null) {\r\n      result[property][suffix] = config[key];\r\n    } else {\r\n      result[property][1] = config[key];\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction parseParams(data) {\r\n  // избавляемся от пробелов\r\n  let trimData = data.replace(/\\s*/g, '');\r\n  let regex = {\r\n    // range : /\\[(.+?)\\]/gm,\r\n    // single: /([0-9]{1,3})/gm,\r\n    srange: /([0-9]{1,3})|\\[(.+?)\\]/gm\r\n  };\r\n\r\n  let output = [];\r\n  let temp;\r\n  do {\r\n    temp = regex.srange.exec(trimData);\r\n    if (temp) {\r\n      // одиночные\r\n      if (temp[1] !== undefined) {\r\n        output.push(temp[1]);\r\n      }\r\n      // диапазон\r\n      if (temp[2] !== undefined) {\r\n        let range = temp[2];\r\n        output = output.concat(rangeToArray(range));\r\n      }\r\n    }\r\n  } while (temp);\r\n  return output;\r\n}\r\n\r\nfunction rangeToArray(data) {\r\n  let regex = /(\\d{1,3})\\s*-\\s*(\\d{1,3})/gm;\r\n  let result = (data.replace(regex, (...match) => {\r\n    let temp = [];\r\n    let start = match[1];\r\n    let end = match[2];\r\n    // если перепутаны места\r\n    if (start > end) {\r\n      start = match[2];\r\n      end = match[1];\r\n    }\r\n    let length = (end - start) + 1;\r\n    while (length) {\r\n      start = start + '';\r\n      temp.push(start.padStart(3, '0'));\r\n      start++\r\n      length--;\r\n    }\r\n    return temp;\r\n  }));\r\n  return result.split(',');\r\n}\r\n\r\nexport const normalizeLogic = (logic) => {\r\n  let normalizedLogic = {}\r\n  for (let key in logic) {\r\n    switch (key) {\r\n      case 'difficult':\r\n        normalizedLogic = {\r\n          ...normalizedLogic,\r\n          difficult: logic[key][1].answers\r\n        }\r\n        break\r\n      case 'freeAnswers':\r\n        normalizedLogic = {\r\n          ...normalizedLogic,\r\n          freeAnswers: logic[key][1].answers\r\n        }\r\n        break\r\n      case 'exclude':\r\n        const exclude = logic[key]\r\n        for (let key in exclude) {\r\n          if (exclude[key].critical[0] === '1') {\r\n            normalizedLogic = {\r\n              ...normalizedLogic,\r\n              criticalExclude: [\r\n                exclude[key].exclude\r\n              ]\r\n            }\r\n          } else {\r\n            normalizedLogic = {\r\n              ...normalizedLogic,\r\n              noncriticalExclude: [\r\n                exclude[key].exclude\r\n              ]\r\n            }\r\n          }\r\n        }\r\n        break\r\n      case 'unique':\r\n        normalizedLogic = {\r\n          ...normalizedLogic,\r\n          unique: logic[key][1].answers\r\n        }\r\n        break\r\n      case 'invisible':\r\n        normalizedLogic = {\r\n          ...normalizedLogic,\r\n          invisible: logic[key][1].answers\r\n        }\r\n        break\r\n    }\r\n  }\r\n  return normalizedLogic\r\n  return logic\r\n}","import React, { Fragment, useState, useRef } from 'react'\r\nimport Container from '@material-ui/core/Container'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport PollDrive from \"../../modules/PollDrive\";\r\nimport CityDialog from '../../components/CityDialog';\r\nimport { useQuery } from '@apollo/client'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { pollDataQuery, citiesQuery } from \"./queries\"\r\nimport { parseIni, normalizeLogic } from './utils'\r\n\r\nconst DriveWrap = ({ id }) => {\r\n  const mainDiv = useRef(null);\r\n  const history = useHistory();\r\n  const [poll, setPoll] = useState(null)\r\n  const [poolOfCities, setPoolOfCities] = useState(null)\r\n  const [openCityDialog, setOpenCityDialog] = useState(true);\r\n  const [logic, setPollLogic] = useState(null)\r\n  const [currentCity, setCurrentCity] = useState(null)\r\n  const [currentQuestion, setCurrentQuestion] = useState({\r\n    'multiple': false\r\n  })\r\n  const { pollLoading, error, data } = useQuery(pollDataQuery, {\r\n    variables: { id },\r\n    onCompleted: (data) => {\r\n      setPoll({\r\n        id: data.poll.id,\r\n        questions: data.poll.questions\r\n      })\r\n      handleConfigFile(data.poll.logic.path)\r\n    }\r\n  })\r\n  const handleConfigFile = (filePath) => {\r\n    fetch(`http://localhost:4000${filePath}`)\r\n      .then((r) => r.text())\r\n      .then(text => {\r\n        const logic = parseIni(text)\r\n        // Нормализация ЛОГИКИ - здесь формируется ВСЯ ЛОГИКА Опроса !!!\r\n        const ttt = normalizeLogic(logic)\r\n        console.log(ttt);\r\n        setPollLogic(ttt)\r\n      })\r\n\r\n  }\r\n  const { citiesLoading, cError, cData } = useQuery(citiesQuery, {\r\n    onCompleted: (cData) => {\r\n      setPoolOfCities(cData.cities)\r\n    }\r\n  })\r\n\r\n  if (!poll || !poolOfCities || !logic) return (\r\n    <Fragment>\r\n      <CircularProgress />\r\n      <p>Загрузка. Подождите пожалуйста</p>\r\n    </Fragment>\r\n  )\r\n\r\n  if (error || cError) return <p>Error :(</p>;\r\n\r\n  const saveCity = (city) => {\r\n    setCurrentCity(city)\r\n    setOpenCityDialog(false)\r\n  }\r\n\r\n  const closeDialog = () => {\r\n    setOpenCityDialog(false)\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div style={{ backgroundColor: currentQuestion.multiple ? 'rgb(208 226 252)' : '#fff' }}>\r\n        <Container maxWidth=\"md\">\r\n          <CityDialog open={openCityDialog} cities={poolOfCities} save={saveCity} handleClose={closeDialog} />\r\n          <PollDrive poll={poll} logics={logic} mainDiv={mainDiv} setCurrentQuestion={setCurrentQuestion} />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default DriveWrap","import React, { Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport SettingBar from '../components/SettingBar'\r\nimport DriveWrap from \"../containers/DriveWrap\";\r\n\r\nconst Drive = () => {\r\n  let { id, code } = useParams();\r\n\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title={`Опрос ` + code + ` - вбивание`} />\r\n      <DriveWrap id={id}/>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Drive","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nconst PollResults = ({ id }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tabs\r\n        orientation=\"vertical\"\r\n        variant=\"scrollable\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        className={classes.tabs}\r\n      >\r\n        <Tab label=\"Общие\" {...a11yProps(0)} />\r\n        <Tab label=\"По Н.П.\" {...a11yProps(1)} />\r\n        <Tab label=\"Линейка\" {...a11yProps(2)} />\r\n        <Tab label=\"Сравнения\" {...a11yProps(3)} />\r\n        <Tab label=\"Графики\" {...a11yProps(4)} />\r\n        <Tab label=\"Пакетный\" {...a11yProps(5)} />\r\n      </Tabs>\r\n      <TabPanel value={value} index={0}>\r\n        Результаты опроса ID - {id}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        Распределение по населенным пунктам\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        Линейное распределение ответов\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        Сравнения с аналогичными опросами\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        Графики\r\n      </TabPanel>\r\n      <TabPanel value={value} index={5}>\r\n        Пакетный ВВод данных\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PollResults","import React, { Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport SettingBar from '../components/SettingBar'\r\nimport PollResults from '../modules/PollResults'\r\n\r\nconst Results = () => {\r\n  let { id, code } = useParams();\r\n\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title={`Результаты ` + code} />\r\n      <div style={{ paddingTop: '10px' }}>\r\n        <Container maxWidth=\"xl\">\r\n          <PollResults id={id} />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Results","import React, { Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport SettingBar from '../components/SettingBar'\r\n// import XmlAnalyzer from '../components/'\r\n\r\nconst Analyze = () => {\r\n  let { id } = useParams();\r\n\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title={`Анализ XML`} />\r\n      <Container maxWidth=\"md\">\r\n        <h2>Анализ XML</h2>\r\n        {/* <XmlAnalyzer /> */}\r\n      </Container>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Analyze","import React, { Fragment, useState, useEffect } from 'react'\r\nimport DevTools from 'mobx-react-devtools'\r\nimport { observable } from 'mobx'\r\nimport { observer } from 'mobx-react'\r\n\r\nconst Test = observer(() => {\r\n  const [timerData] = useState(() =>\r\n    observable({\r\n      secondsPassed: 0,\r\n    })\r\n  )\r\n  useEffect(() => {\r\n    const handle = setInterval(() => {\r\n      timerData.secondsPassed++\r\n    }, 1000)\r\n    return () => {\r\n      clearTimeout(handle)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <span>Seconds passed: {timerData.secondsPassed} </span>\r\n  )\r\n})\r\n\r\nexport default Test","import React, { Fragment } from 'react'\r\nimport Container from '@material-ui/core/Container';\r\nimport { observer } from 'mobx-react'\r\n\r\nimport SettingBar from '../components/SettingBar'\r\nimport Test from '../containers/Test'\r\n\r\n// const Tester = observer(\r\nconst Tester = () => {\r\n\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title='Тестирование инерфейса' />\r\n      <Container maxWidth=\"lg\">\r\n        <Test />\r\n      </Container>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Tester","import React, { Fragment } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst CommonSetting = ({ id }) => {\r\n  return (\r\n    <Fragment>\r\n      <Grid container>\r\n        <div>Общие настройки в том числе - изменение данных по опросу!</div>\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default CommonSetting","import { gql } from '@apollo/client'\r\n\r\nexport const logicQuery = gql`\r\n  query logicQuery($id: ID!) {\r\n    pollLogic(id: $id) {\r\n      id\r\n      path\r\n    }\r\n  }\r\n`\r\n\r\nexport const saveConfigChanges = gql`\r\nmutation saveConfigChanges($path: String!, $text: String!) {\r\n  saveConfig(path: $path, text: $text)\r\n}\r\n`","import React, { Fragment, useState, useRef } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { useQuery } from '@apollo/client'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { logicQuery, saveConfigChanges } from \"./queries\"\r\n\r\n\r\nconst ConfigEditor = ({ id }) => {\r\n  const [config, setConfig] = useState(null)\r\n  const [filePath, setFilePath] = useState(null)\r\n  const textRef = useRef()\r\n  const { loading, error, data, refetch } = useQuery(logicQuery, {\r\n    variables: { id },\r\n    onCompleted: () => {\r\n      handleConfigFile(data.pollLogic.path)\r\n    }\r\n  })\r\n\r\n  const [saveConfig] = useMutation(saveConfigChanges, {\r\n  })\r\n\r\n  const handleConfigFile = (filePath) => {\r\n    setFilePath(filePath)\r\n    fetch(`http://localhost:4000${filePath}`)\r\n      .then((r) => r.text())\r\n      .then(text => {\r\n        setConfig(text)\r\n      })\r\n  }\r\n\r\n  const handleSave = (e) => {\r\n    saveConfig({\r\n      variables: {\r\n        path: filePath,\r\n        text: textRef.current.value\r\n      }\r\n    })\r\n  }\r\n\r\n  if (loading || !config) return (\r\n    <Fragment>\r\n      <CircularProgress />\r\n      <p>Загрузка. Подождите пожалуйста</p>\r\n    </Fragment>\r\n  )\r\n\r\n  if (error) return <p>Ошибка. Что-то пошло не так! :(</p>;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={12} sm container>\r\n        <Grid container>\r\n          <Grid item xs container direction=\"column\" spacing={2} alignItems=\"flex-start\">\r\n            <Grid item xs={12}>\r\n              Отображение и настройка конфигурационного файла\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs container direction=\"column\" spacing={1} alignItems=\"flex-end\">\r\n            <Grid item xs={12}>\r\n              <Tooltip title=\"Сохранить\">\r\n                <SaveIcon className=\"save-config\" onClick={handleSave} />\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <textarea\r\n              ref={textRef}\r\n              defaultValue={config}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ConfigEditor","import { gql } from '@apollo/client'\r\n\r\nexport const pollQuery = gql`\r\n  query pollQuery($id: ID!) {\r\n    poll(id: $id) {\r\n      id\r\n      title\r\n      code\r\n      liter\r\n      questions {\r\n        id\r\n        title\r\n        limit\r\n        order\r\n        answers {\r\n          id\r\n          title\r\n          order\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const saveNewLimit = gql`\r\nmutation saveNewLimit($id: ID!, $limit: Int!) {\r\n  newLimit(id: $id, limit: $limit)\r\n}\r\n`\r\n\r\nexport const saveNewOrder = gql`\r\nmutation saveNewOrder($questions: [ReorderedArray]) {\r\n  newOrder(neworder: $questions)\r\n}\r\n`","import React, { useState } from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst QuestionCard = ({ question, handleLimitInput }) => {\r\n  const [val, setVal] = useState(question.limit)\r\n\r\n  const handleKeyUp = (e) => {\r\n    if (e.keyCode === 13) e.currentTarget.blur()\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const currentValue = e.currentTarget.value\r\n    console.log(e);\r\n    if (currentValue < 1) {\r\n      setVal(1)\r\n    } else if (currentValue > 99) {\r\n      setVal(99)\r\n    } else {\r\n      setVal(currentValue)\r\n    }\r\n  }\r\n\r\n  const handleBlur = (e) => {\r\n    handleLimitInput({\r\n      id: question.id,\r\n      limit: val\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6} lg={3} xl={2}>\r\n      <Paper className=\"question-item\" elevation={2}>\r\n        <Grid item xs={12} sm container>\r\n          <Grid item xs container direction=\"column\" spacing={2} alignItems=\"flex-start\">\r\n            <Grid item xs>\r\n              <Tooltip title=\"Очередность отображения\" aria-label=\"add\">\r\n                <Typography variant=\"body2\" color=\"primary\">\r\n                  {question.order}\r\n                </Typography>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs container direction=\"column\" spacing={3} alignItems=\"flex-end\" >\r\n            <Grid item xs alignItems=\"center\" style={{ cursor: 'pointer' }}>\r\n              <Tooltip title=\"Меню. В разработке\" aria-label=\"add\">\r\n                <MoreVertIcon />\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Tooltip title=\"Лимит ответов\" aria-label=\"add\">\r\n              <input\r\n                type=\"number\"\r\n                className=\"question-limit-input\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                onKeyUp={handleKeyUp}\r\n                value={val}\r\n              />\r\n            </Tooltip>\r\n          </Grid>\r\n        </Grid>\r\n        <Typography className=\"question-title\">{question.title}</Typography>\r\n\r\n      </Paper>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default QuestionCard","import React, { Fragment, useState } from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { useQuery } from '@apollo/client'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { pollQuery, saveNewLimit, saveNewOrder } from \"./queries\"\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport arrayMove from \"array-move\";\r\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\r\nimport QuestionCard from '../QuestionCard'\r\n\r\nconst ReoderEditor = ({ id }) => {\r\n  const [questions, setQuestions] = useState(null)\r\n  const [prevOrder, setPrevOrder] = useState(null)\r\n  const { loading, error, data, refetch } = useQuery(pollQuery, {\r\n    variables: { id },\r\n    onCompleted: () => setQuestions(data.poll.questions)\r\n  })\r\n  const [saveLimit] = useMutation(saveNewLimit, {\r\n    // TODO: refetchQueries -> Обновить PollDrive cache!!!\r\n\r\n    // onCompleted: (answer) => console.log(answer)\r\n    // TODO: \"При ОШИБКЕ -> оповещения и восстановления!\"\r\n  })\r\n  const [saveOrder] = useMutation(saveNewOrder, {\r\n    // TODO: refetchQueries -> Обновить PollDrive cache!!!\r\n\r\n    // onCompleted: (answer) => console.log(answer)\r\n    // TODO: \"При ОШИБКЕ -> оповещения и восстановления!\"\r\n  })\r\n\r\n  if (loading || !questions) return (\r\n    <Fragment>\r\n      <CircularProgress />\r\n      <p>Загрузка. Подождите пожалуйста</p>\r\n    </Fragment>\r\n  )\r\n\r\n  if (error) return <p>Ошибка. Что-то пошло не так! :(</p>;\r\n\r\n  const handleLimitInput = (inputData) => {\r\n    const id = inputData.id\r\n    const limit = +inputData.limit\r\n    setQuestions(questions.map(question => question.id === id ? { ...question, limit: limit } : question))\r\n    saveLimit({\r\n      variables: {\r\n        id,\r\n        limit\r\n      }\r\n    })\r\n  }\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    setPrevOrder({ ...questions })\r\n    const newArray = arrayMove(questions, oldIndex, newIndex)\r\n    let deltaArray = []\r\n    const newOrder = newArray.reduce((acum, val, index) => {\r\n      if (val.order === index + 1) {\r\n        acum.push(val)\r\n      } else {\r\n        deltaArray.push({\r\n          id: val.id,\r\n          order: index + 1\r\n        })\r\n        acum.push({ ...val, order: index + 1 })\r\n      }\r\n      return acum\r\n    }, [])\r\n    saveOrder({\r\n      variables: {\r\n        questions: deltaArray\r\n      }\r\n    })\r\n    setQuestions(newOrder)\r\n  };\r\n\r\n  const SortableItem = SortableElement(({ question }) =>\r\n    <QuestionCard question={question} handleLimitInput={handleLimitInput} />\r\n  );\r\n\r\n  const SortableList = SortableContainer(({ questions }) => {\r\n    return (\r\n      <Grid container item xs={12} spacing={2}>\r\n        {questions.map((question, index) => (\r\n          <SortableItem key={`item-${question.id}`} index={index} question={question} />\r\n        ))}\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <SortableList\r\n        questions={questions}\r\n        onSortEnd={onSortEnd}\r\n        axis=\"xy\"\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ReoderEditor","import { gql } from '@apollo/client'\r\n\r\nexport const deletePoll = gql`\r\n  mutation deletePoll($id: ID!) {\r\n    deletePoll(id: $id) {\r\n      title\r\n    }\r\n  }\r\n`","import React, { Fragment, useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { pollsQuery } from '../../../../containers/HomeWrap/queries'\r\nimport { deletePoll } from './mutations'\r\n\r\nconst DeletePoll = ({ id, code }) => {\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false)\r\n  const [incorrect, setIncorrect] = useState(true)\r\n  const [delPoll, { poll }] = useMutation(deletePoll, {\r\n    onCompleted: () => {\r\n      history.push(\"/\")\r\n    }\r\n  })\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handlePollDel = (id) => {\r\n    delPoll({\r\n      variables: {\r\n        id\r\n      },\r\n      refetchQueries: [{ query: pollsQuery }]\r\n    })\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const text = e.currentTarget.value.toUpperCase()\r\n    e.currentTarget.value = text\r\n    if (text.toUpperCase() === code) {\r\n      setIncorrect(false)\r\n    } else {\r\n      setIncorrect(true)\r\n    }\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    handlePollDel(id)\r\n  }\r\n\r\n  const deleteQuery = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Удаление</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Это действие не может быть отменено.\r\n              Оно приведет к безвозвратному удалению ВСЕХ данных опроса.\r\n            </Typography>\r\n            <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n              Пожалуйста, введите КОД опроса.\r\n            </Typography>\r\n          </DialogContentText>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Код опроса\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={handleChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={handleDelete} color=\"primary\" disabled={incorrect}>\r\n            Удалить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Grid item container xs={12}>\r\n        <Grid >\r\n          <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n            удаление опроса\r\n        </Typography>\r\n          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n            После удаления ОПРОСА пути назад уже не будет. Пожалуйста, будьте внимательны.\r\n          </Typography>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={deleteQuery}>\r\n            Удалить опрос\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default DeletePoll","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport CommonSetting from './components/Common'\r\nimport ConfigEditor from './components/ConfigEditor'\r\nimport ReoderEditor from './components/ReoderEditor';\r\nimport DeletePoll from './components/DeletePoll'\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      className=\"right-pannel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction allProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n    overflow: 'visible'\r\n  },\r\n}));\r\n\r\n\r\nconst PollSettings = ({ id, code }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tabs\r\n        orientation=\"vertical\"\r\n        variant=\"scrollable\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        className={classes.tabs}\r\n      >\r\n        <Tab label=\"Общие\" {...allProps(0)} />\r\n        <Tab label=\"Порядок\" {...allProps(1)} />\r\n        <Tab label=\"Конфиг\" {...allProps(2)} />\r\n        <Tab label=\"Удаление\" {...allProps(3)} />\r\n      </Tabs>\r\n      <TabPanel value={value} index={0}>\r\n        <CommonSetting id={id} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <ReoderEditor id={id} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <ConfigEditor id={id} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <DeletePoll id={id} code={code} />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PollSettings","import React, { Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container';\r\nimport SettingBar from '../components/SettingBar'\r\nimport PollSettings from '../modules/PollSettings'\r\n\r\nconst Settings = () => {\r\n  let { id, code } = useParams();\r\n\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title={`Настройки опроса ` + code} />\r\n      <div style={{ paddingTop: '10px' }}>\r\n        <Container maxWidth=\"xl\">\r\n          <PollSettings id={id} code={code} />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Settings","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nconst PollFiles = ({ id }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tabs\r\n        orientation=\"vertical\"\r\n        variant=\"scrollable\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        className={classes.tabs}\r\n      >\r\n        <Tab label=\"Файлы\" {...a11yProps(0)} />\r\n      </Tabs>\r\n      <TabPanel value={value} index={0}>\r\n        Файлы опроса - {id}\r\n        <p>В РАЗРАБОТКЕ</p>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PollFiles","import React, { Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport SettingBar from '../components/SettingBar'\r\nimport PollFiles from '../modules/PollFiles'\r\n\r\nconst Attachment = () => {\r\n  let { id, code } = useParams();\r\n\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title={`Файлы ` + code} />\r\n      <div style={{ paddingTop: '10px' }}>\r\n        <Container maxWidth=\"xl\">\r\n          <PollFiles id={id} />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Attachment","import React, { Fragment } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst PollWiki = () => {\r\n  return (\r\n    <Fragment>\r\n      <Grid container item>\r\n        WIKI\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PollWiki","import React, { Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport SettingBar from '../components/SettingBar'\r\nimport PollWiki from '../modules/PollWiki'\r\n\r\nconst Wiki = () => {\r\n  let { id, code } = useParams();\r\n\r\n  return (\r\n    <Fragment>\r\n      <SettingBar title={`Wiki ` + code} />\r\n      <Container maxWidth=\"lg\">\r\n        <PollWiki />\r\n      </Container>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Wiki","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\n\r\nimport { Home, Drive, Results, Analyze, Settings, Tester, Attachment, Wiki } from '../../pages'\r\n\r\nconst Router = () => {\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path={\"/\"} exact component={Home} />\r\n        <Route path={\"/results/:id/:code\"} component={Results} />\r\n        <Route path={\"/poll-settings/:id/:code\"} component={Settings} />\r\n        <Route path={\"/drive/:id/:code\"} component={Drive} />\r\n        <Route path={\"/analyze\"} component={Analyze} />\r\n        <Route path={\"/attachment/:id/:code\"} component={Attachment} />\r\n        <Route path={\"/poll-wiki/:id/:code\"} component={Wiki} />\r\n        <Route path={\"/tester\"} component={Tester} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default Router","import React from 'react';\nimport { ApolloClient, InMemoryCache } from '@apollo/client'\nimport { ApolloProvider } from '@apollo/client';\n\nimport './App.scss';\nimport Router from '../Router'\n\nconst client = new ApolloClient({\n  uri: 'http://192.168.31.83:4000/graphql',\n  cache: new InMemoryCache()\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"App\">\n        <Router />\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}